// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch1sect3');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch1sect3.content = (function() { 
var book$sicp$texts$ch1sect3$content__delegate = function (args__8262__auto__){
var vec__194633 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__194633,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__194633,(1),null);
var G__194634 = cljs.core.PersistentArrayMap.EMPTY;
var G__194635 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Formulating Abstractions with Higher-Order Procedures"], null),(function (){var _STAR_references_STAR_194662 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194663 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_194664 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194665 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__194666 = cljs.core.PersistentArrayMap.EMPTY;
var G__194667 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have seen that procedures are, in effect, abstractions that describe compound operations on numbers independent of the particular numbers. For example, when we"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194666,G__194667) : tailrecursion.hoplon.markdown.para_node.call(null,G__194666,G__194667));
})(),(function (){var G__194698 = (function (){var G__194699 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194700 = (function (){var G__194701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194702 = "(";
var G__194703 = (function (){var G__194715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194716 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194715,G__194716) : tailrecursion.hoplon.span.call(null,G__194715,G__194716));
})();
var G__194704 = (function (){var G__194717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194718 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194717,G__194718) : tailrecursion.hoplon.span.call(null,G__194717,G__194718));
})();
var G__194705 = " [";
var G__194706 = (function (){var G__194719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194720 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194719,G__194720) : tailrecursion.hoplon.span.call(null,G__194719,G__194720));
})();
var G__194707 = "] (";
var G__194708 = (function (){var G__194721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194722 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194721,G__194722) : tailrecursion.hoplon.span.call(null,G__194721,G__194722));
})();
var G__194709 = (function (){var G__194723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194724 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194723,G__194724) : tailrecursion.hoplon.span.call(null,G__194723,G__194724));
})();
var G__194710 = " ";
var G__194711 = (function (){var G__194725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194726 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194725,G__194726) : tailrecursion.hoplon.span.call(null,G__194725,G__194726));
})();
var G__194712 = " ";
var G__194713 = (function (){var G__194727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194728 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194727,G__194728) : tailrecursion.hoplon.span.call(null,G__194727,G__194728));
})();
var G__194714 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__194701,G__194702,G__194703,G__194704,G__194705,G__194706,G__194707,G__194708,G__194709,G__194710,G__194711,G__194712,G__194713,G__194714) : tailrecursion.hoplon.pre.call(null,G__194701,G__194702,G__194703,G__194704,G__194705,G__194706,G__194707,G__194708,G__194709,G__194710,G__194711,G__194712,G__194713,G__194714));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194699,G__194700) : tailrecursion.hoplon.div.call(null,G__194699,G__194700));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194698) : tailrecursion.hoplon.div.call(null,G__194698));
})(),(function (){var G__194729 = cljs.core.PersistentArrayMap.EMPTY;
var G__194730 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We are not talking about the cube of a particular number, but rather about a method for obtaining the cube of any number. Of course we could get along without ever defining this procedure, by always writing expressions such as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194729,G__194730) : tailrecursion.hoplon.markdown.para_node.call(null,G__194729,G__194730));
})(),(function (){var G__194780 = (function (){var G__194781 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194782 = (function (){var G__194783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194784 = "(";
var G__194785 = (function (){var G__194806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194807 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194806,G__194807) : tailrecursion.hoplon.span.call(null,G__194806,G__194807));
})();
var G__194786 = (function (){var G__194808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194809 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194808,G__194809) : tailrecursion.hoplon.span.call(null,G__194808,G__194809));
})();
var G__194787 = " ";
var G__194788 = (function (){var G__194810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194811 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194810,G__194811) : tailrecursion.hoplon.span.call(null,G__194810,G__194811));
})();
var G__194789 = " ";
var G__194790 = (function (){var G__194812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194813 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194812,G__194813) : tailrecursion.hoplon.span.call(null,G__194812,G__194813));
})();
var G__194791 = ")\n(";
var G__194792 = (function (){var G__194814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194815 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194814,G__194815) : tailrecursion.hoplon.span.call(null,G__194814,G__194815));
})();
var G__194793 = (function (){var G__194816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194817 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194816,G__194817) : tailrecursion.hoplon.span.call(null,G__194816,G__194817));
})();
var G__194794 = " ";
var G__194795 = (function (){var G__194818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194819 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194818,G__194819) : tailrecursion.hoplon.span.call(null,G__194818,G__194819));
})();
var G__194796 = " ";
var G__194797 = (function (){var G__194820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194821 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194820,G__194821) : tailrecursion.hoplon.span.call(null,G__194820,G__194821));
})();
var G__194798 = ")\n(";
var G__194799 = (function (){var G__194822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194823 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194822,G__194823) : tailrecursion.hoplon.span.call(null,G__194822,G__194823));
})();
var G__194800 = (function (){var G__194824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194825 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194824,G__194825) : tailrecursion.hoplon.span.call(null,G__194824,G__194825));
})();
var G__194801 = " ";
var G__194802 = (function (){var G__194826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194827 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194826,G__194827) : tailrecursion.hoplon.span.call(null,G__194826,G__194827));
})();
var G__194803 = " ";
var G__194804 = (function (){var G__194828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194829 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194828,G__194829) : tailrecursion.hoplon.span.call(null,G__194828,G__194829));
})();
var G__194805 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__194783,G__194784,G__194785,G__194786,G__194787,G__194788,G__194789,G__194790,G__194791,G__194792,G__194793,G__194794,G__194795,G__194796,G__194797,G__194798,G__194799,G__194800,G__194801,G__194802,G__194803,G__194804,G__194805) : tailrecursion.hoplon.pre.call(null,G__194783,G__194784,G__194785,G__194786,G__194787,G__194788,G__194789,G__194790,G__194791,G__194792,G__194793,G__194794,G__194795,G__194796,G__194797,G__194798,G__194799,G__194800,G__194801,G__194802,G__194803,G__194804,G__194805));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194781,G__194782) : tailrecursion.hoplon.div.call(null,G__194781,G__194782));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194780) : tailrecursion.hoplon.div.call(null,G__194780));
})(),(function (){var G__194830 = cljs.core.PersistentArrayMap.EMPTY;
var G__194831 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and never mentioning ",(function (){var G__194832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cube"], null);
var G__194833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194832,G__194833) : tailrecursion.hoplon.markdown.code_node.call(null,G__194832,G__194833));
})()," explicitly. This would place us at a serious disadvantage, forcing us to work always at the level of the particular operations that happen to be primitives in the language (multiplication, in this case) rather than in terms of higher-level operations. Our programs would be able to compute cubes, but our language would lack the ability to express the concept of cubing. One of the things we should demand from a powerful programming language is the ability to build abstractions by assigning names to common patterns and then to work in terms of the abstractions directly. Procedures provide this ability. This is why all but the most primitive programming languages include mechanisms for defining procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194830,G__194831) : tailrecursion.hoplon.markdown.para_node.call(null,G__194830,G__194831));
})(),(function (){var G__194834 = cljs.core.PersistentArrayMap.EMPTY;
var G__194835 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Yet even in numerical processing we will be severely limited in our ability to create abstractions if we are restricted to procedures whose parameters must be numbers. Often the same programming pattern will be used with a number of different procedures. To express such patterns as concepts, we will need to construct procedures that can accept procedures as arguments or return procedures as values. Procedures that manipulate procedures are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["higher-order procedures"], null)], 0)),". This section shows how higher-order procedures can serve as powerful abstraction mechanisms, vastly increasing the expressive power of our language."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194834,G__194835) : tailrecursion.hoplon.markdown.para_node.call(null,G__194834,G__194835));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194665;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194664;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194663;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194662;
}})()], 0));
var G__194636 = "";
var G__194637 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Procedures as Arguments"], null),(function (){var _STAR_references_STAR_194836 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194837 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_194838 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_194839 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return cljs.core.PersistentVector.fromArray([(function (){var G__194840 = cljs.core.PersistentArrayMap.EMPTY;
var G__194841 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the following three procedures. The first computes the sum of the integers from ",(function (){var G__194842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__194843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194842,G__194843) : tailrecursion.hoplon.markdown.code_node.call(null,G__194842,G__194843));
})()," through ",(function (){var G__194844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__194845 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__194844,G__194845) : tailrecursion.hoplon.markdown.code_node.call(null,G__194844,G__194845));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194840,G__194841) : tailrecursion.hoplon.markdown.para_node.call(null,G__194840,G__194841));
})(),(function (){var G__194906 = (function (){var G__194907 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__194908 = (function (){var G__194909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__194910 = "(";
var G__194911 = (function (){var G__194937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194938 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194937,G__194938) : tailrecursion.hoplon.span.call(null,G__194937,G__194938));
})();
var G__194912 = (function (){var G__194939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194940 = "sum-integers";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194939,G__194940) : tailrecursion.hoplon.span.call(null,G__194939,G__194940));
})();
var G__194913 = " [";
var G__194914 = (function (){var G__194941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194942 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194941,G__194942) : tailrecursion.hoplon.span.call(null,G__194941,G__194942));
})();
var G__194915 = " ";
var G__194916 = (function (){var G__194943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194944 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194943,G__194944) : tailrecursion.hoplon.span.call(null,G__194943,G__194944));
})();
var G__194917 = "]\n  (";
var G__194918 = (function (){var G__194945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__194946 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194945,G__194946) : tailrecursion.hoplon.span.call(null,G__194945,G__194946));
})();
var G__194919 = "(";
var G__194920 = (function (){var G__194947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194948 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194947,G__194948) : tailrecursion.hoplon.span.call(null,G__194947,G__194948));
})();
var G__194921 = (function (){var G__194949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194950 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194949,G__194950) : tailrecursion.hoplon.span.call(null,G__194949,G__194950));
})();
var G__194922 = " ";
var G__194923 = (function (){var G__194951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194952 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194951,G__194952) : tailrecursion.hoplon.span.call(null,G__194951,G__194952));
})();
var G__194924 = ")\n      ";
var G__194925 = (function (){var G__194953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__194954 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194953,G__194954) : tailrecursion.hoplon.span.call(null,G__194953,G__194954));
})();
var G__194926 = "\n      (";
var G__194927 = (function (){var G__194955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194956 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194955,G__194956) : tailrecursion.hoplon.span.call(null,G__194955,G__194956));
})();
var G__194928 = (function (){var G__194957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194958 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194957,G__194958) : tailrecursion.hoplon.span.call(null,G__194957,G__194958));
})();
var G__194929 = " (";
var G__194930 = (function (){var G__194959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__194960 = "sum-integers";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194959,G__194960) : tailrecursion.hoplon.span.call(null,G__194959,G__194960));
})();
var G__194931 = " (";
var G__194932 = (function (){var G__194961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__194962 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194961,G__194962) : tailrecursion.hoplon.span.call(null,G__194961,G__194962));
})();
var G__194933 = (function (){var G__194963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194964 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194963,G__194964) : tailrecursion.hoplon.span.call(null,G__194963,G__194964));
})();
var G__194934 = ") ";
var G__194935 = (function (){var G__194965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__194966 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__194965,G__194966) : tailrecursion.hoplon.span.call(null,G__194965,G__194966));
})();
var G__194936 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__194909,G__194910,G__194911,G__194912,G__194913,G__194914,G__194915,G__194916,G__194917,G__194918,G__194919,G__194920,G__194921,G__194922,G__194923,G__194924,G__194925,G__194926,G__194927,G__194928,G__194929,G__194930,G__194931,G__194932,G__194933,G__194934,G__194935,G__194936) : tailrecursion.hoplon.pre.call(null,G__194909,G__194910,G__194911,G__194912,G__194913,G__194914,G__194915,G__194916,G__194917,G__194918,G__194919,G__194920,G__194921,G__194922,G__194923,G__194924,G__194925,G__194926,G__194927,G__194928,G__194929,G__194930,G__194931,G__194932,G__194933,G__194934,G__194935,G__194936));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__194907,G__194908) : tailrecursion.hoplon.div.call(null,G__194907,G__194908));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__194906) : tailrecursion.hoplon.div.call(null,G__194906));
})(),(function (){var G__194967 = cljs.core.PersistentArrayMap.EMPTY;
var G__194968 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The second computes the sum of the cubes of the integers in the given range:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__194967,G__194968) : tailrecursion.hoplon.markdown.para_node.call(null,G__194967,G__194968));
})(),(function (){var G__195034 = (function (){var G__195035 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195036 = (function (){var G__195037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195038 = "(";
var G__195039 = (function (){var G__195068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195069 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195068,G__195069) : tailrecursion.hoplon.span.call(null,G__195068,G__195069));
})();
var G__195040 = (function (){var G__195070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195071 = "sum-cubes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195070,G__195071) : tailrecursion.hoplon.span.call(null,G__195070,G__195071));
})();
var G__195041 = " [";
var G__195042 = (function (){var G__195072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195073 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195072,G__195073) : tailrecursion.hoplon.span.call(null,G__195072,G__195073));
})();
var G__195043 = " ";
var G__195044 = (function (){var G__195074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195075 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195074,G__195075) : tailrecursion.hoplon.span.call(null,G__195074,G__195075));
})();
var G__195045 = "]\n  (";
var G__195046 = (function (){var G__195076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195077 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195076,G__195077) : tailrecursion.hoplon.span.call(null,G__195076,G__195077));
})();
var G__195047 = "(";
var G__195048 = (function (){var G__195078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195079 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195078,G__195079) : tailrecursion.hoplon.span.call(null,G__195078,G__195079));
})();
var G__195049 = (function (){var G__195080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195081 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195080,G__195081) : tailrecursion.hoplon.span.call(null,G__195080,G__195081));
})();
var G__195050 = " ";
var G__195051 = (function (){var G__195082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195083 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195082,G__195083) : tailrecursion.hoplon.span.call(null,G__195082,G__195083));
})();
var G__195052 = ")\n      ";
var G__195053 = (function (){var G__195084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195085 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195084,G__195085) : tailrecursion.hoplon.span.call(null,G__195084,G__195085));
})();
var G__195054 = "\n      (";
var G__195055 = (function (){var G__195086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195087 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195086,G__195087) : tailrecursion.hoplon.span.call(null,G__195086,G__195087));
})();
var G__195056 = "(";
var G__195057 = (function (){var G__195088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195089 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195088,G__195089) : tailrecursion.hoplon.span.call(null,G__195088,G__195089));
})();
var G__195058 = " ";
var G__195059 = (function (){var G__195090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195091 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195090,G__195091) : tailrecursion.hoplon.span.call(null,G__195090,G__195091));
})();
var G__195060 = ") (";
var G__195061 = (function (){var G__195092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195093 = "sum-cubes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195092,G__195093) : tailrecursion.hoplon.span.call(null,G__195092,G__195093));
})();
var G__195062 = " (";
var G__195063 = (function (){var G__195094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195095 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195094,G__195095) : tailrecursion.hoplon.span.call(null,G__195094,G__195095));
})();
var G__195064 = (function (){var G__195096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195097 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195096,G__195097) : tailrecursion.hoplon.span.call(null,G__195096,G__195097));
})();
var G__195065 = ") ";
var G__195066 = (function (){var G__195098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195099 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195098,G__195099) : tailrecursion.hoplon.span.call(null,G__195098,G__195099));
})();
var G__195067 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__195037,G__195038,G__195039,G__195040,G__195041,G__195042,G__195043,G__195044,G__195045,G__195046,G__195047,G__195048,G__195049,G__195050,G__195051,G__195052,G__195053,G__195054,G__195055,G__195056,G__195057,G__195058,G__195059,G__195060,G__195061,G__195062,G__195063,G__195064,G__195065,G__195066,G__195067) : tailrecursion.hoplon.pre.call(null,G__195037,G__195038,G__195039,G__195040,G__195041,G__195042,G__195043,G__195044,G__195045,G__195046,G__195047,G__195048,G__195049,G__195050,G__195051,G__195052,G__195053,G__195054,G__195055,G__195056,G__195057,G__195058,G__195059,G__195060,G__195061,G__195062,G__195063,G__195064,G__195065,G__195066,G__195067));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195035,G__195036) : tailrecursion.hoplon.div.call(null,G__195035,G__195036));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195034) : tailrecursion.hoplon.div.call(null,G__195034));
})(),(function (){var G__195100 = cljs.core.PersistentArrayMap.EMPTY;
var G__195101 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The third computes the sum of a sequence of terms in the series"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195100,G__195101) : tailrecursion.hoplon.markdown.para_node.call(null,G__195100,G__195101));
})(),(function (){var G__195102 = cljs.core.PersistentArrayMap.EMPTY;
var G__195103 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\frac{1}{1\\cdot3}+\\frac{1}{5\\cdot7}+\\frac{1}{9\\cdot11}+",(function (){var G__195104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__195105 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195104,G__195105) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195104,G__195105));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195102,G__195103) : tailrecursion.hoplon.markdown.para_node.call(null,G__195102,G__195103));
})(),(function (){var G__195106 = cljs.core.PersistentArrayMap.EMPTY;
var G__195107 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which converges to \\(\\pi/8\\) (very slowly):",(function (){var G__195108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__195109 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This series, usually written in the equivalent form \\((\\pi/4)=1-(1/3)+(1/5)-(1/7)+",(function (){var G__195110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__195111 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195110,G__195111) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195110,G__195111));
})(),"\\), is due to Leibniz. We",(function (){var G__195112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__195113 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195112,G__195113) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195112,G__195113));
})(),"ll see how to use this as the basis for some fancy numerical tricks in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/3/sect/5/sub/3/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 3.5.3"], null)], 0))], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195108,G__195109) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195108,G__195109));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195106,G__195107) : tailrecursion.hoplon.markdown.para_node.call(null,G__195106,G__195107));
})(),(function (){var G__195200 = (function (){var G__195201 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195202 = (function (){var G__195203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195204 = "(";
var G__195205 = (function (){var G__195243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195244 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195243,G__195244) : tailrecursion.hoplon.span.call(null,G__195243,G__195244));
})();
var G__195206 = (function (){var G__195245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195246 = "pi-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195245,G__195246) : tailrecursion.hoplon.span.call(null,G__195245,G__195246));
})();
var G__195207 = " [";
var G__195208 = (function (){var G__195247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195248 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195247,G__195248) : tailrecursion.hoplon.span.call(null,G__195247,G__195248));
})();
var G__195209 = " ";
var G__195210 = (function (){var G__195249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195250 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195249,G__195250) : tailrecursion.hoplon.span.call(null,G__195249,G__195250));
})();
var G__195211 = "]\n  (";
var G__195212 = (function (){var G__195251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195252 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195251,G__195252) : tailrecursion.hoplon.span.call(null,G__195251,G__195252));
})();
var G__195213 = "(";
var G__195214 = (function (){var G__195253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195254 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195253,G__195254) : tailrecursion.hoplon.span.call(null,G__195253,G__195254));
})();
var G__195215 = (function (){var G__195255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195256 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195255,G__195256) : tailrecursion.hoplon.span.call(null,G__195255,G__195256));
})();
var G__195216 = " ";
var G__195217 = (function (){var G__195257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195258 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195257,G__195258) : tailrecursion.hoplon.span.call(null,G__195257,G__195258));
})();
var G__195218 = ")\n      ";
var G__195219 = (function (){var G__195259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195260 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195259,G__195260) : tailrecursion.hoplon.span.call(null,G__195259,G__195260));
})();
var G__195220 = "\n      (";
var G__195221 = (function (){var G__195261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195262 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195261,G__195262) : tailrecursion.hoplon.span.call(null,G__195261,G__195262));
})();
var G__195222 = "(";
var G__195223 = (function (){var G__195263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195264 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195263,G__195264) : tailrecursion.hoplon.span.call(null,G__195263,G__195264));
})();
var G__195224 = (function (){var G__195265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195266 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195265,G__195266) : tailrecursion.hoplon.span.call(null,G__195265,G__195266));
})();
var G__195225 = " (";
var G__195226 = (function (){var G__195267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195268 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195267,G__195268) : tailrecursion.hoplon.span.call(null,G__195267,G__195268));
})();
var G__195227 = (function (){var G__195269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195270 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195269,G__195270) : tailrecursion.hoplon.span.call(null,G__195269,G__195270));
})();
var G__195228 = " (";
var G__195229 = (function (){var G__195271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195272 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195271,G__195272) : tailrecursion.hoplon.span.call(null,G__195271,G__195272));
})();
var G__195230 = (function (){var G__195273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195274 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195273,G__195274) : tailrecursion.hoplon.span.call(null,G__195273,G__195274));
})();
var G__195231 = " ";
var G__195232 = (function (){var G__195275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195276 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195275,G__195276) : tailrecursion.hoplon.span.call(null,G__195275,G__195276));
})();
var G__195233 = "))) (";
var G__195234 = (function (){var G__195277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195278 = "pi-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195277,G__195278) : tailrecursion.hoplon.span.call(null,G__195277,G__195278));
})();
var G__195235 = " (";
var G__195236 = (function (){var G__195279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195280 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195279,G__195280) : tailrecursion.hoplon.span.call(null,G__195279,G__195280));
})();
var G__195237 = (function (){var G__195281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195282 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195281,G__195282) : tailrecursion.hoplon.span.call(null,G__195281,G__195282));
})();
var G__195238 = " ";
var G__195239 = (function (){var G__195283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195284 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195283,G__195284) : tailrecursion.hoplon.span.call(null,G__195283,G__195284));
})();
var G__195240 = ") ";
var G__195241 = (function (){var G__195285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195286 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195285,G__195286) : tailrecursion.hoplon.span.call(null,G__195285,G__195286));
})();
var G__195242 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40(G__195203,G__195204,G__195205,G__195206,G__195207,G__195208,G__195209,G__195210,G__195211,G__195212,G__195213,G__195214,G__195215,G__195216,G__195217,G__195218,G__195219,G__195220,G__195221,G__195222,G__195223,G__195224,G__195225,G__195226,G__195227,G__195228,G__195229,G__195230,G__195231,G__195232,G__195233,G__195234,G__195235,G__195236,G__195237,G__195238,G__195239,G__195240,G__195241,G__195242) : tailrecursion.hoplon.pre.call(null,G__195203,G__195204,G__195205,G__195206,G__195207,G__195208,G__195209,G__195210,G__195211,G__195212,G__195213,G__195214,G__195215,G__195216,G__195217,G__195218,G__195219,G__195220,G__195221,G__195222,G__195223,G__195224,G__195225,G__195226,G__195227,G__195228,G__195229,G__195230,G__195231,G__195232,G__195233,G__195234,G__195235,G__195236,G__195237,G__195238,G__195239,G__195240,G__195241,G__195242));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195201,G__195202) : tailrecursion.hoplon.div.call(null,G__195201,G__195202));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195200) : tailrecursion.hoplon.div.call(null,G__195200));
})(),(function (){var G__195287 = cljs.core.PersistentArrayMap.EMPTY;
var G__195288 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These three procedures clearly share a common underlying pattern. They are for the most part identical, differing only in the name of the procedure, the function of a used to compute the term to be added, and the function that provides the next value of ",(function (){var G__195289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__195290 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195289,G__195290) : tailrecursion.hoplon.markdown.code_node.call(null,G__195289,G__195290));
})(),". We could generate each of the procedures by filling in slots in the same template:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195287,G__195288) : tailrecursion.hoplon.markdown.para_node.call(null,G__195287,G__195288));
})(),(function (){var G__195357 = (function (){var G__195358 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195359 = (function (){var G__195360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195361 = "(";
var G__195362 = (function (){var G__195392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195393 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195392,G__195393) : tailrecursion.hoplon.span.call(null,G__195392,G__195393));
})();
var G__195363 = (function (){var G__195394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195395 = "<name>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195394,G__195395) : tailrecursion.hoplon.span.call(null,G__195394,G__195395));
})();
var G__195364 = " [";
var G__195365 = (function (){var G__195396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195397 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195396,G__195397) : tailrecursion.hoplon.span.call(null,G__195396,G__195397));
})();
var G__195366 = " ";
var G__195367 = (function (){var G__195398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195399 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195398,G__195399) : tailrecursion.hoplon.span.call(null,G__195398,G__195399));
})();
var G__195368 = "]\n  (";
var G__195369 = (function (){var G__195400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195401 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195400,G__195401) : tailrecursion.hoplon.span.call(null,G__195400,G__195401));
})();
var G__195370 = "(";
var G__195371 = (function (){var G__195402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195403 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195402,G__195403) : tailrecursion.hoplon.span.call(null,G__195402,G__195403));
})();
var G__195372 = (function (){var G__195404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195405 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195404,G__195405) : tailrecursion.hoplon.span.call(null,G__195404,G__195405));
})();
var G__195373 = " ";
var G__195374 = (function (){var G__195406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195407 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195406,G__195407) : tailrecursion.hoplon.span.call(null,G__195406,G__195407));
})();
var G__195375 = ")\n      ";
var G__195376 = (function (){var G__195408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195409 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195408,G__195409) : tailrecursion.hoplon.span.call(null,G__195408,G__195409));
})();
var G__195377 = "\n      (";
var G__195378 = (function (){var G__195410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195411 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195410,G__195411) : tailrecursion.hoplon.span.call(null,G__195410,G__195411));
})();
var G__195379 = "(";
var G__195380 = (function (){var G__195412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195413 = "<term>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195412,G__195413) : tailrecursion.hoplon.span.call(null,G__195412,G__195413));
})();
var G__195381 = " ";
var G__195382 = (function (){var G__195414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195415 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195414,G__195415) : tailrecursion.hoplon.span.call(null,G__195414,G__195415));
})();
var G__195383 = ")\n         (";
var G__195384 = (function (){var G__195416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195417 = "<name>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195416,G__195417) : tailrecursion.hoplon.span.call(null,G__195416,G__195417));
})();
var G__195385 = " (";
var G__195386 = (function (){var G__195418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195419 = "<next>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195418,G__195419) : tailrecursion.hoplon.span.call(null,G__195418,G__195419));
})();
var G__195387 = " ";
var G__195388 = (function (){var G__195420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195421 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195420,G__195421) : tailrecursion.hoplon.span.call(null,G__195420,G__195421));
})();
var G__195389 = ") ";
var G__195390 = (function (){var G__195422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195423 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195422,G__195423) : tailrecursion.hoplon.span.call(null,G__195422,G__195423));
})();
var G__195391 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$32 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$32(G__195360,G__195361,G__195362,G__195363,G__195364,G__195365,G__195366,G__195367,G__195368,G__195369,G__195370,G__195371,G__195372,G__195373,G__195374,G__195375,G__195376,G__195377,G__195378,G__195379,G__195380,G__195381,G__195382,G__195383,G__195384,G__195385,G__195386,G__195387,G__195388,G__195389,G__195390,G__195391) : tailrecursion.hoplon.pre.call(null,G__195360,G__195361,G__195362,G__195363,G__195364,G__195365,G__195366,G__195367,G__195368,G__195369,G__195370,G__195371,G__195372,G__195373,G__195374,G__195375,G__195376,G__195377,G__195378,G__195379,G__195380,G__195381,G__195382,G__195383,G__195384,G__195385,G__195386,G__195387,G__195388,G__195389,G__195390,G__195391));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195358,G__195359) : tailrecursion.hoplon.div.call(null,G__195358,G__195359));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195357) : tailrecursion.hoplon.div.call(null,G__195357));
})(),(function (){var G__195424 = cljs.core.PersistentArrayMap.EMPTY;
var G__195425 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The presence of such a common pattern is strong evidence that there is a useful abstraction waiting to be brought to the surface. Indeed, mathematicians long ago identified the abstraction of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["summation of a series"], null)], 0))," and invented ",(function (){var G__195426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__195427 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sigma notation,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195426,G__195427) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195426,G__195427));
})()," for example"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195424,G__195425) : tailrecursion.hoplon.markdown.para_node.call(null,G__195424,G__195425));
})(),(function (){var G__195428 = cljs.core.PersistentArrayMap.EMPTY;
var G__195429 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\sum_{n=a}^bf(n)=f(a)+",(function (){var G__195430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__195431 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195430,G__195431) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195430,G__195431));
})(),"+f(b)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195428,G__195429) : tailrecursion.hoplon.markdown.para_node.call(null,G__195428,G__195429));
})(),(function (){var G__195432 = cljs.core.PersistentArrayMap.EMPTY;
var G__195433 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to express this concept. The power of sigma notation is that it allows mathematicians to deal with the concept of summation itself rather than only with particular sums ",(function (){var G__195434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__195435 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__195434,G__195435) : tailrecursion.hoplon.markdown.simple_node.call(null,G__195434,G__195435));
})()," for example, to formulate general results about sums that are independent of the particular series being summed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195432,G__195433) : tailrecursion.hoplon.markdown.para_node.call(null,G__195432,G__195433));
})(),(function (){var G__195436 = cljs.core.PersistentArrayMap.EMPTY;
var G__195437 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, as program designers, we would like our language to be powerful enough so that we can write a procedure that expresses the concept of summation itself rather than only procedures that compute particular sums. We can do so readily in our procedural language by taking the common template shown above and transforming the ",(function (){var G__195438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__195439 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["slots"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195438,G__195439) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195438,G__195439));
})()," into formal parameters:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195436,G__195437) : tailrecursion.hoplon.markdown.para_node.call(null,G__195436,G__195437));
})(),(function (){var G__195519 = (function (){var G__195520 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195521 = (function (){var G__195522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195523 = "(";
var G__195524 = (function (){var G__195559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195560 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195559,G__195560) : tailrecursion.hoplon.span.call(null,G__195559,G__195560));
})();
var G__195525 = (function (){var G__195561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195562 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195561,G__195562) : tailrecursion.hoplon.span.call(null,G__195561,G__195562));
})();
var G__195526 = " [";
var G__195527 = (function (){var G__195563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195564 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195563,G__195564) : tailrecursion.hoplon.span.call(null,G__195563,G__195564));
})();
var G__195528 = " ";
var G__195529 = (function (){var G__195565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195566 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195565,G__195566) : tailrecursion.hoplon.span.call(null,G__195565,G__195566));
})();
var G__195530 = " ";
var G__195531 = (function (){var G__195567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195568 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195567,G__195568) : tailrecursion.hoplon.span.call(null,G__195567,G__195568));
})();
var G__195532 = (function (){var G__195569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195570 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195569,G__195570) : tailrecursion.hoplon.span.call(null,G__195569,G__195570));
})();
var G__195533 = "]\n  (";
var G__195534 = (function (){var G__195571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195572 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195571,G__195572) : tailrecursion.hoplon.span.call(null,G__195571,G__195572));
})();
var G__195535 = "(";
var G__195536 = (function (){var G__195573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195574 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195573,G__195574) : tailrecursion.hoplon.span.call(null,G__195573,G__195574));
})();
var G__195537 = (function (){var G__195575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195576 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195575,G__195576) : tailrecursion.hoplon.span.call(null,G__195575,G__195576));
})();
var G__195538 = " ";
var G__195539 = (function (){var G__195577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195578 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195577,G__195578) : tailrecursion.hoplon.span.call(null,G__195577,G__195578));
})();
var G__195540 = ")\n      ";
var G__195541 = (function (){var G__195579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195580 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195579,G__195580) : tailrecursion.hoplon.span.call(null,G__195579,G__195580));
})();
var G__195542 = "\n      (";
var G__195543 = (function (){var G__195581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195582 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195581,G__195582) : tailrecursion.hoplon.span.call(null,G__195581,G__195582));
})();
var G__195544 = "(";
var G__195545 = (function (){var G__195583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195584 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195583,G__195584) : tailrecursion.hoplon.span.call(null,G__195583,G__195584));
})();
var G__195546 = " ";
var G__195547 = (function (){var G__195585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195586 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195585,G__195586) : tailrecursion.hoplon.span.call(null,G__195585,G__195586));
})();
var G__195548 = ")\n         (";
var G__195549 = (function (){var G__195587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195588 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195587,G__195588) : tailrecursion.hoplon.span.call(null,G__195587,G__195588));
})();
var G__195550 = " ";
var G__195551 = (function (){var G__195589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195590 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195589,G__195590) : tailrecursion.hoplon.span.call(null,G__195589,G__195590));
})();
var G__195552 = " (";
var G__195553 = (function (){var G__195591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195592 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195591,G__195592) : tailrecursion.hoplon.span.call(null,G__195591,G__195592));
})();
var G__195554 = (function (){var G__195593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195594 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195593,G__195594) : tailrecursion.hoplon.span.call(null,G__195593,G__195594));
})();
var G__195555 = ") ";
var G__195556 = (function (){var G__195595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195596 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195595,G__195596) : tailrecursion.hoplon.span.call(null,G__195595,G__195596));
})();
var G__195557 = (function (){var G__195597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195598 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195597,G__195598) : tailrecursion.hoplon.span.call(null,G__195597,G__195598));
})();
var G__195558 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$37 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$37(G__195522,G__195523,G__195524,G__195525,G__195526,G__195527,G__195528,G__195529,G__195530,G__195531,G__195532,G__195533,G__195534,G__195535,G__195536,G__195537,G__195538,G__195539,G__195540,G__195541,G__195542,G__195543,G__195544,G__195545,G__195546,G__195547,G__195548,G__195549,G__195550,G__195551,G__195552,G__195553,G__195554,G__195555,G__195556,G__195557,G__195558) : tailrecursion.hoplon.pre.call(null,G__195522,G__195523,G__195524,G__195525,G__195526,G__195527,G__195528,G__195529,G__195530,G__195531,G__195532,G__195533,G__195534,G__195535,G__195536,G__195537,G__195538,G__195539,G__195540,G__195541,G__195542,G__195543,G__195544,G__195545,G__195546,G__195547,G__195548,G__195549,G__195550,G__195551,G__195552,G__195553,G__195554,G__195555,G__195556,G__195557,G__195558));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195520,G__195521) : tailrecursion.hoplon.div.call(null,G__195520,G__195521));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195519) : tailrecursion.hoplon.div.call(null,G__195519));
})(),(function (){var G__195599 = cljs.core.PersistentArrayMap.EMPTY;
var G__195600 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that ",(function (){var G__195601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__195602 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195601,G__195602) : tailrecursion.hoplon.markdown.code_node.call(null,G__195601,G__195602));
})()," takes as its arguments the lower and upper bounds ",(function (){var G__195603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"a"], null);
var G__195604 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195603,G__195604) : tailrecursion.hoplon.markdown.code_node.call(null,G__195603,G__195604));
})()," and ",(function (){var G__195605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__195606 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195605,G__195606) : tailrecursion.hoplon.markdown.code_node.call(null,G__195605,G__195606));
})()," together with the procedures ",(function (){var G__195607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"term"], null);
var G__195608 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195607,G__195608) : tailrecursion.hoplon.markdown.code_node.call(null,G__195607,G__195608));
})()," and ",(function (){var G__195609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"next"], null);
var G__195610 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195609,G__195610) : tailrecursion.hoplon.markdown.code_node.call(null,G__195609,G__195610));
})(),". We can use ",(function (){var G__195611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__195612 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195611,G__195612) : tailrecursion.hoplon.markdown.code_node.call(null,G__195611,G__195612));
})()," just as we would any procedure. For example, we can use it (along with a procedure ",(function (){var G__195613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"inc"], null);
var G__195614 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195613,G__195614) : tailrecursion.hoplon.markdown.code_node.call(null,G__195613,G__195614));
})()," that increments its argument by 1) to define ",(function (){var G__195615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum-cubes"], null);
var G__195616 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195615,G__195616) : tailrecursion.hoplon.markdown.code_node.call(null,G__195615,G__195616));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195599,G__195600) : tailrecursion.hoplon.markdown.para_node.call(null,G__195599,G__195600));
})(),(function (){var G__195677 = (function (){var G__195678 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195679 = (function (){var G__195680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195681 = "(";
var G__195682 = (function (){var G__195708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195709 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195708,G__195709) : tailrecursion.hoplon.span.call(null,G__195708,G__195709));
})();
var G__195683 = (function (){var G__195710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195711 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195710,G__195711) : tailrecursion.hoplon.span.call(null,G__195710,G__195711));
})();
var G__195684 = "[";
var G__195685 = (function (){var G__195712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195713 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195712,G__195713) : tailrecursion.hoplon.span.call(null,G__195712,G__195713));
})();
var G__195686 = "] (";
var G__195687 = (function (){var G__195714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195715 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195714,G__195715) : tailrecursion.hoplon.span.call(null,G__195714,G__195715));
})();
var G__195688 = (function (){var G__195716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195717 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195716,G__195717) : tailrecursion.hoplon.span.call(null,G__195716,G__195717));
})();
var G__195689 = " ";
var G__195690 = (function (){var G__195718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195719 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195718,G__195719) : tailrecursion.hoplon.span.call(null,G__195718,G__195719));
})();
var G__195691 = "))\n(";
var G__195692 = (function (){var G__195720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195721 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195720,G__195721) : tailrecursion.hoplon.span.call(null,G__195720,G__195721));
})();
var G__195693 = (function (){var G__195722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195723 = "sum-cubes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195722,G__195723) : tailrecursion.hoplon.span.call(null,G__195722,G__195723));
})();
var G__195694 = " [";
var G__195695 = (function (){var G__195724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195725 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195724,G__195725) : tailrecursion.hoplon.span.call(null,G__195724,G__195725));
})();
var G__195696 = " ";
var G__195697 = (function (){var G__195726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195727 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195726,G__195727) : tailrecursion.hoplon.span.call(null,G__195726,G__195727));
})();
var G__195698 = "]\n  (";
var G__195699 = (function (){var G__195728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195729 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195728,G__195729) : tailrecursion.hoplon.span.call(null,G__195728,G__195729));
})();
var G__195700 = " ";
var G__195701 = (function (){var G__195730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195731 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195730,G__195731) : tailrecursion.hoplon.span.call(null,G__195730,G__195731));
})();
var G__195702 = " ";
var G__195703 = (function (){var G__195732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195733 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195732,G__195733) : tailrecursion.hoplon.span.call(null,G__195732,G__195733));
})();
var G__195704 = " ";
var G__195705 = (function (){var G__195734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195735 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195734,G__195735) : tailrecursion.hoplon.span.call(null,G__195734,G__195735));
})();
var G__195706 = (function (){var G__195736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195737 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195736,G__195737) : tailrecursion.hoplon.span.call(null,G__195736,G__195737));
})();
var G__195707 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__195680,G__195681,G__195682,G__195683,G__195684,G__195685,G__195686,G__195687,G__195688,G__195689,G__195690,G__195691,G__195692,G__195693,G__195694,G__195695,G__195696,G__195697,G__195698,G__195699,G__195700,G__195701,G__195702,G__195703,G__195704,G__195705,G__195706,G__195707) : tailrecursion.hoplon.pre.call(null,G__195680,G__195681,G__195682,G__195683,G__195684,G__195685,G__195686,G__195687,G__195688,G__195689,G__195690,G__195691,G__195692,G__195693,G__195694,G__195695,G__195696,G__195697,G__195698,G__195699,G__195700,G__195701,G__195702,G__195703,G__195704,G__195705,G__195706,G__195707));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195678,G__195679) : tailrecursion.hoplon.div.call(null,G__195678,G__195679));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195677) : tailrecursion.hoplon.div.call(null,G__195677));
})(),(function (){var G__195738 = cljs.core.PersistentArrayMap.EMPTY;
var G__195739 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this, we can compute the sum of the cubes of the integers from 1 to 10:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195738,G__195739) : tailrecursion.hoplon.markdown.para_node.call(null,G__195738,G__195739));
})(),(function (){var G__195760 = (function (){var G__195761 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195762 = (function (){var G__195763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195764 = "(";
var G__195765 = (function (){var G__195773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195774 = "sum-cubes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195773,G__195774) : tailrecursion.hoplon.span.call(null,G__195773,G__195774));
})();
var G__195766 = " ";
var G__195767 = (function (){var G__195775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195776 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195775,G__195776) : tailrecursion.hoplon.span.call(null,G__195775,G__195776));
})();
var G__195768 = " ";
var G__195769 = (function (){var G__195777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195778 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195777,G__195778) : tailrecursion.hoplon.span.call(null,G__195777,G__195778));
})();
var G__195770 = ")\n";
var G__195771 = (function (){var G__195779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195780 = "3025";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195779,G__195780) : tailrecursion.hoplon.span.call(null,G__195779,G__195780));
})();
var G__195772 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__195763,G__195764,G__195765,G__195766,G__195767,G__195768,G__195769,G__195770,G__195771,G__195772) : tailrecursion.hoplon.pre.call(null,G__195763,G__195764,G__195765,G__195766,G__195767,G__195768,G__195769,G__195770,G__195771,G__195772));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195761,G__195762) : tailrecursion.hoplon.div.call(null,G__195761,G__195762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195760) : tailrecursion.hoplon.div.call(null,G__195760));
})(),(function (){var G__195781 = cljs.core.PersistentArrayMap.EMPTY;
var G__195782 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the aid of an identity procedure to compute the term, we can define ",(function (){var G__195783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum-integers"], null);
var G__195784 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195783,G__195784) : tailrecursion.hoplon.markdown.code_node.call(null,G__195783,G__195784));
})()," in terms of ",(function (){var G__195785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__195786 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195785,G__195786) : tailrecursion.hoplon.markdown.code_node.call(null,G__195785,G__195786));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195781,G__195782) : tailrecursion.hoplon.markdown.para_node.call(null,G__195781,G__195782));
})(),(function (){var G__195839 = (function (){var G__195840 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195841 = (function (){var G__195842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195843 = "(";
var G__195844 = (function (){var G__195866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195867 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195866,G__195867) : tailrecursion.hoplon.span.call(null,G__195866,G__195867));
})();
var G__195845 = (function (){var G__195868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195869 = "identity ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195868,G__195869) : tailrecursion.hoplon.span.call(null,G__195868,G__195869));
})();
var G__195846 = "[";
var G__195847 = (function (){var G__195870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195871 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195870,G__195871) : tailrecursion.hoplon.span.call(null,G__195870,G__195871));
})();
var G__195848 = "] ";
var G__195849 = (function (){var G__195872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195873 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195872,G__195873) : tailrecursion.hoplon.span.call(null,G__195872,G__195873));
})();
var G__195850 = ")\n(";
var G__195851 = (function (){var G__195874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__195875 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195874,G__195875) : tailrecursion.hoplon.span.call(null,G__195874,G__195875));
})();
var G__195852 = (function (){var G__195876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195877 = "sum-integers";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195876,G__195877) : tailrecursion.hoplon.span.call(null,G__195876,G__195877));
})();
var G__195853 = " [";
var G__195854 = (function (){var G__195878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195879 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195878,G__195879) : tailrecursion.hoplon.span.call(null,G__195878,G__195879));
})();
var G__195855 = " ";
var G__195856 = (function (){var G__195880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195881 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195880,G__195881) : tailrecursion.hoplon.span.call(null,G__195880,G__195881));
})();
var G__195857 = "]\n  (";
var G__195858 = (function (){var G__195882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195883 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195882,G__195883) : tailrecursion.hoplon.span.call(null,G__195882,G__195883));
})();
var G__195859 = " ";
var G__195860 = (function (){var G__195884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195885 = "identity ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195884,G__195885) : tailrecursion.hoplon.span.call(null,G__195884,G__195885));
})();
var G__195861 = (function (){var G__195886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195887 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195886,G__195887) : tailrecursion.hoplon.span.call(null,G__195886,G__195887));
})();
var G__195862 = " ";
var G__195863 = (function (){var G__195888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__195889 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195888,G__195889) : tailrecursion.hoplon.span.call(null,G__195888,G__195889));
})();
var G__195864 = (function (){var G__195890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__195891 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195890,G__195891) : tailrecursion.hoplon.span.call(null,G__195890,G__195891));
})();
var G__195865 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__195842,G__195843,G__195844,G__195845,G__195846,G__195847,G__195848,G__195849,G__195850,G__195851,G__195852,G__195853,G__195854,G__195855,G__195856,G__195857,G__195858,G__195859,G__195860,G__195861,G__195862,G__195863,G__195864,G__195865) : tailrecursion.hoplon.pre.call(null,G__195842,G__195843,G__195844,G__195845,G__195846,G__195847,G__195848,G__195849,G__195850,G__195851,G__195852,G__195853,G__195854,G__195855,G__195856,G__195857,G__195858,G__195859,G__195860,G__195861,G__195862,G__195863,G__195864,G__195865));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195840,G__195841) : tailrecursion.hoplon.div.call(null,G__195840,G__195841));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195839) : tailrecursion.hoplon.div.call(null,G__195839));
})(),(function (){var G__195892 = cljs.core.PersistentArrayMap.EMPTY;
var G__195893 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The we can add up the integers from 1 to 10:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195892,G__195893) : tailrecursion.hoplon.markdown.para_node.call(null,G__195892,G__195893));
})(),(function (){var G__195914 = (function (){var G__195915 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__195916 = (function (){var G__195917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__195918 = "(";
var G__195919 = (function (){var G__195927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__195928 = "sum-integers";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195927,G__195928) : tailrecursion.hoplon.span.call(null,G__195927,G__195928));
})();
var G__195920 = " ";
var G__195921 = (function (){var G__195929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195930 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195929,G__195930) : tailrecursion.hoplon.span.call(null,G__195929,G__195930));
})();
var G__195922 = " ";
var G__195923 = (function (){var G__195931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195932 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195931,G__195932) : tailrecursion.hoplon.span.call(null,G__195931,G__195932));
})();
var G__195924 = ")\n";
var G__195925 = (function (){var G__195933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__195934 = "55";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__195933,G__195934) : tailrecursion.hoplon.span.call(null,G__195933,G__195934));
})();
var G__195926 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__195917,G__195918,G__195919,G__195920,G__195921,G__195922,G__195923,G__195924,G__195925,G__195926) : tailrecursion.hoplon.pre.call(null,G__195917,G__195918,G__195919,G__195920,G__195921,G__195922,G__195923,G__195924,G__195925,G__195926));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__195915,G__195916) : tailrecursion.hoplon.div.call(null,G__195915,G__195916));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__195914) : tailrecursion.hoplon.div.call(null,G__195914));
})(),(function (){var G__195935 = cljs.core.PersistentArrayMap.EMPTY;
var G__195936 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can also define ",(function (){var G__195937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-sum"], null);
var G__195938 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195937,G__195938) : tailrecursion.hoplon.markdown.code_node.call(null,G__195937,G__195938));
})()," in the same way:",(function (){var G__195939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__195940 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice that we have used block structure (section 1.1.8) to embed the definitions of ",(function (){var G__195941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-next"], null);
var G__195942 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195941,G__195942) : tailrecursion.hoplon.markdown.code_node.call(null,G__195941,G__195942));
})()," and ",(function (){var G__195943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-term"], null);
var G__195944 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195943,G__195944) : tailrecursion.hoplon.markdown.code_node.call(null,G__195943,G__195944));
})()," within ",(function (){var G__195945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-sum"], null);
var G__195946 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__195945,G__195946) : tailrecursion.hoplon.markdown.code_node.call(null,G__195945,G__195946));
})(),", since these procedures are unlikely to be useful for any other purpose and in Scheme (the language that SICP was written for), procedures written in this way are defined only in the local environment; the same is not true in Clojure. We will see how to get rid of them altogether (and hence how one would approach this problem) in section 1.3.2."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__195939,G__195940) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__195939,G__195940));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__195935,G__195936) : tailrecursion.hoplon.markdown.para_node.call(null,G__195935,G__195936));
})(),(function (){var G__196044 = (function (){var G__196045 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196046 = (function (){var G__196047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196048 = "(";
var G__196049 = (function (){var G__196092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196093 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196092,G__196093) : tailrecursion.hoplon.span.call(null,G__196092,G__196093));
})();
var G__196050 = (function (){var G__196094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196095 = "pi-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196094,G__196095) : tailrecursion.hoplon.span.call(null,G__196094,G__196095));
})();
var G__196051 = " [";
var G__196052 = (function (){var G__196096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196097 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196096,G__196097) : tailrecursion.hoplon.span.call(null,G__196096,G__196097));
})();
var G__196053 = " ";
var G__196054 = (function (){var G__196098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196099 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196098,G__196099) : tailrecursion.hoplon.span.call(null,G__196098,G__196099));
})();
var G__196055 = "]\n  (";
var G__196056 = (function (){var G__196100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196101 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196100,G__196101) : tailrecursion.hoplon.span.call(null,G__196100,G__196101));
})();
var G__196057 = (function (){var G__196102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196103 = "pi-term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196102,G__196103) : tailrecursion.hoplon.span.call(null,G__196102,G__196103));
})();
var G__196058 = " [";
var G__196059 = (function (){var G__196104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196105 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196104,G__196105) : tailrecursion.hoplon.span.call(null,G__196104,G__196105));
})();
var G__196060 = "]\n    (";
var G__196061 = (function (){var G__196106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196107 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196106,G__196107) : tailrecursion.hoplon.span.call(null,G__196106,G__196107));
})();
var G__196062 = (function (){var G__196108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196109 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196108,G__196109) : tailrecursion.hoplon.span.call(null,G__196108,G__196109));
})();
var G__196063 = " (";
var G__196064 = (function (){var G__196110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196111 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196110,G__196111) : tailrecursion.hoplon.span.call(null,G__196110,G__196111));
})();
var G__196065 = (function (){var G__196112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196113 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196112,G__196113) : tailrecursion.hoplon.span.call(null,G__196112,G__196113));
})();
var G__196066 = " (";
var G__196067 = (function (){var G__196114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196115 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196114,G__196115) : tailrecursion.hoplon.span.call(null,G__196114,G__196115));
})();
var G__196068 = (function (){var G__196116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196117 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196116,G__196117) : tailrecursion.hoplon.span.call(null,G__196116,G__196117));
})();
var G__196069 = " ";
var G__196070 = (function (){var G__196118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196119 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196118,G__196119) : tailrecursion.hoplon.span.call(null,G__196118,G__196119));
})();
var G__196071 = "))))\n  (";
var G__196072 = (function (){var G__196120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196121 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196120,G__196121) : tailrecursion.hoplon.span.call(null,G__196120,G__196121));
})();
var G__196073 = (function (){var G__196122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196123 = "pi-next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196122,G__196123) : tailrecursion.hoplon.span.call(null,G__196122,G__196123));
})();
var G__196074 = " [";
var G__196075 = (function (){var G__196124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196125 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196124,G__196125) : tailrecursion.hoplon.span.call(null,G__196124,G__196125));
})();
var G__196076 = "]\n    (";
var G__196077 = (function (){var G__196126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196127 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196126,G__196127) : tailrecursion.hoplon.span.call(null,G__196126,G__196127));
})();
var G__196078 = (function (){var G__196128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196129 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196128,G__196129) : tailrecursion.hoplon.span.call(null,G__196128,G__196129));
})();
var G__196079 = " ";
var G__196080 = (function (){var G__196130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196131 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196130,G__196131) : tailrecursion.hoplon.span.call(null,G__196130,G__196131));
})();
var G__196081 = "))\n  (";
var G__196082 = (function (){var G__196132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196133 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196132,G__196133) : tailrecursion.hoplon.span.call(null,G__196132,G__196133));
})();
var G__196083 = " ";
var G__196084 = (function (){var G__196134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196135 = "pi-term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196134,G__196135) : tailrecursion.hoplon.span.call(null,G__196134,G__196135));
})();
var G__196085 = " ";
var G__196086 = (function (){var G__196136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196137 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196136,G__196137) : tailrecursion.hoplon.span.call(null,G__196136,G__196137));
})();
var G__196087 = " ";
var G__196088 = (function (){var G__196138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196139 = "pi-next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196138,G__196139) : tailrecursion.hoplon.span.call(null,G__196138,G__196139));
})();
var G__196089 = " ";
var G__196090 = (function (){var G__196140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196141 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196140,G__196141) : tailrecursion.hoplon.span.call(null,G__196140,G__196141));
})();
var G__196091 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__196047,G__196048,G__196049,G__196050,G__196051,G__196052,G__196053,G__196054,G__196055,G__196056,G__196057,G__196058,G__196059,G__196060,G__196061,G__196062,G__196063,G__196064,G__196065,G__196066,G__196067,G__196068,G__196069,G__196070,G__196071,G__196072,G__196073,G__196074,G__196075,G__196076,G__196077,G__196078,G__196079,G__196080,G__196081,G__196082,G__196083,G__196084,G__196085,G__196086,G__196087,G__196088,G__196089,G__196090,G__196091) : tailrecursion.hoplon.pre.call(null,G__196047,G__196048,G__196049,G__196050,G__196051,G__196052,G__196053,G__196054,G__196055,G__196056,G__196057,G__196058,G__196059,G__196060,G__196061,G__196062,G__196063,G__196064,G__196065,G__196066,G__196067,G__196068,G__196069,G__196070,G__196071,G__196072,G__196073,G__196074,G__196075,G__196076,G__196077,G__196078,G__196079,G__196080,G__196081,G__196082,G__196083,G__196084,G__196085,G__196086,G__196087,G__196088,G__196089,G__196090,G__196091));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196045,G__196046) : tailrecursion.hoplon.div.call(null,G__196045,G__196046));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196044) : tailrecursion.hoplon.div.call(null,G__196044));
})(),(function (){var G__196142 = cljs.core.PersistentArrayMap.EMPTY;
var G__196143 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using these procedures, we can compute an approximation to \\(\\pi\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196142,G__196143) : tailrecursion.hoplon.markdown.para_node.call(null,G__196142,G__196143));
})(),(function (){var G__196171 = (function (){var G__196172 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196173 = (function (){var G__196174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196175 = "(";
var G__196176 = (function (){var G__196187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196188 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196187,G__196188) : tailrecursion.hoplon.span.call(null,G__196187,G__196188));
})();
var G__196177 = (function (){var G__196189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196190 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196189,G__196190) : tailrecursion.hoplon.span.call(null,G__196189,G__196190));
})();
var G__196178 = " (";
var G__196179 = (function (){var G__196191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196192 = "pi-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196191,G__196192) : tailrecursion.hoplon.span.call(null,G__196191,G__196192));
})();
var G__196180 = " ";
var G__196181 = (function (){var G__196193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196194 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196193,G__196194) : tailrecursion.hoplon.span.call(null,G__196193,G__196194));
})();
var G__196182 = " ";
var G__196183 = (function (){var G__196195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196196 = "1000";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196195,G__196196) : tailrecursion.hoplon.span.call(null,G__196195,G__196196));
})();
var G__196184 = "))\n";
var G__196185 = (function (){var G__196197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196198 = "3.139592655589783";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196197,G__196198) : tailrecursion.hoplon.span.call(null,G__196197,G__196198));
})();
var G__196186 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__196174,G__196175,G__196176,G__196177,G__196178,G__196179,G__196180,G__196181,G__196182,G__196183,G__196184,G__196185,G__196186) : tailrecursion.hoplon.pre.call(null,G__196174,G__196175,G__196176,G__196177,G__196178,G__196179,G__196180,G__196181,G__196182,G__196183,G__196184,G__196185,G__196186));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196172,G__196173) : tailrecursion.hoplon.div.call(null,G__196172,G__196173));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196171) : tailrecursion.hoplon.div.call(null,G__196171));
})(),(function (){var G__196199 = cljs.core.PersistentArrayMap.EMPTY;
var G__196200 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once we have ",(function (){var G__196201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__196202 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196201,G__196202) : tailrecursion.hoplon.markdown.code_node.call(null,G__196201,G__196202));
})(),", we can use it as a building block in formulating further concepts. For instance, the definite integral of a function \\(f\\) between the limits \\(a\\) and \\(b\\) can be approximated numerically using the formula"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196199,G__196200) : tailrecursion.hoplon.markdown.para_node.call(null,G__196199,G__196200));
})(),(function (){var G__196203 = cljs.core.PersistentArrayMap.EMPTY;
var G__196204 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\int_a^bf(x)dx=\\left",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["f\\left(a+\\frac{dx}{2}\\right)+f\\left(a+dx+\\frac{dx}{2}\\right)+ f\\left(a+2dx+\\frac{dx}{2}\\right)\\right"], null)], 0)),"dx$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196203,G__196204) : tailrecursion.hoplon.markdown.para_node.call(null,G__196203,G__196204));
})(),(function (){var G__196205 = cljs.core.PersistentArrayMap.EMPTY;
var G__196206 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for small values of \\(dx\\). We can express this directly as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196205,G__196206) : tailrecursion.hoplon.markdown.para_node.call(null,G__196205,G__196206));
})(),(function (){var G__196346 = (function (){var G__196347 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196348 = (function (){var G__196349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196350 = "(";
var G__196351 = (function (){var G__196416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196417 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196416,G__196417) : tailrecursion.hoplon.span.call(null,G__196416,G__196417));
})();
var G__196352 = (function (){var G__196418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196419 = "integral";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196418,G__196419) : tailrecursion.hoplon.span.call(null,G__196418,G__196419));
})();
var G__196353 = " [";
var G__196354 = (function (){var G__196420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196421 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196420,G__196421) : tailrecursion.hoplon.span.call(null,G__196420,G__196421));
})();
var G__196355 = " ";
var G__196356 = (function (){var G__196422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196423 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196422,G__196423) : tailrecursion.hoplon.span.call(null,G__196422,G__196423));
})();
var G__196357 = " ";
var G__196358 = (function (){var G__196424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196425 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196424,G__196425) : tailrecursion.hoplon.span.call(null,G__196424,G__196425));
})();
var G__196359 = " ";
var G__196360 = (function (){var G__196426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196427 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196426,G__196427) : tailrecursion.hoplon.span.call(null,G__196426,G__196427));
})();
var G__196361 = "]\n  (";
var G__196362 = (function (){var G__196428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196429 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196428,G__196429) : tailrecursion.hoplon.span.call(null,G__196428,G__196429));
})();
var G__196363 = (function (){var G__196430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196431 = "add-dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196430,G__196431) : tailrecursion.hoplon.span.call(null,G__196430,G__196431));
})();
var G__196364 = " [";
var G__196365 = (function (){var G__196432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196433 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196432,G__196433) : tailrecursion.hoplon.span.call(null,G__196432,G__196433));
})();
var G__196366 = "] (";
var G__196367 = (function (){var G__196434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196435 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196434,G__196435) : tailrecursion.hoplon.span.call(null,G__196434,G__196435));
})();
var G__196368 = (function (){var G__196436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196437 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196436,G__196437) : tailrecursion.hoplon.span.call(null,G__196436,G__196437));
})();
var G__196369 = " ";
var G__196370 = (function (){var G__196438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196439 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196438,G__196439) : tailrecursion.hoplon.span.call(null,G__196438,G__196439));
})();
var G__196371 = "))\n  (";
var G__196372 = (function (){var G__196440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196441 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196440,G__196441) : tailrecursion.hoplon.span.call(null,G__196440,G__196441));
})();
var G__196373 = "(";
var G__196374 = (function (){var G__196442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196443 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196442,G__196443) : tailrecursion.hoplon.span.call(null,G__196442,G__196443));
})();
var G__196375 = " ";
var G__196376 = (function (){var G__196444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196445 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196444,G__196445) : tailrecursion.hoplon.span.call(null,G__196444,G__196445));
})();
var G__196377 = " (";
var G__196378 = (function (){var G__196446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196447 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196446,G__196447) : tailrecursion.hoplon.span.call(null,G__196446,G__196447));
})();
var G__196379 = (function (){var G__196448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196449 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196448,G__196449) : tailrecursion.hoplon.span.call(null,G__196448,G__196449));
})();
var G__196380 = " (";
var G__196381 = (function (){var G__196450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196451 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196450,G__196451) : tailrecursion.hoplon.span.call(null,G__196450,G__196451));
})();
var G__196382 = (function (){var G__196452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196453 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196452,G__196453) : tailrecursion.hoplon.span.call(null,G__196452,G__196453));
})();
var G__196383 = " ";
var G__196384 = (function (){var G__196454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196455 = "2.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196454,G__196455) : tailrecursion.hoplon.span.call(null,G__196454,G__196455));
})();
var G__196385 = ")) ";
var G__196386 = (function (){var G__196456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196457 = "add-dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196456,G__196457) : tailrecursion.hoplon.span.call(null,G__196456,G__196457));
})();
var G__196387 = " ";
var G__196388 = (function (){var G__196458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196459 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196458,G__196459) : tailrecursion.hoplon.span.call(null,G__196458,G__196459));
})();
var G__196389 = ")\n     ";
var G__196390 = (function (){var G__196460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196461 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196460,G__196461) : tailrecursion.hoplon.span.call(null,G__196460,G__196461));
})();
var G__196391 = "))\n(";
var G__196392 = (function (){var G__196462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196463 = "inegral";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196462,G__196463) : tailrecursion.hoplon.span.call(null,G__196462,G__196463));
})();
var G__196393 = " ";
var G__196394 = (function (){var G__196464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196465 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196464,G__196465) : tailrecursion.hoplon.span.call(null,G__196464,G__196465));
})();
var G__196395 = " ";
var G__196396 = (function (){var G__196466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196467 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196466,G__196467) : tailrecursion.hoplon.span.call(null,G__196466,G__196467));
})();
var G__196397 = " ";
var G__196398 = (function (){var G__196468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196469 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196468,G__196469) : tailrecursion.hoplon.span.call(null,G__196468,G__196469));
})();
var G__196399 = " ";
var G__196400 = (function (){var G__196470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196471 = "0.01";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196470,G__196471) : tailrecursion.hoplon.span.call(null,G__196470,G__196471));
})();
var G__196401 = ")\n";
var G__196402 = (function (){var G__196472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196473 = ".24998750000000042";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196472,G__196473) : tailrecursion.hoplon.span.call(null,G__196472,G__196473));
})();
var G__196403 = "\n(";
var G__196404 = (function (){var G__196474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__196475 = "integral";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196474,G__196475) : tailrecursion.hoplon.span.call(null,G__196474,G__196475));
})();
var G__196405 = " ";
var G__196406 = (function (){var G__196476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196477 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196476,G__196477) : tailrecursion.hoplon.span.call(null,G__196476,G__196477));
})();
var G__196407 = " ";
var G__196408 = (function (){var G__196478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196479 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196478,G__196479) : tailrecursion.hoplon.span.call(null,G__196478,G__196479));
})();
var G__196409 = " ";
var G__196410 = (function (){var G__196480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196481 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196480,G__196481) : tailrecursion.hoplon.span.call(null,G__196480,G__196481));
})();
var G__196411 = " ";
var G__196412 = (function (){var G__196482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__196483 = "0.001";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196482,G__196483) : tailrecursion.hoplon.span.call(null,G__196482,G__196483));
})();
var G__196413 = ")\n";
var G__196414 = (function (){var G__196484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196485 = ".249999875000001";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196484,G__196485) : tailrecursion.hoplon.span.call(null,G__196484,G__196485));
})();
var G__196415 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$67 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$67(G__196349,G__196350,G__196351,G__196352,G__196353,G__196354,G__196355,G__196356,G__196357,G__196358,G__196359,G__196360,G__196361,G__196362,G__196363,G__196364,G__196365,G__196366,G__196367,G__196368,G__196369,G__196370,G__196371,G__196372,G__196373,G__196374,G__196375,G__196376,G__196377,G__196378,G__196379,G__196380,G__196381,G__196382,G__196383,G__196384,G__196385,G__196386,G__196387,G__196388,G__196389,G__196390,G__196391,G__196392,G__196393,G__196394,G__196395,G__196396,G__196397,G__196398,G__196399,G__196400,G__196401,G__196402,G__196403,G__196404,G__196405,G__196406,G__196407,G__196408,G__196409,G__196410,G__196411,G__196412,G__196413,G__196414,G__196415) : tailrecursion.hoplon.pre.call(null,G__196349,G__196350,G__196351,G__196352,G__196353,G__196354,G__196355,G__196356,G__196357,G__196358,G__196359,G__196360,G__196361,G__196362,G__196363,G__196364,G__196365,G__196366,G__196367,G__196368,G__196369,G__196370,G__196371,G__196372,G__196373,G__196374,G__196375,G__196376,G__196377,G__196378,G__196379,G__196380,G__196381,G__196382,G__196383,G__196384,G__196385,G__196386,G__196387,G__196388,G__196389,G__196390,G__196391,G__196392,G__196393,G__196394,G__196395,G__196396,G__196397,G__196398,G__196399,G__196400,G__196401,G__196402,G__196403,G__196404,G__196405,G__196406,G__196407,G__196408,G__196409,G__196410,G__196411,G__196412,G__196413,G__196414,G__196415));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196347,G__196348) : tailrecursion.hoplon.div.call(null,G__196347,G__196348));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196346) : tailrecursion.hoplon.div.call(null,G__196346));
})(),(function (){var G__196486 = cljs.core.PersistentArrayMap.EMPTY;
var G__196487 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(The exact value of the integral of ",(function (){var G__196488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cube"], null);
var G__196489 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196488,G__196489) : tailrecursion.hoplon.markdown.code_node.call(null,G__196488,G__196489));
})()," between 0 and 1 is 1/4.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196486,G__196487) : tailrecursion.hoplon.markdown.para_node.call(null,G__196486,G__196487));
})()], true);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194839;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194838;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_194837;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_194836;
}})()], 0));
var G__194638 = "";
var G__194639 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"29-33"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196490 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196491 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196492 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196493 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196494 = cljs.core.PersistentArrayMap.EMPTY;
var G__196495 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Simpson",(function (){var G__196496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__196497 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__196496,G__196497) : tailrecursion.hoplon.markdown.simple_node.call(null,G__196496,G__196497));
})(),"s Rule is a more accurate method of numberical integration than the method illustrated above. Using Simpson",(function (){var G__196498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__196499 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__196498,G__196499) : tailrecursion.hoplon.markdown.simple_node.call(null,G__196498,G__196499));
})(),"s Rule, the integral of a function \\(f\\) between \\(a\\) and \\(b\\) is approximated as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196494,G__196495) : tailrecursion.hoplon.markdown.para_node.call(null,G__196494,G__196495));
})(),(function (){var G__196500 = cljs.core.PersistentArrayMap.EMPTY;
var G__196501 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{h}{3}",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y_0+4y_1+2y_2+4y_3+2y_4+",(function (){var G__196502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__196503 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__196502,G__196503) : tailrecursion.hoplon.markdown.simple_node.call(null,G__196502,G__196503));
})(),"+2y_{n-2}+4y_{n-1}+y_n"], null)], 0)),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196500,G__196501) : tailrecursion.hoplon.markdown.para_node.call(null,G__196500,G__196501));
})(),(function (){var G__196504 = cljs.core.PersistentArrayMap.EMPTY;
var G__196505 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where \\(h=(b-a)/n\\), for some even integer \\(n\\), and \\(y_k=f(a+kh)\\). (Increasing \\(n\\) increases the accuracy of the approximation.) Define a procedure that takes as arguments \\(f\\),\\(a\\),\\(b\\), and \\(n\\) and returns the value of the integral, computed using Simpson",(function (){var G__196506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__196507 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__196506,G__196507) : tailrecursion.hoplon.markdown.simple_node.call(null,G__196506,G__196507));
})(),"s Rule. Use your procedure to integrate the ",(function (){var G__196508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fifth-power"], null);
var G__196509 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196508,G__196509) : tailrecursion.hoplon.markdown.code_node.call(null,G__196508,G__196509));
})()," function shown below between 0 and 1 (with \\(n=100\\) and \\(n=1000\\)), and compare the results to those of the ",(function (){var G__196510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"integral"], null);
var G__196511 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__196510,G__196511) : tailrecursion.hoplon.markdown.code_node.call(null,G__196510,G__196511));
})()," procedure shown above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196504,G__196505) : tailrecursion.hoplon.markdown.para_node.call(null,G__196504,G__196505));
})(),(function (){var G__196550 = (function (){var G__196551 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196552 = (function (){var G__196553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196554 = "(";
var G__196555 = (function (){var G__196571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196572 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196571,G__196572) : tailrecursion.hoplon.span.call(null,G__196571,G__196572));
})();
var G__196556 = (function (){var G__196573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196574 = "fifth-power";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196573,G__196574) : tailrecursion.hoplon.span.call(null,G__196573,G__196574));
})();
var G__196557 = " [";
var G__196558 = (function (){var G__196575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196576 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196575,G__196576) : tailrecursion.hoplon.span.call(null,G__196575,G__196576));
})();
var G__196559 = "]\n  (";
var G__196560 = (function (){var G__196577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__196578 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196577,G__196578) : tailrecursion.hoplon.span.call(null,G__196577,G__196578));
})();
var G__196561 = (function (){var G__196579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196580 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196579,G__196580) : tailrecursion.hoplon.span.call(null,G__196579,G__196580));
})();
var G__196562 = " ";
var G__196563 = (function (){var G__196581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196582 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196581,G__196582) : tailrecursion.hoplon.span.call(null,G__196581,G__196582));
})();
var G__196564 = " ";
var G__196565 = (function (){var G__196583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196584 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196583,G__196584) : tailrecursion.hoplon.span.call(null,G__196583,G__196584));
})();
var G__196566 = " ";
var G__196567 = (function (){var G__196585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196586 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196585,G__196586) : tailrecursion.hoplon.span.call(null,G__196585,G__196586));
})();
var G__196568 = " ";
var G__196569 = (function (){var G__196587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196588 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196587,G__196588) : tailrecursion.hoplon.span.call(null,G__196587,G__196588));
})();
var G__196570 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__196553,G__196554,G__196555,G__196556,G__196557,G__196558,G__196559,G__196560,G__196561,G__196562,G__196563,G__196564,G__196565,G__196566,G__196567,G__196568,G__196569,G__196570) : tailrecursion.hoplon.pre.call(null,G__196553,G__196554,G__196555,G__196556,G__196557,G__196558,G__196559,G__196560,G__196561,G__196562,G__196563,G__196564,G__196565,G__196566,G__196567,G__196568,G__196569,G__196570));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196551,G__196552) : tailrecursion.hoplon.div.call(null,G__196551,G__196552));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196550) : tailrecursion.hoplon.div.call(null,G__196550));
})(),(function (){var G__196589 = cljs.core.PersistentArrayMap.EMPTY;
var G__196590 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The value of the integral is actually \\(\\frac{1}{6}\\) or \\(0.1\\bar6\\), where the bar over the 6 means that it repeats forever."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__196589,G__196590) : tailrecursion.hoplon.markdown.para_node.call(null,G__196589,G__196590));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196493;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196492;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196491;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196490;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_196591 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196592 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_196593 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_196594 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__196857 = (function (){var G__196858 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__196859 = (function (){var G__196860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__196861 = "(";
var G__196862 = (function (){var G__196982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196983 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196982,G__196983) : tailrecursion.hoplon.span.call(null,G__196982,G__196983));
})();
var G__196863 = (function (){var G__196984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196985 = "simpsons-rule";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196984,G__196985) : tailrecursion.hoplon.span.call(null,G__196984,G__196985));
})();
var G__196864 = " [";
var G__196865 = (function (){var G__196986 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196987 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196986,G__196987) : tailrecursion.hoplon.span.call(null,G__196986,G__196987));
})();
var G__196866 = " ";
var G__196867 = (function (){var G__196988 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196989 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196988,G__196989) : tailrecursion.hoplon.span.call(null,G__196988,G__196989));
})();
var G__196868 = " ";
var G__196869 = (function (){var G__196990 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196991 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196990,G__196991) : tailrecursion.hoplon.span.call(null,G__196990,G__196991));
})();
var G__196870 = " ";
var G__196871 = (function (){var G__196992 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196993 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196992,G__196993) : tailrecursion.hoplon.span.call(null,G__196992,G__196993));
})();
var G__196872 = "]\n  (";
var G__196873 = (function (){var G__196994 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196995 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196994,G__196995) : tailrecursion.hoplon.span.call(null,G__196994,G__196995));
})();
var G__196874 = (function (){var G__196996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__196997 = "even-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196996,G__196997) : tailrecursion.hoplon.span.call(null,G__196996,G__196997));
})();
var G__196875 = " (";
var G__196876 = (function (){var G__196998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__196999 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__196998,G__196999) : tailrecursion.hoplon.span.call(null,G__196998,G__196999));
})();
var G__196877 = "(";
var G__196878 = (function (){var G__197000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197001 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197000,G__197001) : tailrecursion.hoplon.span.call(null,G__197000,G__197001));
})();
var G__196879 = "(";
var G__196880 = (function (){var G__197002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197003 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197002,G__197003) : tailrecursion.hoplon.span.call(null,G__197002,G__197003));
})();
var G__196881 = " ";
var G__196882 = (function (){var G__197004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197005 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197004,G__197005) : tailrecursion.hoplon.span.call(null,G__197004,G__197005));
})();
var G__196883 = " ";
var G__196884 = (function (){var G__197006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197007 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197006,G__197007) : tailrecursion.hoplon.span.call(null,G__197006,G__197007));
})();
var G__196885 = ") ";
var G__196886 = (function (){var G__197008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197009 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197008,G__197009) : tailrecursion.hoplon.span.call(null,G__197008,G__197009));
})();
var G__196887 = ")\n                  ";
var G__196888 = (function (){var G__197010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197011 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197010,G__197011) : tailrecursion.hoplon.span.call(null,G__197010,G__197011));
})();
var G__196889 = "\n                  (";
var G__196890 = (function (){var G__197012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197013 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197012,G__197013) : tailrecursion.hoplon.span.call(null,G__197012,G__197013));
})();
var G__196891 = (function (){var G__197014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197015 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197014,G__197015) : tailrecursion.hoplon.span.call(null,G__197014,G__197015));
})();
var G__196892 = ")))\n  (";
var G__196893 = (function (){var G__197016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197017 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197016,G__197017) : tailrecursion.hoplon.span.call(null,G__197016,G__197017));
})();
var G__196894 = (function (){var G__197018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197019 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197018,G__197019) : tailrecursion.hoplon.span.call(null,G__197018,G__197019));
})();
var G__196895 = " (";
var G__196896 = (function (){var G__197020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197021 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197020,G__197021) : tailrecursion.hoplon.span.call(null,G__197020,G__197021));
})();
var G__196897 = "(";
var G__196898 = (function (){var G__197022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197023 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197022,G__197023) : tailrecursion.hoplon.span.call(null,G__197022,G__197023));
})();
var G__196899 = (function (){var G__197024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197025 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197024,G__197025) : tailrecursion.hoplon.span.call(null,G__197024,G__197025));
})();
var G__196900 = " ";
var G__196901 = (function (){var G__197026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197027 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197026,G__197027) : tailrecursion.hoplon.span.call(null,G__197026,G__197027));
})();
var G__196902 = ") ";
var G__196903 = (function (){var G__197028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197029 = "even-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197028,G__197029) : tailrecursion.hoplon.span.call(null,G__197028,G__197029));
})();
var G__196904 = "))\n  (";
var G__196905 = (function (){var G__197030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197031 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197030,G__197031) : tailrecursion.hoplon.span.call(null,G__197030,G__197031));
})();
var G__196906 = (function (){var G__197032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197033 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197032,G__197033) : tailrecursion.hoplon.span.call(null,G__197032,G__197033));
})();
var G__196907 = " [";
var G__196908 = (function (){var G__197034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197035 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197034,G__197035) : tailrecursion.hoplon.span.call(null,G__197034,G__197035));
})();
var G__196909 = "]\n    (";
var G__196910 = (function (){var G__197036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197037 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197036,G__197037) : tailrecursion.hoplon.span.call(null,G__197036,G__197037));
})();
var G__196911 = "(";
var G__196912 = (function (){var G__197038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197039 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197038,G__197039) : tailrecursion.hoplon.span.call(null,G__197038,G__197039));
})();
var G__196913 = "(";
var G__196914 = (function (){var G__197040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197041 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197040,G__197041) : tailrecursion.hoplon.span.call(null,G__197040,G__197041));
})();
var G__196915 = (function (){var G__197042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197043 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197042,G__197043) : tailrecursion.hoplon.span.call(null,G__197042,G__197043));
})();
var G__196916 = " ";
var G__196917 = (function (){var G__197044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197045 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197044,G__197045) : tailrecursion.hoplon.span.call(null,G__197044,G__197045));
})();
var G__196918 = ") (";
var G__196919 = (function (){var G__197046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197047 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197046,G__197047) : tailrecursion.hoplon.span.call(null,G__197046,G__197047));
})();
var G__196920 = (function (){var G__197048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197049 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197048,G__197049) : tailrecursion.hoplon.span.call(null,G__197048,G__197049));
})();
var G__196921 = " ";
var G__196922 = (function (){var G__197050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197051 = "even-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197050,G__197051) : tailrecursion.hoplon.span.call(null,G__197050,G__197051));
})();
var G__196923 = "))\n          (";
var G__196924 = (function (){var G__197052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197053 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197052,G__197053) : tailrecursion.hoplon.span.call(null,G__197052,G__197053));
})();
var G__196925 = " (";
var G__196926 = (function (){var G__197054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197055 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197054,G__197055) : tailrecursion.hoplon.span.call(null,G__197054,G__197055));
})();
var G__196927 = (function (){var G__197056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197057 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197056,G__197057) : tailrecursion.hoplon.span.call(null,G__197056,G__197057));
})();
var G__196928 = " (";
var G__196929 = (function (){var G__197058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197059 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197058,G__197059) : tailrecursion.hoplon.span.call(null,G__197058,G__197059));
})();
var G__196930 = (function (){var G__197060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197061 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197060,G__197061) : tailrecursion.hoplon.span.call(null,G__197060,G__197061));
})();
var G__196931 = " ";
var G__196932 = (function (){var G__197062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197063 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197062,G__197063) : tailrecursion.hoplon.span.call(null,G__197062,G__197063));
})();
var G__196933 = ")))\n          (";
var G__196934 = (function (){var G__197064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197065 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197064,G__197065) : tailrecursion.hoplon.span.call(null,G__197064,G__197065));
})();
var G__196935 = " ";
var G__196936 = (function (){var G__197066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197067 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197066,G__197067) : tailrecursion.hoplon.span.call(null,G__197066,G__197067));
})();
var G__196937 = ") (";
var G__196938 = (function (){var G__197068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197069 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197068,G__197069) : tailrecursion.hoplon.span.call(null,G__197068,G__197069));
})();
var G__196939 = (function (){var G__197070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197071 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197070,G__197071) : tailrecursion.hoplon.span.call(null,G__197070,G__197071));
})();
var G__196940 = " (";
var G__196941 = (function (){var G__197072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197073 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197072,G__197073) : tailrecursion.hoplon.span.call(null,G__197072,G__197073));
})();
var G__196942 = " (";
var G__196943 = (function (){var G__197074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197075 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197074,G__197075) : tailrecursion.hoplon.span.call(null,G__197074,G__197075));
})();
var G__196944 = (function (){var G__197076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197077 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197076,G__197077) : tailrecursion.hoplon.span.call(null,G__197076,G__197077));
})();
var G__196945 = " (";
var G__196946 = (function (){var G__197078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197079 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197078,G__197079) : tailrecursion.hoplon.span.call(null,G__197078,G__197079));
})();
var G__196947 = (function (){var G__197080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197081 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197080,G__197081) : tailrecursion.hoplon.span.call(null,G__197080,G__197081));
})();
var G__196948 = " ";
var G__196949 = (function (){var G__197082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197083 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197082,G__197083) : tailrecursion.hoplon.span.call(null,G__197082,G__197083));
})();
var G__196950 = "))))\n          ";
var G__196951 = (function (){var G__197084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197085 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197084,G__197085) : tailrecursion.hoplon.span.call(null,G__197084,G__197085));
})();
var G__196952 = " (";
var G__196953 = (function (){var G__197086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197087 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197086,G__197087) : tailrecursion.hoplon.span.call(null,G__197086,G__197087));
})();
var G__196954 = (function (){var G__197088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197089 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197088,G__197089) : tailrecursion.hoplon.span.call(null,G__197088,G__197089));
})();
var G__196955 = " (";
var G__196956 = (function (){var G__197090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197091 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197090,G__197091) : tailrecursion.hoplon.span.call(null,G__197090,G__197091));
})();
var G__196957 = " (";
var G__196958 = (function (){var G__197092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197093 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197092,G__197093) : tailrecursion.hoplon.span.call(null,G__197092,G__197093));
})();
var G__196959 = (function (){var G__197094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197095 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197094,G__197095) : tailrecursion.hoplon.span.call(null,G__197094,G__197095));
})();
var G__196960 = " (";
var G__196961 = (function (){var G__197096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197097 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197096,G__197097) : tailrecursion.hoplon.span.call(null,G__197096,G__197097));
})();
var G__196962 = (function (){var G__197098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197099 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197098,G__197099) : tailrecursion.hoplon.span.call(null,G__197098,G__197099));
})();
var G__196963 = " ";
var G__196964 = (function (){var G__197100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197101 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197100,G__197101) : tailrecursion.hoplon.span.call(null,G__197100,G__197101));
})();
var G__196965 = "))))))\n  (";
var G__196966 = (function (){var G__197102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197103 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197102,G__197103) : tailrecursion.hoplon.span.call(null,G__197102,G__197103));
})();
var G__196967 = "(";
var G__196968 = (function (){var G__197104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197105 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197104,G__197105) : tailrecursion.hoplon.span.call(null,G__197104,G__197105));
})();
var G__196969 = (function (){var G__197106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197107 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197106,G__197107) : tailrecursion.hoplon.span.call(null,G__197106,G__197107));
})();
var G__196970 = " ";
var G__196971 = (function (){var G__197108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197109 = "3.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197108,G__197109) : tailrecursion.hoplon.span.call(null,G__197108,G__197109));
})();
var G__196972 = ") (";
var G__196973 = (function (){var G__197110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197111 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197110,G__197111) : tailrecursion.hoplon.span.call(null,G__197110,G__197111));
})();
var G__196974 = " ";
var G__196975 = (function (){var G__197112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197113 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197112,G__197113) : tailrecursion.hoplon.span.call(null,G__197112,G__197113));
})();
var G__196976 = " ";
var G__196977 = (function (){var G__197114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197115 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197114,G__197115) : tailrecursion.hoplon.span.call(null,G__197114,G__197115));
})();
var G__196978 = " ";
var G__196979 = (function (){var G__197116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197117 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197116,G__197117) : tailrecursion.hoplon.span.call(null,G__197116,G__197117));
})();
var G__196980 = (function (){var G__197118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197119 = "even-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197118,G__197119) : tailrecursion.hoplon.span.call(null,G__197118,G__197119));
})();
var G__196981 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$122 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$122(G__196860,G__196861,G__196862,G__196863,G__196864,G__196865,G__196866,G__196867,G__196868,G__196869,G__196870,G__196871,G__196872,G__196873,G__196874,G__196875,G__196876,G__196877,G__196878,G__196879,G__196880,G__196881,G__196882,G__196883,G__196884,G__196885,G__196886,G__196887,G__196888,G__196889,G__196890,G__196891,G__196892,G__196893,G__196894,G__196895,G__196896,G__196897,G__196898,G__196899,G__196900,G__196901,G__196902,G__196903,G__196904,G__196905,G__196906,G__196907,G__196908,G__196909,G__196910,G__196911,G__196912,G__196913,G__196914,G__196915,G__196916,G__196917,G__196918,G__196919,G__196920,G__196921,G__196922,G__196923,G__196924,G__196925,G__196926,G__196927,G__196928,G__196929,G__196930,G__196931,G__196932,G__196933,G__196934,G__196935,G__196936,G__196937,G__196938,G__196939,G__196940,G__196941,G__196942,G__196943,G__196944,G__196945,G__196946,G__196947,G__196948,G__196949,G__196950,G__196951,G__196952,G__196953,G__196954,G__196955,G__196956,G__196957,G__196958,G__196959,G__196960,G__196961,G__196962,G__196963,G__196964,G__196965,G__196966,G__196967,G__196968,G__196969,G__196970,G__196971,G__196972,G__196973,G__196974,G__196975,G__196976,G__196977,G__196978,G__196979,G__196980,G__196981) : tailrecursion.hoplon.pre.call(null,G__196860,G__196861,G__196862,G__196863,G__196864,G__196865,G__196866,G__196867,G__196868,G__196869,G__196870,G__196871,G__196872,G__196873,G__196874,G__196875,G__196876,G__196877,G__196878,G__196879,G__196880,G__196881,G__196882,G__196883,G__196884,G__196885,G__196886,G__196887,G__196888,G__196889,G__196890,G__196891,G__196892,G__196893,G__196894,G__196895,G__196896,G__196897,G__196898,G__196899,G__196900,G__196901,G__196902,G__196903,G__196904,G__196905,G__196906,G__196907,G__196908,G__196909,G__196910,G__196911,G__196912,G__196913,G__196914,G__196915,G__196916,G__196917,G__196918,G__196919,G__196920,G__196921,G__196922,G__196923,G__196924,G__196925,G__196926,G__196927,G__196928,G__196929,G__196930,G__196931,G__196932,G__196933,G__196934,G__196935,G__196936,G__196937,G__196938,G__196939,G__196940,G__196941,G__196942,G__196943,G__196944,G__196945,G__196946,G__196947,G__196948,G__196949,G__196950,G__196951,G__196952,G__196953,G__196954,G__196955,G__196956,G__196957,G__196958,G__196959,G__196960,G__196961,G__196962,G__196963,G__196964,G__196965,G__196966,G__196967,G__196968,G__196969,G__196970,G__196971,G__196972,G__196973,G__196974,G__196975,G__196976,G__196977,G__196978,G__196979,G__196980,G__196981));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__196858,G__196859) : tailrecursion.hoplon.div.call(null,G__196858,G__196859));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__196857) : tailrecursion.hoplon.div.call(null,G__196857));
})(),(function (){var G__197120 = cljs.core.PersistentArrayMap.EMPTY;
var G__197121 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, if we wanted to save some computation and clean it up a bit,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197120,G__197121) : tailrecursion.hoplon.markdown.para_node.call(null,G__197120,G__197121));
})(),(function (){var G__197355 = (function (){var G__197356 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197357 = (function (){var G__197358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197359 = "(";
var G__197360 = (function (){var G__197467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197468 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197467,G__197468) : tailrecursion.hoplon.span.call(null,G__197467,G__197468));
})();
var G__197361 = (function (){var G__197469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197470 = "simpsons-rule";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197469,G__197470) : tailrecursion.hoplon.span.call(null,G__197469,G__197470));
})();
var G__197362 = " [";
var G__197363 = (function (){var G__197471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197472 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197471,G__197472) : tailrecursion.hoplon.span.call(null,G__197471,G__197472));
})();
var G__197364 = " ";
var G__197365 = (function (){var G__197473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197474 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197473,G__197474) : tailrecursion.hoplon.span.call(null,G__197473,G__197474));
})();
var G__197366 = " ";
var G__197367 = (function (){var G__197475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197476 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197475,G__197476) : tailrecursion.hoplon.span.call(null,G__197475,G__197476));
})();
var G__197368 = " ";
var G__197369 = (function (){var G__197477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197478 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197477,G__197478) : tailrecursion.hoplon.span.call(null,G__197477,G__197478));
})();
var G__197370 = "]\n  (";
var G__197371 = (function (){var G__197479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197480 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197479,G__197480) : tailrecursion.hoplon.span.call(null,G__197479,G__197480));
})();
var G__197372 = (function (){var G__197481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197482 = "even-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197481,G__197482) : tailrecursion.hoplon.span.call(null,G__197481,G__197482));
})();
var G__197373 = " (";
var G__197374 = (function (){var G__197483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197484 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197483,G__197484) : tailrecursion.hoplon.span.call(null,G__197483,G__197484));
})();
var G__197375 = (function (){var G__197485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197486 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197485,G__197486) : tailrecursion.hoplon.span.call(null,G__197485,G__197486));
})();
var G__197376 = " (";
var G__197377 = (function (){var G__197487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197488 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197487,G__197488) : tailrecursion.hoplon.span.call(null,G__197487,G__197488));
})();
var G__197378 = " ";
var G__197379 = (function (){var G__197489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197490 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197489,G__197490) : tailrecursion.hoplon.span.call(null,G__197489,G__197490));
})();
var G__197380 = " ";
var G__197381 = (function (){var G__197491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197492 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197491,G__197492) : tailrecursion.hoplon.span.call(null,G__197491,G__197492));
})();
var G__197382 = ")))\n  (";
var G__197383 = (function (){var G__197493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197494 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197493,G__197494) : tailrecursion.hoplon.span.call(null,G__197493,G__197494));
})();
var G__197384 = (function (){var G__197495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197496 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197495,G__197496) : tailrecursion.hoplon.span.call(null,G__197495,G__197496));
})();
var G__197385 = " (";
var G__197386 = (function (){var G__197497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197498 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197497,G__197498) : tailrecursion.hoplon.span.call(null,G__197497,G__197498));
})();
var G__197387 = "(";
var G__197388 = (function (){var G__197499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197500 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197499,G__197500) : tailrecursion.hoplon.span.call(null,G__197499,G__197500));
})();
var G__197389 = (function (){var G__197501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197502 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197501,G__197502) : tailrecursion.hoplon.span.call(null,G__197501,G__197502));
})();
var G__197390 = " ";
var G__197391 = (function (){var G__197503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197504 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197503,G__197504) : tailrecursion.hoplon.span.call(null,G__197503,G__197504));
})();
var G__197392 = ") ";
var G__197393 = (function (){var G__197505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197506 = "even-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197505,G__197506) : tailrecursion.hoplon.span.call(null,G__197505,G__197506));
})();
var G__197394 = "))\n  (";
var G__197395 = (function (){var G__197507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197508 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197507,G__197508) : tailrecursion.hoplon.span.call(null,G__197507,G__197508));
})();
var G__197396 = (function (){var G__197509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197510 = "upper-limit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197509,G__197510) : tailrecursion.hoplon.span.call(null,G__197509,G__197510));
})();
var G__197397 = " (";
var G__197398 = (function (){var G__197511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197512 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197511,G__197512) : tailrecursion.hoplon.span.call(null,G__197511,G__197512));
})();
var G__197399 = (function (){var G__197513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197514 = "even-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197513,G__197514) : tailrecursion.hoplon.span.call(null,G__197513,G__197514));
})();
var G__197400 = "))\n  (";
var G__197401 = (function (){var G__197515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197516 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197515,G__197516) : tailrecursion.hoplon.span.call(null,G__197515,G__197516));
})();
var G__197402 = (function (){var G__197517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197518 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197517,G__197518) : tailrecursion.hoplon.span.call(null,G__197517,G__197518));
})();
var G__197403 = " [";
var G__197404 = (function (){var G__197519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197520 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197519,G__197520) : tailrecursion.hoplon.span.call(null,G__197519,G__197520));
})();
var G__197405 = "] (";
var G__197406 = (function (){var G__197521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197522 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197521,G__197522) : tailrecursion.hoplon.span.call(null,G__197521,G__197522));
})();
var G__197407 = " (";
var G__197408 = (function (){var G__197523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197524 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197523,G__197524) : tailrecursion.hoplon.span.call(null,G__197523,G__197524));
})();
var G__197409 = (function (){var G__197525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197526 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197525,G__197526) : tailrecursion.hoplon.span.call(null,G__197525,G__197526));
})();
var G__197410 = " (";
var G__197411 = (function (){var G__197527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197528 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197527,G__197528) : tailrecursion.hoplon.span.call(null,G__197527,G__197528));
})();
var G__197412 = (function (){var G__197529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197530 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197529,G__197530) : tailrecursion.hoplon.span.call(null,G__197529,G__197530));
})();
var G__197413 = " ";
var G__197414 = (function (){var G__197531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197532 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197531,G__197532) : tailrecursion.hoplon.span.call(null,G__197531,G__197532));
})();
var G__197415 = "))))\n  (";
var G__197416 = (function (){var G__197533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197534 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197533,G__197534) : tailrecursion.hoplon.span.call(null,G__197533,G__197534));
})();
var G__197417 = (function (){var G__197535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197536 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197535,G__197536) : tailrecursion.hoplon.span.call(null,G__197535,G__197536));
})();
var G__197418 = " [";
var G__197419 = (function (){var G__197537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197538 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197537,G__197538) : tailrecursion.hoplon.span.call(null,G__197537,G__197538));
})();
var G__197420 = "]\n    (";
var G__197421 = (function (){var G__197539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197540 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197539,G__197540) : tailrecursion.hoplon.span.call(null,G__197539,G__197540));
})();
var G__197422 = "(";
var G__197423 = (function (){var G__197541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197542 = "odd?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197541,G__197542) : tailrecursion.hoplon.span.call(null,G__197541,G__197542));
})();
var G__197424 = " ";
var G__197425 = (function (){var G__197543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197544 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197543,G__197544) : tailrecursion.hoplon.span.call(null,G__197543,G__197544));
})();
var G__197426 = ") (";
var G__197427 = (function (){var G__197545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197546 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197545,G__197546) : tailrecursion.hoplon.span.call(null,G__197545,G__197546));
})();
var G__197428 = (function (){var G__197547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197548 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197547,G__197548) : tailrecursion.hoplon.span.call(null,G__197547,G__197548));
})();
var G__197429 = " (";
var G__197430 = (function (){var G__197549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197550 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197549,G__197550) : tailrecursion.hoplon.span.call(null,G__197549,G__197550));
})();
var G__197431 = " ";
var G__197432 = (function (){var G__197551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197552 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197551,G__197552) : tailrecursion.hoplon.span.call(null,G__197551,G__197552));
})();
var G__197433 = "))\n        (";
var G__197434 = (function (){var G__197553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197554 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197553,G__197554) : tailrecursion.hoplon.span.call(null,G__197553,G__197554));
})();
var G__197435 = (function (){var G__197555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197556 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197555,G__197556) : tailrecursion.hoplon.span.call(null,G__197555,G__197556));
})();
var G__197436 = " (";
var G__197437 = (function (){var G__197557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197558 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197557,G__197558) : tailrecursion.hoplon.span.call(null,G__197557,G__197558));
})();
var G__197438 = " ";
var G__197439 = (function (){var G__197559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197560 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197559,G__197560) : tailrecursion.hoplon.span.call(null,G__197559,G__197560));
})();
var G__197440 = "))))\n  (";
var G__197441 = (function (){var G__197561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197562 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197561,G__197562) : tailrecursion.hoplon.span.call(null,G__197561,G__197562));
})();
var G__197442 = "(";
var G__197443 = (function (){var G__197563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197564 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197563,G__197564) : tailrecursion.hoplon.span.call(null,G__197563,G__197564));
})();
var G__197444 = (function (){var G__197565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197566 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197565,G__197566) : tailrecursion.hoplon.span.call(null,G__197565,G__197566));
})();
var G__197445 = " ";
var G__197446 = (function (){var G__197567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197568 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197567,G__197568) : tailrecursion.hoplon.span.call(null,G__197567,G__197568));
})();
var G__197447 = ") (";
var G__197448 = (function (){var G__197569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197570 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197569,G__197570) : tailrecursion.hoplon.span.call(null,G__197569,G__197570));
})();
var G__197449 = "(";
var G__197450 = (function (){var G__197571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197572 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197571,G__197572) : tailrecursion.hoplon.span.call(null,G__197571,G__197572));
})();
var G__197451 = " ";
var G__197452 = (function (){var G__197573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197574 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197573,G__197574) : tailrecursion.hoplon.span.call(null,G__197573,G__197574));
})();
var G__197453 = ") (";
var G__197454 = (function (){var G__197575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197576 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197575,G__197576) : tailrecursion.hoplon.span.call(null,G__197575,G__197576));
})();
var G__197455 = " ";
var G__197456 = (function (){var G__197577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197578 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197577,G__197578) : tailrecursion.hoplon.span.call(null,G__197577,G__197578));
})();
var G__197457 = " ";
var G__197458 = (function (){var G__197579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__197580 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197579,G__197580) : tailrecursion.hoplon.span.call(null,G__197579,G__197580));
})();
var G__197459 = " ";
var G__197460 = (function (){var G__197581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197582 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197581,G__197582) : tailrecursion.hoplon.span.call(null,G__197581,G__197582));
})();
var G__197461 = (function (){var G__197583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197584 = "upper-limit";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197583,G__197584) : tailrecursion.hoplon.span.call(null,G__197583,G__197584));
})();
var G__197462 = ") (";
var G__197463 = (function (){var G__197585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197586 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197585,G__197586) : tailrecursion.hoplon.span.call(null,G__197585,G__197586));
})();
var G__197464 = " ";
var G__197465 = (function (){var G__197587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197588 = "even-n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197587,G__197588) : tailrecursion.hoplon.span.call(null,G__197587,G__197588));
})();
var G__197466 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$109 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$109(G__197358,G__197359,G__197360,G__197361,G__197362,G__197363,G__197364,G__197365,G__197366,G__197367,G__197368,G__197369,G__197370,G__197371,G__197372,G__197373,G__197374,G__197375,G__197376,G__197377,G__197378,G__197379,G__197380,G__197381,G__197382,G__197383,G__197384,G__197385,G__197386,G__197387,G__197388,G__197389,G__197390,G__197391,G__197392,G__197393,G__197394,G__197395,G__197396,G__197397,G__197398,G__197399,G__197400,G__197401,G__197402,G__197403,G__197404,G__197405,G__197406,G__197407,G__197408,G__197409,G__197410,G__197411,G__197412,G__197413,G__197414,G__197415,G__197416,G__197417,G__197418,G__197419,G__197420,G__197421,G__197422,G__197423,G__197424,G__197425,G__197426,G__197427,G__197428,G__197429,G__197430,G__197431,G__197432,G__197433,G__197434,G__197435,G__197436,G__197437,G__197438,G__197439,G__197440,G__197441,G__197442,G__197443,G__197444,G__197445,G__197446,G__197447,G__197448,G__197449,G__197450,G__197451,G__197452,G__197453,G__197454,G__197455,G__197456,G__197457,G__197458,G__197459,G__197460,G__197461,G__197462,G__197463,G__197464,G__197465,G__197466) : tailrecursion.hoplon.pre.call(null,G__197358,G__197359,G__197360,G__197361,G__197362,G__197363,G__197364,G__197365,G__197366,G__197367,G__197368,G__197369,G__197370,G__197371,G__197372,G__197373,G__197374,G__197375,G__197376,G__197377,G__197378,G__197379,G__197380,G__197381,G__197382,G__197383,G__197384,G__197385,G__197386,G__197387,G__197388,G__197389,G__197390,G__197391,G__197392,G__197393,G__197394,G__197395,G__197396,G__197397,G__197398,G__197399,G__197400,G__197401,G__197402,G__197403,G__197404,G__197405,G__197406,G__197407,G__197408,G__197409,G__197410,G__197411,G__197412,G__197413,G__197414,G__197415,G__197416,G__197417,G__197418,G__197419,G__197420,G__197421,G__197422,G__197423,G__197424,G__197425,G__197426,G__197427,G__197428,G__197429,G__197430,G__197431,G__197432,G__197433,G__197434,G__197435,G__197436,G__197437,G__197438,G__197439,G__197440,G__197441,G__197442,G__197443,G__197444,G__197445,G__197446,G__197447,G__197448,G__197449,G__197450,G__197451,G__197452,G__197453,G__197454,G__197455,G__197456,G__197457,G__197458,G__197459,G__197460,G__197461,G__197462,G__197463,G__197464,G__197465,G__197466));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197356,G__197357) : tailrecursion.hoplon.div.call(null,G__197356,G__197357));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197355) : tailrecursion.hoplon.div.call(null,G__197355));
})(),(function (){var G__197589 = cljs.core.PersistentArrayMap.EMPTY;
var G__197590 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This replaces the three-pronged ",(function (){var G__197591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cond"], null);
var G__197592 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197591,G__197592) : tailrecursion.hoplon.markdown.code_node.call(null,G__197591,G__197592));
})()," with a simple if where we anticipate needing both equally (roughly)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197589,G__197590) : tailrecursion.hoplon.markdown.para_node.call(null,G__197589,G__197590));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196594;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196593;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_196592;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_196591;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197593 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197594 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197595 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197596 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__197597 = cljs.core.PersistentArrayMap.EMPTY;
var G__197598 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. The ",(function (){var G__197599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__197600 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197599,G__197600) : tailrecursion.hoplon.markdown.code_node.call(null,G__197599,G__197600));
})()," procedure above generates a linear recursion. The procedure can be written so that the sum is performed iteratively. Show how to do this by filling in the missing expressions in the following definition:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197597,G__197598) : tailrecursion.hoplon.markdown.para_node.call(null,G__197597,G__197598));
})(),(function (){var G__197677 = (function (){var G__197678 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197679 = (function (){var G__197680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197681 = "(";
var G__197682 = (function (){var G__197716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197717 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197716,G__197717) : tailrecursion.hoplon.span.call(null,G__197716,G__197717));
})();
var G__197683 = (function (){var G__197718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197719 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197718,G__197719) : tailrecursion.hoplon.span.call(null,G__197718,G__197719));
})();
var G__197684 = " [";
var G__197685 = (function (){var G__197720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197721 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197720,G__197721) : tailrecursion.hoplon.span.call(null,G__197720,G__197721));
})();
var G__197686 = " ";
var G__197687 = (function (){var G__197722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197723 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197722,G__197723) : tailrecursion.hoplon.span.call(null,G__197722,G__197723));
})();
var G__197688 = " ";
var G__197689 = (function (){var G__197724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197725 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197724,G__197725) : tailrecursion.hoplon.span.call(null,G__197724,G__197725));
})();
var G__197690 = (function (){var G__197726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197727 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197726,G__197727) : tailrecursion.hoplon.span.call(null,G__197726,G__197727));
})();
var G__197691 = "]\n  (";
var G__197692 = (function (){var G__197728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197729 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197728,G__197729) : tailrecursion.hoplon.span.call(null,G__197728,G__197729));
})();
var G__197693 = (function (){var G__197730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197731 = "iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197730,G__197731) : tailrecursion.hoplon.span.call(null,G__197730,G__197731));
})();
var G__197694 = " [";
var G__197695 = (function (){var G__197732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197733 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197732,G__197733) : tailrecursion.hoplon.span.call(null,G__197732,G__197733));
})();
var G__197696 = " ";
var G__197697 = (function (){var G__197734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197735 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197734,G__197735) : tailrecursion.hoplon.span.call(null,G__197734,G__197735));
})();
var G__197698 = "]\n    (";
var G__197699 = (function (){var G__197736 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197737 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197736,G__197737) : tailrecursion.hoplon.span.call(null,G__197736,G__197737));
})();
var G__197700 = (function (){var G__197738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197739 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197738,G__197739) : tailrecursion.hoplon.span.call(null,G__197738,G__197739));
})();
var G__197701 = "\n        ";
var G__197702 = (function (){var G__197740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197741 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197740,G__197741) : tailrecursion.hoplon.span.call(null,G__197740,G__197741));
})();
var G__197703 = "\n        (";
var G__197704 = (function (){var G__197742 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197743 = "iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197742,G__197743) : tailrecursion.hoplon.span.call(null,G__197742,G__197743));
})();
var G__197705 = " ";
var G__197706 = (function (){var G__197744 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197745 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197744,G__197745) : tailrecursion.hoplon.span.call(null,G__197744,G__197745));
})();
var G__197707 = " ";
var G__197708 = (function (){var G__197746 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197747 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197746,G__197747) : tailrecursion.hoplon.span.call(null,G__197746,G__197747));
})();
var G__197709 = ")))\n  (";
var G__197710 = (function (){var G__197748 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197749 = "iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197748,G__197749) : tailrecursion.hoplon.span.call(null,G__197748,G__197749));
})();
var G__197711 = " ";
var G__197712 = (function (){var G__197750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197751 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197750,G__197751) : tailrecursion.hoplon.span.call(null,G__197750,G__197751));
})();
var G__197713 = " ";
var G__197714 = (function (){var G__197752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197753 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197752,G__197753) : tailrecursion.hoplon.span.call(null,G__197752,G__197753));
})();
var G__197715 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$36(G__197680,G__197681,G__197682,G__197683,G__197684,G__197685,G__197686,G__197687,G__197688,G__197689,G__197690,G__197691,G__197692,G__197693,G__197694,G__197695,G__197696,G__197697,G__197698,G__197699,G__197700,G__197701,G__197702,G__197703,G__197704,G__197705,G__197706,G__197707,G__197708,G__197709,G__197710,G__197711,G__197712,G__197713,G__197714,G__197715) : tailrecursion.hoplon.pre.call(null,G__197680,G__197681,G__197682,G__197683,G__197684,G__197685,G__197686,G__197687,G__197688,G__197689,G__197690,G__197691,G__197692,G__197693,G__197694,G__197695,G__197696,G__197697,G__197698,G__197699,G__197700,G__197701,G__197702,G__197703,G__197704,G__197705,G__197706,G__197707,G__197708,G__197709,G__197710,G__197711,G__197712,G__197713,G__197714,G__197715));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197678,G__197679) : tailrecursion.hoplon.div.call(null,G__197678,G__197679));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197677) : tailrecursion.hoplon.div.call(null,G__197677));
})(),(function (){var G__197754 = cljs.core.PersistentArrayMap.EMPTY;
var G__197755 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. Do the same with the ",(function (){var G__197756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"loop"], null);
var G__197757 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__197756,G__197757) : tailrecursion.hoplon.markdown.code_node.call(null,G__197756,G__197757));
})()," construct below (and notice the similarities)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__197754,G__197755) : tailrecursion.hoplon.markdown.para_node.call(null,G__197754,G__197755));
})(),(function (){var G__197827 = (function (){var G__197828 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__197829 = (function (){var G__197830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__197831 = "(";
var G__197832 = (function (){var G__197863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197864 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197863,G__197864) : tailrecursion.hoplon.span.call(null,G__197863,G__197864));
})();
var G__197833 = (function (){var G__197865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197866 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197865,G__197866) : tailrecursion.hoplon.span.call(null,G__197865,G__197866));
})();
var G__197834 = " [";
var G__197835 = (function (){var G__197867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197868 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197867,G__197868) : tailrecursion.hoplon.span.call(null,G__197867,G__197868));
})();
var G__197836 = " ";
var G__197837 = (function (){var G__197869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197870 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197869,G__197870) : tailrecursion.hoplon.span.call(null,G__197869,G__197870));
})();
var G__197838 = " ";
var G__197839 = (function (){var G__197871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__197872 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197871,G__197872) : tailrecursion.hoplon.span.call(null,G__197871,G__197872));
})();
var G__197840 = (function (){var G__197873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197874 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197873,G__197874) : tailrecursion.hoplon.span.call(null,G__197873,G__197874));
})();
var G__197841 = "]\n  (";
var G__197842 = (function (){var G__197875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197876 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197875,G__197876) : tailrecursion.hoplon.span.call(null,G__197875,G__197876));
})();
var G__197843 = "[";
var G__197844 = (function (){var G__197877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197878 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197877,G__197878) : tailrecursion.hoplon.span.call(null,G__197877,G__197878));
})();
var G__197845 = " ";
var G__197846 = (function (){var G__197879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197880 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197879,G__197880) : tailrecursion.hoplon.span.call(null,G__197879,G__197880));
})();
var G__197847 = "\n         ";
var G__197848 = (function (){var G__197881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197882 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197881,G__197882) : tailrecursion.hoplon.span.call(null,G__197881,G__197882));
})();
var G__197849 = " ";
var G__197850 = (function (){var G__197883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197884 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197883,G__197884) : tailrecursion.hoplon.span.call(null,G__197883,G__197884));
})();
var G__197851 = "]\n    (";
var G__197852 = (function (){var G__197885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__197886 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197885,G__197886) : tailrecursion.hoplon.span.call(null,G__197885,G__197886));
})();
var G__197853 = (function (){var G__197887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197888 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197887,G__197888) : tailrecursion.hoplon.span.call(null,G__197887,G__197888));
})();
var G__197854 = "\n        ";
var G__197855 = (function (){var G__197889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197890 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197889,G__197890) : tailrecursion.hoplon.span.call(null,G__197889,G__197890));
})();
var G__197856 = "\n        (";
var G__197857 = (function (){var G__197891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__197892 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197891,G__197892) : tailrecursion.hoplon.span.call(null,G__197891,G__197892));
})();
var G__197858 = " ";
var G__197859 = (function (){var G__197893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197894 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197893,G__197894) : tailrecursion.hoplon.span.call(null,G__197893,G__197894));
})();
var G__197860 = " ";
var G__197861 = (function (){var G__197895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__197896 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__197895,G__197896) : tailrecursion.hoplon.span.call(null,G__197895,G__197896));
})();
var G__197862 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__197830,G__197831,G__197832,G__197833,G__197834,G__197835,G__197836,G__197837,G__197838,G__197839,G__197840,G__197841,G__197842,G__197843,G__197844,G__197845,G__197846,G__197847,G__197848,G__197849,G__197850,G__197851,G__197852,G__197853,G__197854,G__197855,G__197856,G__197857,G__197858,G__197859,G__197860,G__197861,G__197862) : tailrecursion.hoplon.pre.call(null,G__197830,G__197831,G__197832,G__197833,G__197834,G__197835,G__197836,G__197837,G__197838,G__197839,G__197840,G__197841,G__197842,G__197843,G__197844,G__197845,G__197846,G__197847,G__197848,G__197849,G__197850,G__197851,G__197852,G__197853,G__197854,G__197855,G__197856,G__197857,G__197858,G__197859,G__197860,G__197861,G__197862));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__197828,G__197829) : tailrecursion.hoplon.div.call(null,G__197828,G__197829));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__197827) : tailrecursion.hoplon.div.call(null,G__197827));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197596;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197595;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197594;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197593;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_197897 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197898 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_197899 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_197900 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198000 = (function (){var G__198001 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198002 = (function (){var G__198003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198004 = "(";
var G__198005 = (function (){var G__198050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198051 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198050,G__198051) : tailrecursion.hoplon.span.call(null,G__198050,G__198051));
})();
var G__198006 = (function (){var G__198052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198053 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198052,G__198053) : tailrecursion.hoplon.span.call(null,G__198052,G__198053));
})();
var G__198007 = " [";
var G__198008 = (function (){var G__198054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198055 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198054,G__198055) : tailrecursion.hoplon.span.call(null,G__198054,G__198055));
})();
var G__198009 = " ";
var G__198010 = (function (){var G__198056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198057 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198056,G__198057) : tailrecursion.hoplon.span.call(null,G__198056,G__198057));
})();
var G__198011 = " ";
var G__198012 = (function (){var G__198058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198059 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198058,G__198059) : tailrecursion.hoplon.span.call(null,G__198058,G__198059));
})();
var G__198013 = (function (){var G__198060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198061 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198060,G__198061) : tailrecursion.hoplon.span.call(null,G__198060,G__198061));
})();
var G__198014 = "]\n  (";
var G__198015 = (function (){var G__198062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198063 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198062,G__198063) : tailrecursion.hoplon.span.call(null,G__198062,G__198063));
})();
var G__198016 = (function (){var G__198064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198065 = "iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198064,G__198065) : tailrecursion.hoplon.span.call(null,G__198064,G__198065));
})();
var G__198017 = " [";
var G__198018 = (function (){var G__198066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198067 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198066,G__198067) : tailrecursion.hoplon.span.call(null,G__198066,G__198067));
})();
var G__198019 = " ";
var G__198020 = (function (){var G__198068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198069 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198068,G__198069) : tailrecursion.hoplon.span.call(null,G__198068,G__198069));
})();
var G__198021 = "]\n    (";
var G__198022 = (function (){var G__198070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198071 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198070,G__198071) : tailrecursion.hoplon.span.call(null,G__198070,G__198071));
})();
var G__198023 = "(";
var G__198024 = (function (){var G__198072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198073 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198072,G__198073) : tailrecursion.hoplon.span.call(null,G__198072,G__198073));
})();
var G__198025 = (function (){var G__198074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198075 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198074,G__198075) : tailrecursion.hoplon.span.call(null,G__198074,G__198075));
})();
var G__198026 = " ";
var G__198027 = (function (){var G__198076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198077 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198076,G__198077) : tailrecursion.hoplon.span.call(null,G__198076,G__198077));
})();
var G__198028 = ")\n        ";
var G__198029 = (function (){var G__198078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198079 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198078,G__198079) : tailrecursion.hoplon.span.call(null,G__198078,G__198079));
})();
var G__198030 = "\n        (";
var G__198031 = (function (){var G__198080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198081 = "iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198080,G__198081) : tailrecursion.hoplon.span.call(null,G__198080,G__198081));
})();
var G__198032 = " (";
var G__198033 = (function (){var G__198082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198083 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198082,G__198083) : tailrecursion.hoplon.span.call(null,G__198082,G__198083));
})();
var G__198034 = (function (){var G__198084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198085 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198084,G__198085) : tailrecursion.hoplon.span.call(null,G__198084,G__198085));
})();
var G__198035 = ") (";
var G__198036 = (function (){var G__198086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198087 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198086,G__198087) : tailrecursion.hoplon.span.call(null,G__198086,G__198087));
})();
var G__198037 = "(";
var G__198038 = (function (){var G__198088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198089 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198088,G__198089) : tailrecursion.hoplon.span.call(null,G__198088,G__198089));
})();
var G__198039 = " ";
var G__198040 = (function (){var G__198090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198091 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198090,G__198091) : tailrecursion.hoplon.span.call(null,G__198090,G__198091));
})();
var G__198041 = ") ";
var G__198042 = (function (){var G__198092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198093 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198092,G__198093) : tailrecursion.hoplon.span.call(null,G__198092,G__198093));
})();
var G__198043 = "))))\n  (";
var G__198044 = (function (){var G__198094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198095 = "iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198094,G__198095) : tailrecursion.hoplon.span.call(null,G__198094,G__198095));
})();
var G__198045 = " ";
var G__198046 = (function (){var G__198096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198097 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198096,G__198097) : tailrecursion.hoplon.span.call(null,G__198096,G__198097));
})();
var G__198047 = " ";
var G__198048 = (function (){var G__198098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198099 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198098,G__198099) : tailrecursion.hoplon.span.call(null,G__198098,G__198099));
})();
var G__198049 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__198003,G__198004,G__198005,G__198006,G__198007,G__198008,G__198009,G__198010,G__198011,G__198012,G__198013,G__198014,G__198015,G__198016,G__198017,G__198018,G__198019,G__198020,G__198021,G__198022,G__198023,G__198024,G__198025,G__198026,G__198027,G__198028,G__198029,G__198030,G__198031,G__198032,G__198033,G__198034,G__198035,G__198036,G__198037,G__198038,G__198039,G__198040,G__198041,G__198042,G__198043,G__198044,G__198045,G__198046,G__198047,G__198048,G__198049) : tailrecursion.hoplon.pre.call(null,G__198003,G__198004,G__198005,G__198006,G__198007,G__198008,G__198009,G__198010,G__198011,G__198012,G__198013,G__198014,G__198015,G__198016,G__198017,G__198018,G__198019,G__198020,G__198021,G__198022,G__198023,G__198024,G__198025,G__198026,G__198027,G__198028,G__198029,G__198030,G__198031,G__198032,G__198033,G__198034,G__198035,G__198036,G__198037,G__198038,G__198039,G__198040,G__198041,G__198042,G__198043,G__198044,G__198045,G__198046,G__198047,G__198048,G__198049));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198001,G__198002) : tailrecursion.hoplon.div.call(null,G__198001,G__198002));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198000) : tailrecursion.hoplon.div.call(null,G__198000));
})(),(function (){var G__198100 = cljs.core.PersistentArrayMap.EMPTY;
var G__198101 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For part b."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198100,G__198101) : tailrecursion.hoplon.markdown.para_node.call(null,G__198100,G__198101));
})(),(function (){var G__198194 = (function (){var G__198195 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198196 = (function (){var G__198197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198198 = "(";
var G__198199 = (function (){var G__198241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198242 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198241,G__198242) : tailrecursion.hoplon.span.call(null,G__198241,G__198242));
})();
var G__198200 = (function (){var G__198243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198244 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198243,G__198244) : tailrecursion.hoplon.span.call(null,G__198243,G__198244));
})();
var G__198201 = " [";
var G__198202 = (function (){var G__198245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198246 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198245,G__198246) : tailrecursion.hoplon.span.call(null,G__198245,G__198246));
})();
var G__198203 = " ";
var G__198204 = (function (){var G__198247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198248 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198247,G__198248) : tailrecursion.hoplon.span.call(null,G__198247,G__198248));
})();
var G__198205 = " ";
var G__198206 = (function (){var G__198249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198250 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198249,G__198250) : tailrecursion.hoplon.span.call(null,G__198249,G__198250));
})();
var G__198207 = (function (){var G__198251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198252 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198251,G__198252) : tailrecursion.hoplon.span.call(null,G__198251,G__198252));
})();
var G__198208 = "]\n  (";
var G__198209 = (function (){var G__198253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198254 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198253,G__198254) : tailrecursion.hoplon.span.call(null,G__198253,G__198254));
})();
var G__198210 = "[";
var G__198211 = (function (){var G__198255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198256 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198255,G__198256) : tailrecursion.hoplon.span.call(null,G__198255,G__198256));
})();
var G__198212 = " ";
var G__198213 = (function (){var G__198257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198258 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198257,G__198258) : tailrecursion.hoplon.span.call(null,G__198257,G__198258));
})();
var G__198214 = "\n         ";
var G__198215 = (function (){var G__198259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198260 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198259,G__198260) : tailrecursion.hoplon.span.call(null,G__198259,G__198260));
})();
var G__198216 = " ";
var G__198217 = (function (){var G__198261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198262 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198261,G__198262) : tailrecursion.hoplon.span.call(null,G__198261,G__198262));
})();
var G__198218 = "]\n    (";
var G__198219 = (function (){var G__198263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198264 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198263,G__198264) : tailrecursion.hoplon.span.call(null,G__198263,G__198264));
})();
var G__198220 = "(";
var G__198221 = (function (){var G__198265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198266 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198265,G__198266) : tailrecursion.hoplon.span.call(null,G__198265,G__198266));
})();
var G__198222 = (function (){var G__198267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198268 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198267,G__198268) : tailrecursion.hoplon.span.call(null,G__198267,G__198268));
})();
var G__198223 = " ";
var G__198224 = (function (){var G__198269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198270 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198269,G__198270) : tailrecursion.hoplon.span.call(null,G__198269,G__198270));
})();
var G__198225 = ")\n        ";
var G__198226 = (function (){var G__198271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198272 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198271,G__198272) : tailrecursion.hoplon.span.call(null,G__198271,G__198272));
})();
var G__198227 = "\n        (";
var G__198228 = (function (){var G__198273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198274 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198273,G__198274) : tailrecursion.hoplon.span.call(null,G__198273,G__198274));
})();
var G__198229 = " (";
var G__198230 = (function (){var G__198275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198276 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198275,G__198276) : tailrecursion.hoplon.span.call(null,G__198275,G__198276));
})();
var G__198231 = (function (){var G__198277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198278 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198277,G__198278) : tailrecursion.hoplon.span.call(null,G__198277,G__198278));
})();
var G__198232 = ") (";
var G__198233 = (function (){var G__198279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198280 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198279,G__198280) : tailrecursion.hoplon.span.call(null,G__198279,G__198280));
})();
var G__198234 = "(";
var G__198235 = (function (){var G__198281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198282 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198281,G__198282) : tailrecursion.hoplon.span.call(null,G__198281,G__198282));
})();
var G__198236 = " ";
var G__198237 = (function (){var G__198283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198284 = "this";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198283,G__198284) : tailrecursion.hoplon.span.call(null,G__198283,G__198284));
})();
var G__198238 = ") ";
var G__198239 = (function (){var G__198285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198286 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198285,G__198286) : tailrecursion.hoplon.span.call(null,G__198285,G__198286));
})();
var G__198240 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__198197,G__198198,G__198199,G__198200,G__198201,G__198202,G__198203,G__198204,G__198205,G__198206,G__198207,G__198208,G__198209,G__198210,G__198211,G__198212,G__198213,G__198214,G__198215,G__198216,G__198217,G__198218,G__198219,G__198220,G__198221,G__198222,G__198223,G__198224,G__198225,G__198226,G__198227,G__198228,G__198229,G__198230,G__198231,G__198232,G__198233,G__198234,G__198235,G__198236,G__198237,G__198238,G__198239,G__198240) : tailrecursion.hoplon.pre.call(null,G__198197,G__198198,G__198199,G__198200,G__198201,G__198202,G__198203,G__198204,G__198205,G__198206,G__198207,G__198208,G__198209,G__198210,G__198211,G__198212,G__198213,G__198214,G__198215,G__198216,G__198217,G__198218,G__198219,G__198220,G__198221,G__198222,G__198223,G__198224,G__198225,G__198226,G__198227,G__198228,G__198229,G__198230,G__198231,G__198232,G__198233,G__198234,G__198235,G__198236,G__198237,G__198238,G__198239,G__198240));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198195,G__198196) : tailrecursion.hoplon.div.call(null,G__198195,G__198196));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198194) : tailrecursion.hoplon.div.call(null,G__198194));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197900;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197899;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_197898;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_197897;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198287 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198288 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198291 = cljs.core.PersistentArrayMap.EMPTY;
var G__198292 = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. The ",(function (){var G__198293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__198294 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198293,G__198294) : tailrecursion.hoplon.markdown.code_node.call(null,G__198293,G__198294));
})()," procedure is only the simplest of a vast number of similar abstractions that can be captured as higher-order procedures.",(function (){var G__198295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__198296 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The intent of exercises 1.31-1.33 is to demonstrate the expressive power that is attained by using an appropriate abstraction to consolidate many seemingly disparate operations. However, though accumulation and filtering are elegant ideas, our hands are somewhat tied in using them at this point since we do not yet have data structures to provide suitable means of combination for these abstractions. We will return to these ideas in section 2.2.3 when we show how to use sequences as interfaces for combining filters and accumulators to build even more powerful abstractions. We will see there how these methods really come into their own as a powerful and elegant approach to designing programs."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198295,G__198296) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198295,G__198296));
})()," Write an analogous procedure called ",(function (){var G__198297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__198298 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198297,G__198298) : tailrecursion.hoplon.markdown.code_node.call(null,G__198297,G__198298));
})()," that returns the product of the values of a function at points over a given range. Show how to define ",(function (){var G__198299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"factorial"], null);
var G__198300 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198299,G__198300) : tailrecursion.hoplon.markdown.code_node.call(null,G__198299,G__198300));
})()," in terms of ",(function (){var G__198301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__198302 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198301,G__198302) : tailrecursion.hoplon.markdown.code_node.call(null,G__198301,G__198302));
})(),". Also use ",(function (){var G__198303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__198304 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198303,G__198304) : tailrecursion.hoplon.markdown.code_node.call(null,G__198303,G__198304));
})()," to compute approximations to \\(\\pi\\) using the formula",(function (){var G__198305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__198306 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This formula was discovered by the seventeenth-century English mathematician John Wallis."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__198305,G__198306) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__198305,G__198306));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198291,G__198292) : tailrecursion.hoplon.markdown.para_node.call(null,G__198291,G__198292));
})(),(function (){var G__198307 = cljs.core.PersistentArrayMap.EMPTY;
var G__198308 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{\\pi}{4}=\\frac{2\\cdot4\\cdot4\\cdot6\\cdot6\\cdot8\\cdot\\cdot\\cdot}{3\\cdot3\\cdot5\\cdot5\\cdot7\\cdot7\\cdot\\cdot\\cdot}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198307,G__198308) : tailrecursion.hoplon.markdown.para_node.call(null,G__198307,G__198308));
})(),(function (){var G__198309 = cljs.core.PersistentArrayMap.EMPTY;
var G__198310 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. If your ",(function (){var G__198311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__198312 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__198311,G__198312) : tailrecursion.hoplon.markdown.code_node.call(null,G__198311,G__198312));
})()," procedure generates a recursive process, write one that generates an iterative process. If it generates an iterative process, write one that generates a recursive process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198309,G__198310) : tailrecursion.hoplon.markdown.para_node.call(null,G__198309,G__198310));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198289;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198288;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198287;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198313 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198314 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_198315 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_198316 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__198317 = cljs.core.PersistentArrayMap.EMPTY;
var G__198318 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["First, iteratively:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198317,G__198318) : tailrecursion.hoplon.markdown.para_node.call(null,G__198317,G__198318));
})(),(function (){var G__198411 = (function (){var G__198412 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198413 = (function (){var G__198414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198415 = "(";
var G__198416 = (function (){var G__198458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198459 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198458,G__198459) : tailrecursion.hoplon.span.call(null,G__198458,G__198459));
})();
var G__198417 = (function (){var G__198460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198461 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198460,G__198461) : tailrecursion.hoplon.span.call(null,G__198460,G__198461));
})();
var G__198418 = " [";
var G__198419 = (function (){var G__198462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198463 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198462,G__198463) : tailrecursion.hoplon.span.call(null,G__198462,G__198463));
})();
var G__198420 = " ";
var G__198421 = (function (){var G__198464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198465 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198464,G__198465) : tailrecursion.hoplon.span.call(null,G__198464,G__198465));
})();
var G__198422 = " ";
var G__198423 = (function (){var G__198466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198467 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198466,G__198467) : tailrecursion.hoplon.span.call(null,G__198466,G__198467));
})();
var G__198424 = (function (){var G__198468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198469 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198468,G__198469) : tailrecursion.hoplon.span.call(null,G__198468,G__198469));
})();
var G__198425 = "]\n  (";
var G__198426 = (function (){var G__198470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198471 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198470,G__198471) : tailrecursion.hoplon.span.call(null,G__198470,G__198471));
})();
var G__198427 = "[";
var G__198428 = (function (){var G__198472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198473 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198472,G__198473) : tailrecursion.hoplon.span.call(null,G__198472,G__198473));
})();
var G__198429 = " ";
var G__198430 = (function (){var G__198474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198475 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198474,G__198475) : tailrecursion.hoplon.span.call(null,G__198474,G__198475));
})();
var G__198431 = "\n         ";
var G__198432 = (function (){var G__198476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198477 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198476,G__198477) : tailrecursion.hoplon.span.call(null,G__198476,G__198477));
})();
var G__198433 = " ";
var G__198434 = (function (){var G__198478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198479 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198478,G__198479) : tailrecursion.hoplon.span.call(null,G__198478,G__198479));
})();
var G__198435 = "]\n    (";
var G__198436 = (function (){var G__198480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198481 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198480,G__198481) : tailrecursion.hoplon.span.call(null,G__198480,G__198481));
})();
var G__198437 = "(";
var G__198438 = (function (){var G__198482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198483 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198482,G__198483) : tailrecursion.hoplon.span.call(null,G__198482,G__198483));
})();
var G__198439 = (function (){var G__198484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198485 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198484,G__198485) : tailrecursion.hoplon.span.call(null,G__198484,G__198485));
})();
var G__198440 = " ";
var G__198441 = (function (){var G__198486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198487 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198486,G__198487) : tailrecursion.hoplon.span.call(null,G__198486,G__198487));
})();
var G__198442 = ")\n        ";
var G__198443 = (function (){var G__198488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198489 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198488,G__198489) : tailrecursion.hoplon.span.call(null,G__198488,G__198489));
})();
var G__198444 = "\n        (";
var G__198445 = (function (){var G__198490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198491 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198490,G__198491) : tailrecursion.hoplon.span.call(null,G__198490,G__198491));
})();
var G__198446 = " (";
var G__198447 = (function (){var G__198492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198493 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198492,G__198493) : tailrecursion.hoplon.span.call(null,G__198492,G__198493));
})();
var G__198448 = (function (){var G__198494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198495 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198494,G__198495) : tailrecursion.hoplon.span.call(null,G__198494,G__198495));
})();
var G__198449 = ") (";
var G__198450 = (function (){var G__198496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198497 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198496,G__198497) : tailrecursion.hoplon.span.call(null,G__198496,G__198497));
})();
var G__198451 = "(";
var G__198452 = (function (){var G__198498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198499 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198498,G__198499) : tailrecursion.hoplon.span.call(null,G__198498,G__198499));
})();
var G__198453 = " ";
var G__198454 = (function (){var G__198500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198501 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198500,G__198501) : tailrecursion.hoplon.span.call(null,G__198500,G__198501));
})();
var G__198455 = ") ";
var G__198456 = (function (){var G__198502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198503 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198502,G__198503) : tailrecursion.hoplon.span.call(null,G__198502,G__198503));
})();
var G__198457 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__198414,G__198415,G__198416,G__198417,G__198418,G__198419,G__198420,G__198421,G__198422,G__198423,G__198424,G__198425,G__198426,G__198427,G__198428,G__198429,G__198430,G__198431,G__198432,G__198433,G__198434,G__198435,G__198436,G__198437,G__198438,G__198439,G__198440,G__198441,G__198442,G__198443,G__198444,G__198445,G__198446,G__198447,G__198448,G__198449,G__198450,G__198451,G__198452,G__198453,G__198454,G__198455,G__198456,G__198457) : tailrecursion.hoplon.pre.call(null,G__198414,G__198415,G__198416,G__198417,G__198418,G__198419,G__198420,G__198421,G__198422,G__198423,G__198424,G__198425,G__198426,G__198427,G__198428,G__198429,G__198430,G__198431,G__198432,G__198433,G__198434,G__198435,G__198436,G__198437,G__198438,G__198439,G__198440,G__198441,G__198442,G__198443,G__198444,G__198445,G__198446,G__198447,G__198448,G__198449,G__198450,G__198451,G__198452,G__198453,G__198454,G__198455,G__198456,G__198457));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198412,G__198413) : tailrecursion.hoplon.div.call(null,G__198412,G__198413));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198411) : tailrecursion.hoplon.div.call(null,G__198411));
})(),(function (){var G__198504 = cljs.core.PersistentArrayMap.EMPTY;
var G__198505 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Next, recursively:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__198504,G__198505) : tailrecursion.hoplon.markdown.para_node.call(null,G__198504,G__198505));
})(),(function (){var G__198585 = (function (){var G__198586 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198587 = (function (){var G__198588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198589 = "(";
var G__198590 = (function (){var G__198625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198626 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198625,G__198626) : tailrecursion.hoplon.span.call(null,G__198625,G__198626));
})();
var G__198591 = (function (){var G__198627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198628 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198627,G__198628) : tailrecursion.hoplon.span.call(null,G__198627,G__198628));
})();
var G__198592 = " [";
var G__198593 = (function (){var G__198629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198630 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198629,G__198630) : tailrecursion.hoplon.span.call(null,G__198629,G__198630));
})();
var G__198594 = " ";
var G__198595 = (function (){var G__198631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198632 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198631,G__198632) : tailrecursion.hoplon.span.call(null,G__198631,G__198632));
})();
var G__198596 = " ";
var G__198597 = (function (){var G__198633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198634 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198633,G__198634) : tailrecursion.hoplon.span.call(null,G__198633,G__198634));
})();
var G__198598 = (function (){var G__198635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198636 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198635,G__198636) : tailrecursion.hoplon.span.call(null,G__198635,G__198636));
})();
var G__198599 = "]\n  (";
var G__198600 = (function (){var G__198637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198638 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198637,G__198638) : tailrecursion.hoplon.span.call(null,G__198637,G__198638));
})();
var G__198601 = "(";
var G__198602 = (function (){var G__198639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198640 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198639,G__198640) : tailrecursion.hoplon.span.call(null,G__198639,G__198640));
})();
var G__198603 = (function (){var G__198641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198642 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198641,G__198642) : tailrecursion.hoplon.span.call(null,G__198641,G__198642));
})();
var G__198604 = " ";
var G__198605 = (function (){var G__198643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198644 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198643,G__198644) : tailrecursion.hoplon.span.call(null,G__198643,G__198644));
})();
var G__198606 = ")\n      ";
var G__198607 = (function (){var G__198645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198646 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198645,G__198646) : tailrecursion.hoplon.span.call(null,G__198645,G__198646));
})();
var G__198608 = "\n      (";
var G__198609 = (function (){var G__198647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198648 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198647,G__198648) : tailrecursion.hoplon.span.call(null,G__198647,G__198648));
})();
var G__198610 = "(";
var G__198611 = (function (){var G__198649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198650 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198649,G__198650) : tailrecursion.hoplon.span.call(null,G__198649,G__198650));
})();
var G__198612 = " ";
var G__198613 = (function (){var G__198651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198652 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198651,G__198652) : tailrecursion.hoplon.span.call(null,G__198651,G__198652));
})();
var G__198614 = ") (";
var G__198615 = (function (){var G__198653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198654 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198653,G__198654) : tailrecursion.hoplon.span.call(null,G__198653,G__198654));
})();
var G__198616 = " ";
var G__198617 = (function (){var G__198655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198656 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198655,G__198656) : tailrecursion.hoplon.span.call(null,G__198655,G__198656));
})();
var G__198618 = " (";
var G__198619 = (function (){var G__198657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198658 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198657,G__198658) : tailrecursion.hoplon.span.call(null,G__198657,G__198658));
})();
var G__198620 = (function (){var G__198659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198660 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198659,G__198660) : tailrecursion.hoplon.span.call(null,G__198659,G__198660));
})();
var G__198621 = ") ";
var G__198622 = (function (){var G__198661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198662 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198661,G__198662) : tailrecursion.hoplon.span.call(null,G__198661,G__198662));
})();
var G__198623 = (function (){var G__198663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198664 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198663,G__198664) : tailrecursion.hoplon.span.call(null,G__198663,G__198664));
})();
var G__198624 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$37 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$37(G__198588,G__198589,G__198590,G__198591,G__198592,G__198593,G__198594,G__198595,G__198596,G__198597,G__198598,G__198599,G__198600,G__198601,G__198602,G__198603,G__198604,G__198605,G__198606,G__198607,G__198608,G__198609,G__198610,G__198611,G__198612,G__198613,G__198614,G__198615,G__198616,G__198617,G__198618,G__198619,G__198620,G__198621,G__198622,G__198623,G__198624) : tailrecursion.hoplon.pre.call(null,G__198588,G__198589,G__198590,G__198591,G__198592,G__198593,G__198594,G__198595,G__198596,G__198597,G__198598,G__198599,G__198600,G__198601,G__198602,G__198603,G__198604,G__198605,G__198606,G__198607,G__198608,G__198609,G__198610,G__198611,G__198612,G__198613,G__198614,G__198615,G__198616,G__198617,G__198618,G__198619,G__198620,G__198621,G__198622,G__198623,G__198624));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198586,G__198587) : tailrecursion.hoplon.div.call(null,G__198586,G__198587));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198585) : tailrecursion.hoplon.div.call(null,G__198585));
})(),(function (){var G__198698 = (function (){var G__198699 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198700 = (function (){var G__198701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198702 = "(";
var G__198703 = (function (){var G__198716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198717 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198716,G__198717) : tailrecursion.hoplon.span.call(null,G__198716,G__198717));
})();
var G__198704 = (function (){var G__198718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198719 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198718,G__198719) : tailrecursion.hoplon.span.call(null,G__198718,G__198719));
})();
var G__198705 = " [";
var G__198706 = (function (){var G__198720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198721 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198720,G__198721) : tailrecursion.hoplon.span.call(null,G__198720,G__198721));
})();
var G__198707 = "]\n  (";
var G__198708 = (function (){var G__198722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198723 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198722,G__198723) : tailrecursion.hoplon.span.call(null,G__198722,G__198723));
})();
var G__198709 = " ";
var G__198710 = (function (){var G__198724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198725 = "identity ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198724,G__198725) : tailrecursion.hoplon.span.call(null,G__198724,G__198725));
})();
var G__198711 = (function (){var G__198726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198727 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198726,G__198727) : tailrecursion.hoplon.span.call(null,G__198726,G__198727));
})();
var G__198712 = " ";
var G__198713 = (function (){var G__198728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198729 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198728,G__198729) : tailrecursion.hoplon.span.call(null,G__198728,G__198729));
})();
var G__198714 = (function (){var G__198730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198731 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198730,G__198731) : tailrecursion.hoplon.span.call(null,G__198730,G__198731));
})();
var G__198715 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__198701,G__198702,G__198703,G__198704,G__198705,G__198706,G__198707,G__198708,G__198709,G__198710,G__198711,G__198712,G__198713,G__198714,G__198715) : tailrecursion.hoplon.pre.call(null,G__198701,G__198702,G__198703,G__198704,G__198705,G__198706,G__198707,G__198708,G__198709,G__198710,G__198711,G__198712,G__198713,G__198714,G__198715));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198699,G__198700) : tailrecursion.hoplon.div.call(null,G__198699,G__198700));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198698) : tailrecursion.hoplon.div.call(null,G__198698));
})(),(function (){var G__198865 = (function (){var G__198866 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__198867 = (function (){var G__198868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__198869 = "(";
var G__198870 = (function (){var G__198929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198930 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198929,G__198930) : tailrecursion.hoplon.span.call(null,G__198929,G__198930));
})();
var G__198871 = (function (){var G__198931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198932 = "pi-approximation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198931,G__198932) : tailrecursion.hoplon.span.call(null,G__198931,G__198932));
})();
var G__198872 = " [";
var G__198873 = (function (){var G__198933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198934 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198933,G__198934) : tailrecursion.hoplon.span.call(null,G__198933,G__198934));
})();
var G__198874 = "]\n  (";
var G__198875 = (function (){var G__198935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198936 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198935,G__198936) : tailrecursion.hoplon.span.call(null,G__198935,G__198936));
})();
var G__198876 = (function (){var G__198937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198938 = "term-denominator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198937,G__198938) : tailrecursion.hoplon.span.call(null,G__198937,G__198938));
})();
var G__198877 = " [";
var G__198878 = (function (){var G__198939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198940 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198939,G__198940) : tailrecursion.hoplon.span.call(null,G__198939,G__198940));
})();
var G__198879 = "] (";
var G__198880 = (function (){var G__198941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198942 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198941,G__198942) : tailrecursion.hoplon.span.call(null,G__198941,G__198942));
})();
var G__198881 = " (";
var G__198882 = (function (){var G__198943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198944 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198943,G__198944) : tailrecursion.hoplon.span.call(null,G__198943,G__198944));
})();
var G__198883 = (function (){var G__198945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198946 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198945,G__198946) : tailrecursion.hoplon.span.call(null,G__198945,G__198946));
})();
var G__198884 = " (";
var G__198885 = (function (){var G__198947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198948 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198947,G__198948) : tailrecursion.hoplon.span.call(null,G__198947,G__198948));
})();
var G__198886 = (function (){var G__198949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198950 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198949,G__198950) : tailrecursion.hoplon.span.call(null,G__198949,G__198950));
})();
var G__198887 = " ";
var G__198888 = (function (){var G__198951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198952 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198951,G__198952) : tailrecursion.hoplon.span.call(null,G__198951,G__198952));
})();
var G__198889 = "))))\n  (";
var G__198890 = (function (){var G__198953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198954 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198953,G__198954) : tailrecursion.hoplon.span.call(null,G__198953,G__198954));
})();
var G__198891 = (function (){var G__198955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198956 = "term-numerator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198955,G__198956) : tailrecursion.hoplon.span.call(null,G__198955,G__198956));
})();
var G__198892 = " [";
var G__198893 = (function (){var G__198957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198958 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198957,G__198958) : tailrecursion.hoplon.span.call(null,G__198957,G__198958));
})();
var G__198894 = "] (";
var G__198895 = (function (){var G__198959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198960 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198959,G__198960) : tailrecursion.hoplon.span.call(null,G__198959,G__198960));
})();
var G__198896 = (function (){var G__198961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198962 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198961,G__198962) : tailrecursion.hoplon.span.call(null,G__198961,G__198962));
})();
var G__198897 = "\n                              ";
var G__198898 = (function (){var G__198963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198964 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198963,G__198964) : tailrecursion.hoplon.span.call(null,G__198963,G__198964));
})();
var G__198899 = " \n                              (";
var G__198900 = (function (){var G__198965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198966 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198965,G__198966) : tailrecursion.hoplon.span.call(null,G__198965,G__198966));
})();
var G__198901 = "(";
var G__198902 = (function (){var G__198967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198968 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198967,G__198968) : tailrecursion.hoplon.span.call(null,G__198967,G__198968));
})();
var G__198903 = (function (){var G__198969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198970 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198969,G__198970) : tailrecursion.hoplon.span.call(null,G__198969,G__198970));
})();
var G__198904 = " ";
var G__198905 = (function (){var G__198971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198972 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198971,G__198972) : tailrecursion.hoplon.span.call(null,G__198971,G__198972));
})();
var G__198906 = ") ";
var G__198907 = (function (){var G__198973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198974 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198973,G__198974) : tailrecursion.hoplon.span.call(null,G__198973,G__198974));
})();
var G__198908 = ")))\n  (";
var G__198909 = (function (){var G__198975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__198976 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198975,G__198976) : tailrecursion.hoplon.span.call(null,G__198975,G__198976));
})();
var G__198910 = (function (){var G__198977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198978 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198977,G__198978) : tailrecursion.hoplon.span.call(null,G__198977,G__198978));
})();
var G__198911 = " (";
var G__198912 = (function (){var G__198979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198980 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198979,G__198980) : tailrecursion.hoplon.span.call(null,G__198979,G__198980));
})();
var G__198913 = (function (){var G__198981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198982 = "term-numerator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198981,G__198982) : tailrecursion.hoplon.span.call(null,G__198981,G__198982));
})();
var G__198914 = " ";
var G__198915 = (function (){var G__198983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198984 = "term-denominator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198983,G__198984) : tailrecursion.hoplon.span.call(null,G__198983,G__198984));
})();
var G__198916 = "))\n  (";
var G__198917 = (function (){var G__198985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198986 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198985,G__198986) : tailrecursion.hoplon.span.call(null,G__198985,G__198986));
})();
var G__198918 = (function (){var G__198987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198988 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198987,G__198988) : tailrecursion.hoplon.span.call(null,G__198987,G__198988));
})();
var G__198919 = " (";
var G__198920 = (function (){var G__198989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__198990 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198989,G__198990) : tailrecursion.hoplon.span.call(null,G__198989,G__198990));
})();
var G__198921 = " ";
var G__198922 = (function (){var G__198991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198992 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198991,G__198992) : tailrecursion.hoplon.span.call(null,G__198991,G__198992));
})();
var G__198923 = " ";
var G__198924 = (function (){var G__198993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__198994 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198993,G__198994) : tailrecursion.hoplon.span.call(null,G__198993,G__198994));
})();
var G__198925 = " ";
var G__198926 = (function (){var G__198995 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__198996 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198995,G__198996) : tailrecursion.hoplon.span.call(null,G__198995,G__198996));
})();
var G__198927 = (function (){var G__198997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__198998 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__198997,G__198998) : tailrecursion.hoplon.span.call(null,G__198997,G__198998));
})();
var G__198928 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__198868,G__198869,G__198870,G__198871,G__198872,G__198873,G__198874,G__198875,G__198876,G__198877,G__198878,G__198879,G__198880,G__198881,G__198882,G__198883,G__198884,G__198885,G__198886,G__198887,G__198888,G__198889,G__198890,G__198891,G__198892,G__198893,G__198894,G__198895,G__198896,G__198897,G__198898,G__198899,G__198900,G__198901,G__198902,G__198903,G__198904,G__198905,G__198906,G__198907,G__198908,G__198909,G__198910,G__198911,G__198912,G__198913,G__198914,G__198915,G__198916,G__198917,G__198918,G__198919,G__198920,G__198921,G__198922,G__198923,G__198924,G__198925,G__198926,G__198927,G__198928) : tailrecursion.hoplon.pre.call(null,G__198868,G__198869,G__198870,G__198871,G__198872,G__198873,G__198874,G__198875,G__198876,G__198877,G__198878,G__198879,G__198880,G__198881,G__198882,G__198883,G__198884,G__198885,G__198886,G__198887,G__198888,G__198889,G__198890,G__198891,G__198892,G__198893,G__198894,G__198895,G__198896,G__198897,G__198898,G__198899,G__198900,G__198901,G__198902,G__198903,G__198904,G__198905,G__198906,G__198907,G__198908,G__198909,G__198910,G__198911,G__198912,G__198913,G__198914,G__198915,G__198916,G__198917,G__198918,G__198919,G__198920,G__198921,G__198922,G__198923,G__198924,G__198925,G__198926,G__198927,G__198928));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__198866,G__198867) : tailrecursion.hoplon.div.call(null,G__198866,G__198867));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__198865) : tailrecursion.hoplon.div.call(null,G__198865));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198316;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198315;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_198314;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198313;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_198999 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199000 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199001 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199002 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199003 = cljs.core.PersistentArrayMap.EMPTY;
var G__199004 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. Show that ",(function (){var G__199005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__199006 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199005,G__199006) : tailrecursion.hoplon.markdown.code_node.call(null,G__199005,G__199006));
})()," and ",(function (){var G__199007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__199008 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199007,G__199008) : tailrecursion.hoplon.markdown.code_node.call(null,G__199007,G__199008));
})()," (exercise 1.31) are both special cases of a still more general notion called ",(function (){var G__199009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__199010 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199009,G__199010) : tailrecursion.hoplon.markdown.code_node.call(null,G__199009,G__199010));
})()," that combines a collection of terms, using some general accumulation function:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199003,G__199004) : tailrecursion.hoplon.markdown.para_node.call(null,G__199003,G__199004));
})(),(function (){var G__199042 = (function (){var G__199043 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199044 = (function (){var G__199045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199046 = "(";
var G__199047 = (function (){var G__199060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199061 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199060,G__199061) : tailrecursion.hoplon.span.call(null,G__199060,G__199061));
})();
var G__199048 = " ";
var G__199049 = (function (){var G__199062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199063 = "combiner";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199062,G__199063) : tailrecursion.hoplon.span.call(null,G__199062,G__199063));
})();
var G__199050 = " ";
var G__199051 = (function (){var G__199064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199065 = "null-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199064,G__199065) : tailrecursion.hoplon.span.call(null,G__199064,G__199065));
})();
var G__199052 = " ";
var G__199053 = (function (){var G__199066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199067 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199066,G__199067) : tailrecursion.hoplon.span.call(null,G__199066,G__199067));
})();
var G__199054 = " ";
var G__199055 = (function (){var G__199068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199069 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199068,G__199069) : tailrecursion.hoplon.span.call(null,G__199068,G__199069));
})();
var G__199056 = " ";
var G__199057 = (function (){var G__199070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199071 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199070,G__199071) : tailrecursion.hoplon.span.call(null,G__199070,G__199071));
})();
var G__199058 = (function (){var G__199072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199073 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199072,G__199073) : tailrecursion.hoplon.span.call(null,G__199072,G__199073));
})();
var G__199059 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$15(G__199045,G__199046,G__199047,G__199048,G__199049,G__199050,G__199051,G__199052,G__199053,G__199054,G__199055,G__199056,G__199057,G__199058,G__199059) : tailrecursion.hoplon.pre.call(null,G__199045,G__199046,G__199047,G__199048,G__199049,G__199050,G__199051,G__199052,G__199053,G__199054,G__199055,G__199056,G__199057,G__199058,G__199059));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199043,G__199044) : tailrecursion.hoplon.div.call(null,G__199043,G__199044));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199042) : tailrecursion.hoplon.div.call(null,G__199042));
})(),(function (){var G__199074 = cljs.core.PersistentArrayMap.EMPTY;
var G__199075 = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Accumulate"], null);
var G__199077 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199076,G__199077) : tailrecursion.hoplon.markdown.code_node.call(null,G__199076,G__199077));
})()," takes as arguments the same term and range specifications as ",(function (){var G__199078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__199079 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199078,G__199079) : tailrecursion.hoplon.markdown.code_node.call(null,G__199078,G__199079));
})()," and ",(function (){var G__199080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__199081 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199080,G__199081) : tailrecursion.hoplon.markdown.code_node.call(null,G__199080,G__199081));
})(),", together with a ",(function (){var G__199082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"combiner"], null);
var G__199083 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199082,G__199083) : tailrecursion.hoplon.markdown.code_node.call(null,G__199082,G__199083));
})()," procedure (of two arguments) that specifies how the current term is to be combined with the accumulation of the preceding terms and a ",(function (){var G__199084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"null-value"], null);
var G__199085 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199084,G__199085) : tailrecursion.hoplon.markdown.code_node.call(null,G__199084,G__199085));
})()," that specifies what base value to use when the terms run out. Write ",(function (){var G__199086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__199087 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199086,G__199087) : tailrecursion.hoplon.markdown.code_node.call(null,G__199086,G__199087));
})()," and show how ",(function (){var G__199088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__199089 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199088,G__199089) : tailrecursion.hoplon.markdown.code_node.call(null,G__199088,G__199089));
})()," and ",(function (){var G__199090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__199091 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199090,G__199091) : tailrecursion.hoplon.markdown.code_node.call(null,G__199090,G__199091));
})()," can both be defined as simple calls to ",(function (){var G__199092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__199093 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199092,G__199093) : tailrecursion.hoplon.markdown.code_node.call(null,G__199092,G__199093));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199074,G__199075) : tailrecursion.hoplon.markdown.para_node.call(null,G__199074,G__199075));
})(),(function (){var G__199094 = cljs.core.PersistentArrayMap.EMPTY;
var G__199095 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. If your ",(function (){var G__199096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__199097 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199096,G__199097) : tailrecursion.hoplon.markdown.code_node.call(null,G__199096,G__199097));
})()," procedure generates a recursive process, write one that generates an iterative process. If it generates an iterative process, write one that generates a recursive process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199094,G__199095) : tailrecursion.hoplon.markdown.para_node.call(null,G__199094,G__199095));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199002;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199001;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199000;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_198999;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_199098 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199099 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199100 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199101 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199202 = (function (){var G__199203 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199204 = (function (){var G__199205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199206 = "(";
var G__199207 = (function (){var G__199253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199254 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199253,G__199254) : tailrecursion.hoplon.span.call(null,G__199253,G__199254));
})();
var G__199208 = (function (){var G__199255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199256 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199255,G__199256) : tailrecursion.hoplon.span.call(null,G__199255,G__199256));
})();
var G__199209 = " [";
var G__199210 = (function (){var G__199257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199258 = "combiner";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199257,G__199258) : tailrecursion.hoplon.span.call(null,G__199257,G__199258));
})();
var G__199211 = " ";
var G__199212 = (function (){var G__199259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199260 = "null-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199259,G__199260) : tailrecursion.hoplon.span.call(null,G__199259,G__199260));
})();
var G__199213 = " ";
var G__199214 = (function (){var G__199261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199262 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199261,G__199262) : tailrecursion.hoplon.span.call(null,G__199261,G__199262));
})();
var G__199215 = " ";
var G__199216 = (function (){var G__199263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199264 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199263,G__199264) : tailrecursion.hoplon.span.call(null,G__199263,G__199264));
})();
var G__199217 = " ";
var G__199218 = (function (){var G__199265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199266 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199265,G__199266) : tailrecursion.hoplon.span.call(null,G__199265,G__199266));
})();
var G__199219 = (function (){var G__199267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199268 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199267,G__199268) : tailrecursion.hoplon.span.call(null,G__199267,G__199268));
})();
var G__199220 = "]\n  (";
var G__199221 = (function (){var G__199269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199270 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199269,G__199270) : tailrecursion.hoplon.span.call(null,G__199269,G__199270));
})();
var G__199222 = "[";
var G__199223 = (function (){var G__199271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199272 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199271,G__199272) : tailrecursion.hoplon.span.call(null,G__199271,G__199272));
})();
var G__199224 = " ";
var G__199225 = (function (){var G__199273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199274 = "null-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199273,G__199274) : tailrecursion.hoplon.span.call(null,G__199273,G__199274));
})();
var G__199226 = "\n         ";
var G__199227 = (function (){var G__199275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199276 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199275,G__199276) : tailrecursion.hoplon.span.call(null,G__199275,G__199276));
})();
var G__199228 = " ";
var G__199229 = (function (){var G__199277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199278 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199277,G__199278) : tailrecursion.hoplon.span.call(null,G__199277,G__199278));
})();
var G__199230 = "]\n    (";
var G__199231 = (function (){var G__199279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199280 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199279,G__199280) : tailrecursion.hoplon.span.call(null,G__199279,G__199280));
})();
var G__199232 = "(";
var G__199233 = (function (){var G__199281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199282 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199281,G__199282) : tailrecursion.hoplon.span.call(null,G__199281,G__199282));
})();
var G__199234 = (function (){var G__199283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199284 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199283,G__199284) : tailrecursion.hoplon.span.call(null,G__199283,G__199284));
})();
var G__199235 = " ";
var G__199236 = (function (){var G__199285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199286 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199285,G__199286) : tailrecursion.hoplon.span.call(null,G__199285,G__199286));
})();
var G__199237 = ")\n        ";
var G__199238 = (function (){var G__199287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199288 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199287,G__199288) : tailrecursion.hoplon.span.call(null,G__199287,G__199288));
})();
var G__199239 = "\n        (";
var G__199240 = (function (){var G__199289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199290 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199289,G__199290) : tailrecursion.hoplon.span.call(null,G__199289,G__199290));
})();
var G__199241 = " (";
var G__199242 = (function (){var G__199291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199292 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199291,G__199292) : tailrecursion.hoplon.span.call(null,G__199291,G__199292));
})();
var G__199243 = (function (){var G__199293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199294 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199293,G__199294) : tailrecursion.hoplon.span.call(null,G__199293,G__199294));
})();
var G__199244 = ") (";
var G__199245 = (function (){var G__199295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199296 = "combiner";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199295,G__199296) : tailrecursion.hoplon.span.call(null,G__199295,G__199296));
})();
var G__199246 = " (";
var G__199247 = (function (){var G__199297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199298 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199297,G__199298) : tailrecursion.hoplon.span.call(null,G__199297,G__199298));
})();
var G__199248 = " ";
var G__199249 = (function (){var G__199299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199300 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199299,G__199300) : tailrecursion.hoplon.span.call(null,G__199299,G__199300));
})();
var G__199250 = ") ";
var G__199251 = (function (){var G__199301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199302 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199301,G__199302) : tailrecursion.hoplon.span.call(null,G__199301,G__199302));
})();
var G__199252 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$48(G__199205,G__199206,G__199207,G__199208,G__199209,G__199210,G__199211,G__199212,G__199213,G__199214,G__199215,G__199216,G__199217,G__199218,G__199219,G__199220,G__199221,G__199222,G__199223,G__199224,G__199225,G__199226,G__199227,G__199228,G__199229,G__199230,G__199231,G__199232,G__199233,G__199234,G__199235,G__199236,G__199237,G__199238,G__199239,G__199240,G__199241,G__199242,G__199243,G__199244,G__199245,G__199246,G__199247,G__199248,G__199249,G__199250,G__199251,G__199252) : tailrecursion.hoplon.pre.call(null,G__199205,G__199206,G__199207,G__199208,G__199209,G__199210,G__199211,G__199212,G__199213,G__199214,G__199215,G__199216,G__199217,G__199218,G__199219,G__199220,G__199221,G__199222,G__199223,G__199224,G__199225,G__199226,G__199227,G__199228,G__199229,G__199230,G__199231,G__199232,G__199233,G__199234,G__199235,G__199236,G__199237,G__199238,G__199239,G__199240,G__199241,G__199242,G__199243,G__199244,G__199245,G__199246,G__199247,G__199248,G__199249,G__199250,G__199251,G__199252));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199203,G__199204) : tailrecursion.hoplon.div.call(null,G__199203,G__199204));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199202) : tailrecursion.hoplon.div.call(null,G__199202));
})(),(function (){var G__199399 = (function (){var G__199400 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199401 = (function (){var G__199402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199403 = "(";
var G__199404 = (function (){var G__199448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199449 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199448,G__199449) : tailrecursion.hoplon.span.call(null,G__199448,G__199449));
})();
var G__199405 = (function (){var G__199450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199451 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199450,G__199451) : tailrecursion.hoplon.span.call(null,G__199450,G__199451));
})();
var G__199406 = " [";
var G__199407 = (function (){var G__199452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199453 = "combiner";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199452,G__199453) : tailrecursion.hoplon.span.call(null,G__199452,G__199453));
})();
var G__199408 = " ";
var G__199409 = (function (){var G__199454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199455 = "null-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199454,G__199455) : tailrecursion.hoplon.span.call(null,G__199454,G__199455));
})();
var G__199410 = " ";
var G__199411 = (function (){var G__199456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199457 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199456,G__199457) : tailrecursion.hoplon.span.call(null,G__199456,G__199457));
})();
var G__199412 = " ";
var G__199413 = (function (){var G__199458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199459 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199458,G__199459) : tailrecursion.hoplon.span.call(null,G__199458,G__199459));
})();
var G__199414 = " ";
var G__199415 = (function (){var G__199460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199461 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199460,G__199461) : tailrecursion.hoplon.span.call(null,G__199460,G__199461));
})();
var G__199416 = (function (){var G__199462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199463 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199462,G__199463) : tailrecursion.hoplon.span.call(null,G__199462,G__199463));
})();
var G__199417 = "]\n  (";
var G__199418 = (function (){var G__199464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199465 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199464,G__199465) : tailrecursion.hoplon.span.call(null,G__199464,G__199465));
})();
var G__199419 = "(";
var G__199420 = (function (){var G__199466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199467 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199466,G__199467) : tailrecursion.hoplon.span.call(null,G__199466,G__199467));
})();
var G__199421 = (function (){var G__199468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199469 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199468,G__199469) : tailrecursion.hoplon.span.call(null,G__199468,G__199469));
})();
var G__199422 = " ";
var G__199423 = (function (){var G__199470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199471 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199470,G__199471) : tailrecursion.hoplon.span.call(null,G__199470,G__199471));
})();
var G__199424 = ")\n      ";
var G__199425 = (function (){var G__199472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199473 = "null-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199472,G__199473) : tailrecursion.hoplon.span.call(null,G__199472,G__199473));
})();
var G__199426 = "\n      (";
var G__199427 = (function (){var G__199474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199475 = "combiner";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199474,G__199475) : tailrecursion.hoplon.span.call(null,G__199474,G__199475));
})();
var G__199428 = " (";
var G__199429 = (function (){var G__199476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199477 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199476,G__199477) : tailrecursion.hoplon.span.call(null,G__199476,G__199477));
})();
var G__199430 = " ";
var G__199431 = (function (){var G__199478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199479 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199478,G__199479) : tailrecursion.hoplon.span.call(null,G__199478,G__199479));
})();
var G__199432 = ") \n                (";
var G__199433 = (function (){var G__199480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199481 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199480,G__199481) : tailrecursion.hoplon.span.call(null,G__199480,G__199481));
})();
var G__199434 = " ";
var G__199435 = (function (){var G__199482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199483 = "combiner";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199482,G__199483) : tailrecursion.hoplon.span.call(null,G__199482,G__199483));
})();
var G__199436 = " \n                            ";
var G__199437 = (function (){var G__199484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199485 = "null-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199484,G__199485) : tailrecursion.hoplon.span.call(null,G__199484,G__199485));
})();
var G__199438 = " \n                            ";
var G__199439 = (function (){var G__199486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199487 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199486,G__199487) : tailrecursion.hoplon.span.call(null,G__199486,G__199487));
})();
var G__199440 = " \n                            (";
var G__199441 = (function (){var G__199488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199489 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199488,G__199489) : tailrecursion.hoplon.span.call(null,G__199488,G__199489));
})();
var G__199442 = (function (){var G__199490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199491 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199490,G__199491) : tailrecursion.hoplon.span.call(null,G__199490,G__199491));
})();
var G__199443 = ") \n                            ";
var G__199444 = (function (){var G__199492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199493 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199492,G__199493) : tailrecursion.hoplon.span.call(null,G__199492,G__199493));
})();
var G__199445 = "\n                            ";
var G__199446 = (function (){var G__199494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199495 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199494,G__199495) : tailrecursion.hoplon.span.call(null,G__199494,G__199495));
})();
var G__199447 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__199402,G__199403,G__199404,G__199405,G__199406,G__199407,G__199408,G__199409,G__199410,G__199411,G__199412,G__199413,G__199414,G__199415,G__199416,G__199417,G__199418,G__199419,G__199420,G__199421,G__199422,G__199423,G__199424,G__199425,G__199426,G__199427,G__199428,G__199429,G__199430,G__199431,G__199432,G__199433,G__199434,G__199435,G__199436,G__199437,G__199438,G__199439,G__199440,G__199441,G__199442,G__199443,G__199444,G__199445,G__199446,G__199447) : tailrecursion.hoplon.pre.call(null,G__199402,G__199403,G__199404,G__199405,G__199406,G__199407,G__199408,G__199409,G__199410,G__199411,G__199412,G__199413,G__199414,G__199415,G__199416,G__199417,G__199418,G__199419,G__199420,G__199421,G__199422,G__199423,G__199424,G__199425,G__199426,G__199427,G__199428,G__199429,G__199430,G__199431,G__199432,G__199433,G__199434,G__199435,G__199436,G__199437,G__199438,G__199439,G__199440,G__199441,G__199442,G__199443,G__199444,G__199445,G__199446,G__199447));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199400,G__199401) : tailrecursion.hoplon.div.call(null,G__199400,G__199401));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199399) : tailrecursion.hoplon.div.call(null,G__199399));
})(),(function (){var G__199596 = (function (){var G__199597 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199598 = (function (){var G__199599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199600 = "(";
var G__199601 = (function (){var G__199645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199646 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199645,G__199646) : tailrecursion.hoplon.span.call(null,G__199645,G__199646));
})();
var G__199602 = (function (){var G__199647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199648 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199647,G__199648) : tailrecursion.hoplon.span.call(null,G__199647,G__199648));
})();
var G__199603 = " [";
var G__199604 = (function (){var G__199649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199650 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199649,G__199650) : tailrecursion.hoplon.span.call(null,G__199649,G__199650));
})();
var G__199605 = " ";
var G__199606 = (function (){var G__199651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199652 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199651,G__199652) : tailrecursion.hoplon.span.call(null,G__199651,G__199652));
})();
var G__199607 = " ";
var G__199608 = (function (){var G__199653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199654 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199653,G__199654) : tailrecursion.hoplon.span.call(null,G__199653,G__199654));
})();
var G__199609 = (function (){var G__199655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199656 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199655,G__199656) : tailrecursion.hoplon.span.call(null,G__199655,G__199656));
})();
var G__199610 = "]\n  (";
var G__199611 = (function (){var G__199657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199658 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199657,G__199658) : tailrecursion.hoplon.span.call(null,G__199657,G__199658));
})();
var G__199612 = " ";
var G__199613 = (function (){var G__199659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199660 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199659,G__199660) : tailrecursion.hoplon.span.call(null,G__199659,G__199660));
})();
var G__199614 = (function (){var G__199661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199662 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199661,G__199662) : tailrecursion.hoplon.span.call(null,G__199661,G__199662));
})();
var G__199615 = " ";
var G__199616 = (function (){var G__199663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199664 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199663,G__199664) : tailrecursion.hoplon.span.call(null,G__199663,G__199664));
})();
var G__199617 = " ";
var G__199618 = (function (){var G__199665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199666 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199665,G__199666) : tailrecursion.hoplon.span.call(null,G__199665,G__199666));
})();
var G__199619 = " ";
var G__199620 = (function (){var G__199667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199668 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199667,G__199668) : tailrecursion.hoplon.span.call(null,G__199667,G__199668));
})();
var G__199621 = (function (){var G__199669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199670 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199669,G__199670) : tailrecursion.hoplon.span.call(null,G__199669,G__199670));
})();
var G__199622 = "))\n(";
var G__199623 = (function (){var G__199671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199672 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199671,G__199672) : tailrecursion.hoplon.span.call(null,G__199671,G__199672));
})();
var G__199624 = (function (){var G__199673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199674 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199673,G__199674) : tailrecursion.hoplon.span.call(null,G__199673,G__199674));
})();
var G__199625 = " [";
var G__199626 = (function (){var G__199675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199676 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199675,G__199676) : tailrecursion.hoplon.span.call(null,G__199675,G__199676));
})();
var G__199627 = " ";
var G__199628 = (function (){var G__199677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199678 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199677,G__199678) : tailrecursion.hoplon.span.call(null,G__199677,G__199678));
})();
var G__199629 = " ";
var G__199630 = (function (){var G__199679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199680 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199679,G__199680) : tailrecursion.hoplon.span.call(null,G__199679,G__199680));
})();
var G__199631 = (function (){var G__199681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199682 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199681,G__199682) : tailrecursion.hoplon.span.call(null,G__199681,G__199682));
})();
var G__199632 = "]\n  (";
var G__199633 = (function (){var G__199683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199684 = "accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199683,G__199684) : tailrecursion.hoplon.span.call(null,G__199683,G__199684));
})();
var G__199634 = " ";
var G__199635 = (function (){var G__199685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199686 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199685,G__199686) : tailrecursion.hoplon.span.call(null,G__199685,G__199686));
})();
var G__199636 = (function (){var G__199687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__199688 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199687,G__199688) : tailrecursion.hoplon.span.call(null,G__199687,G__199688));
})();
var G__199637 = " ";
var G__199638 = (function (){var G__199689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199690 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199689,G__199690) : tailrecursion.hoplon.span.call(null,G__199689,G__199690));
})();
var G__199639 = " ";
var G__199640 = (function (){var G__199691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199692 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199691,G__199692) : tailrecursion.hoplon.span.call(null,G__199691,G__199692));
})();
var G__199641 = " ";
var G__199642 = (function (){var G__199693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199694 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199693,G__199694) : tailrecursion.hoplon.span.call(null,G__199693,G__199694));
})();
var G__199643 = (function (){var G__199695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199696 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199695,G__199696) : tailrecursion.hoplon.span.call(null,G__199695,G__199696));
})();
var G__199644 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__199599,G__199600,G__199601,G__199602,G__199603,G__199604,G__199605,G__199606,G__199607,G__199608,G__199609,G__199610,G__199611,G__199612,G__199613,G__199614,G__199615,G__199616,G__199617,G__199618,G__199619,G__199620,G__199621,G__199622,G__199623,G__199624,G__199625,G__199626,G__199627,G__199628,G__199629,G__199630,G__199631,G__199632,G__199633,G__199634,G__199635,G__199636,G__199637,G__199638,G__199639,G__199640,G__199641,G__199642,G__199643,G__199644) : tailrecursion.hoplon.pre.call(null,G__199599,G__199600,G__199601,G__199602,G__199603,G__199604,G__199605,G__199606,G__199607,G__199608,G__199609,G__199610,G__199611,G__199612,G__199613,G__199614,G__199615,G__199616,G__199617,G__199618,G__199619,G__199620,G__199621,G__199622,G__199623,G__199624,G__199625,G__199626,G__199627,G__199628,G__199629,G__199630,G__199631,G__199632,G__199633,G__199634,G__199635,G__199636,G__199637,G__199638,G__199639,G__199640,G__199641,G__199642,G__199643,G__199644));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199597,G__199598) : tailrecursion.hoplon.div.call(null,G__199597,G__199598));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199596) : tailrecursion.hoplon.div.call(null,G__199596));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199101;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199100;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199099;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199098;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_199697 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199698 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199699 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199700 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199701 = cljs.core.PersistentArrayMap.EMPTY;
var G__199702 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You can obtain an even more general version of ",(function (){var G__199703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__199704 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199703,G__199704) : tailrecursion.hoplon.markdown.code_node.call(null,G__199703,G__199704));
})()," (exercise 1.32) by introducing the notion of a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filter"], null)], 0))," on the terms to be combined. That is, combine only those terms derived from values in the range that satisfy a specified condition. The resulting ",(function (){var G__199705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"filtered-accumulate"], null);
var G__199706 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199705,G__199706) : tailrecursion.hoplon.markdown.code_node.call(null,G__199705,G__199706));
})()," abstraction takes the same arguments as ",(function (){var G__199707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"accumulate"], null);
var G__199708 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199707,G__199708) : tailrecursion.hoplon.markdown.code_node.call(null,G__199707,G__199708));
})(),", together with an additional predicate of one argument that specifies the filter. Write ",(function (){var G__199709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"filtered-accumulate"], null);
var G__199710 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199709,G__199710) : tailrecursion.hoplon.markdown.code_node.call(null,G__199709,G__199710));
})()," as a procedure. Show how to express the following using ",(function (){var G__199711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"filtered-accumulate"], null);
var G__199712 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199711,G__199712) : tailrecursion.hoplon.markdown.code_node.call(null,G__199711,G__199712));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199701,G__199702) : tailrecursion.hoplon.markdown.para_node.call(null,G__199701,G__199702));
})(),(function (){var G__199713 = cljs.core.PersistentArrayMap.EMPTY;
var G__199714 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. the sum of the squares of the prime numbers in the interval \\(a\\) to \\(b\\) (assuming that you have a ",(function (){var G__199715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"prime?"], null);
var G__199716 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__199715,G__199716) : tailrecursion.hoplon.markdown.code_node.call(null,G__199715,G__199716));
})()," predicate already written)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199713,G__199714) : tailrecursion.hoplon.markdown.para_node.call(null,G__199713,G__199714));
})(),(function (){var G__199717 = cljs.core.PersistentArrayMap.EMPTY;
var G__199718 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. the product of all the positive integers less than \\(n\\) that are relatively prime to \\(n\\) (i.e., all positive integers \\(i < n\\) such that \\(GCD(i,n) = 1\\))."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__199717,G__199718) : tailrecursion.hoplon.markdown.para_node.call(null,G__199717,G__199718));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199700;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199699;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199698;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199697;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_199719 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199720 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_199721 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_199722 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__199854 = (function (){var G__199855 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__199856 = (function (){var G__199857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__199858 = "(";
var G__199859 = (function (){var G__199920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199921 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199920,G__199921) : tailrecursion.hoplon.span.call(null,G__199920,G__199921));
})();
var G__199860 = (function (){var G__199922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199923 = "filtered-accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199922,G__199923) : tailrecursion.hoplon.span.call(null,G__199922,G__199923));
})();
var G__199861 = " [";
var G__199862 = (function (){var G__199924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199925 = "combiner";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199924,G__199925) : tailrecursion.hoplon.span.call(null,G__199924,G__199925));
})();
var G__199863 = " ";
var G__199864 = (function (){var G__199926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199927 = "null-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199926,G__199927) : tailrecursion.hoplon.span.call(null,G__199926,G__199927));
})();
var G__199865 = " ";
var G__199866 = (function (){var G__199928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199929 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199928,G__199929) : tailrecursion.hoplon.span.call(null,G__199928,G__199929));
})();
var G__199867 = " ";
var G__199868 = (function (){var G__199930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199931 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199930,G__199931) : tailrecursion.hoplon.span.call(null,G__199930,G__199931));
})();
var G__199869 = " ";
var G__199870 = (function (){var G__199932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199933 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199932,G__199933) : tailrecursion.hoplon.span.call(null,G__199932,G__199933));
})();
var G__199871 = (function (){var G__199934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199935 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199934,G__199935) : tailrecursion.hoplon.span.call(null,G__199934,G__199935));
})();
var G__199872 = " ";
var G__199873 = (function (){var G__199936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199937 = "filter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199936,G__199937) : tailrecursion.hoplon.span.call(null,G__199936,G__199937));
})();
var G__199874 = "]\n  (";
var G__199875 = (function (){var G__199938 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__199939 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199938,G__199939) : tailrecursion.hoplon.span.call(null,G__199938,G__199939));
})();
var G__199876 = "[";
var G__199877 = (function (){var G__199940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199941 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199940,G__199941) : tailrecursion.hoplon.span.call(null,G__199940,G__199941));
})();
var G__199878 = " ";
var G__199879 = (function (){var G__199942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199943 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199942,G__199943) : tailrecursion.hoplon.span.call(null,G__199942,G__199943));
})();
var G__199880 = "\n         ";
var G__199881 = (function (){var G__199944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199945 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199944,G__199945) : tailrecursion.hoplon.span.call(null,G__199944,G__199945));
})();
var G__199882 = " ";
var G__199883 = (function (){var G__199946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199947 = "null-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199946,G__199947) : tailrecursion.hoplon.span.call(null,G__199946,G__199947));
})();
var G__199884 = "]\n    (";
var G__199885 = (function (){var G__199948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199949 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199948,G__199949) : tailrecursion.hoplon.span.call(null,G__199948,G__199949));
})();
var G__199886 = "(";
var G__199887 = (function (){var G__199950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199951 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199950,G__199951) : tailrecursion.hoplon.span.call(null,G__199950,G__199951));
})();
var G__199888 = (function (){var G__199952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199953 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199952,G__199953) : tailrecursion.hoplon.span.call(null,G__199952,G__199953));
})();
var G__199889 = " ";
var G__199890 = (function (){var G__199954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199955 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199954,G__199955) : tailrecursion.hoplon.span.call(null,G__199954,G__199955));
})();
var G__199891 = ") ";
var G__199892 = (function (){var G__199956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199957 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199956,G__199957) : tailrecursion.hoplon.span.call(null,G__199956,G__199957));
})();
var G__199893 = "\n          (";
var G__199894 = (function (){var G__199958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199959 = "filter?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199958,G__199959) : tailrecursion.hoplon.span.call(null,G__199958,G__199959));
})();
var G__199895 = " ";
var G__199896 = (function (){var G__199960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199961 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199960,G__199961) : tailrecursion.hoplon.span.call(null,G__199960,G__199961));
})();
var G__199897 = ") (";
var G__199898 = (function (){var G__199962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199963 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199962,G__199963) : tailrecursion.hoplon.span.call(null,G__199962,G__199963));
})();
var G__199899 = " (";
var G__199900 = (function (){var G__199964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199965 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199964,G__199965) : tailrecursion.hoplon.span.call(null,G__199964,G__199965));
})();
var G__199901 = (function (){var G__199966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199967 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199966,G__199967) : tailrecursion.hoplon.span.call(null,G__199966,G__199967));
})();
var G__199902 = ")\n                                  (";
var G__199903 = (function (){var G__199968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199969 = "combiner";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199968,G__199969) : tailrecursion.hoplon.span.call(null,G__199968,G__199969));
})();
var G__199904 = " (";
var G__199905 = (function (){var G__199970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199971 = "term";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199970,G__199971) : tailrecursion.hoplon.span.call(null,G__199970,G__199971));
})();
var G__199906 = " ";
var G__199907 = (function (){var G__199972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199973 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199972,G__199973) : tailrecursion.hoplon.span.call(null,G__199972,G__199973));
})();
var G__199908 = ")\n                                            ";
var G__199909 = (function (){var G__199974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199975 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199974,G__199975) : tailrecursion.hoplon.span.call(null,G__199974,G__199975));
})();
var G__199910 = "))\n          ";
var G__199911 = (function (){var G__199976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199977 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199976,G__199977) : tailrecursion.hoplon.span.call(null,G__199976,G__199977));
})();
var G__199912 = " (";
var G__199913 = (function (){var G__199978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__199979 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199978,G__199979) : tailrecursion.hoplon.span.call(null,G__199978,G__199979));
})();
var G__199914 = " (";
var G__199915 = (function (){var G__199980 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__199981 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199980,G__199981) : tailrecursion.hoplon.span.call(null,G__199980,G__199981));
})();
var G__199916 = (function (){var G__199982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199983 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199982,G__199983) : tailrecursion.hoplon.span.call(null,G__199982,G__199983));
})();
var G__199917 = ") ";
var G__199918 = (function (){var G__199984 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__199985 = "result";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__199984,G__199985) : tailrecursion.hoplon.span.call(null,G__199984,G__199985));
})();
var G__199919 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__199857,G__199858,G__199859,G__199860,G__199861,G__199862,G__199863,G__199864,G__199865,G__199866,G__199867,G__199868,G__199869,G__199870,G__199871,G__199872,G__199873,G__199874,G__199875,G__199876,G__199877,G__199878,G__199879,G__199880,G__199881,G__199882,G__199883,G__199884,G__199885,G__199886,G__199887,G__199888,G__199889,G__199890,G__199891,G__199892,G__199893,G__199894,G__199895,G__199896,G__199897,G__199898,G__199899,G__199900,G__199901,G__199902,G__199903,G__199904,G__199905,G__199906,G__199907,G__199908,G__199909,G__199910,G__199911,G__199912,G__199913,G__199914,G__199915,G__199916,G__199917,G__199918,G__199919) : tailrecursion.hoplon.pre.call(null,G__199857,G__199858,G__199859,G__199860,G__199861,G__199862,G__199863,G__199864,G__199865,G__199866,G__199867,G__199868,G__199869,G__199870,G__199871,G__199872,G__199873,G__199874,G__199875,G__199876,G__199877,G__199878,G__199879,G__199880,G__199881,G__199882,G__199883,G__199884,G__199885,G__199886,G__199887,G__199888,G__199889,G__199890,G__199891,G__199892,G__199893,G__199894,G__199895,G__199896,G__199897,G__199898,G__199899,G__199900,G__199901,G__199902,G__199903,G__199904,G__199905,G__199906,G__199907,G__199908,G__199909,G__199910,G__199911,G__199912,G__199913,G__199914,G__199915,G__199916,G__199917,G__199918,G__199919));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__199855,G__199856) : tailrecursion.hoplon.div.call(null,G__199855,G__199856));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__199854) : tailrecursion.hoplon.div.call(null,G__199854));
})(),(function (){var G__200035 = (function (){var G__200036 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200037 = (function (){var G__200038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200039 = "(";
var G__200040 = (function (){var G__200061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200062 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200061,G__200062) : tailrecursion.hoplon.span.call(null,G__200061,G__200062));
})();
var G__200041 = (function (){var G__200063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200064 = "sum-prime-squares";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200063,G__200064) : tailrecursion.hoplon.span.call(null,G__200063,G__200064));
})();
var G__200042 = " [";
var G__200043 = (function (){var G__200065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200066 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200065,G__200066) : tailrecursion.hoplon.span.call(null,G__200065,G__200066));
})();
var G__200044 = " ";
var G__200045 = (function (){var G__200067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200068 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200067,G__200068) : tailrecursion.hoplon.span.call(null,G__200067,G__200068));
})();
var G__200046 = "]\n  (";
var G__200047 = (function (){var G__200069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200070 = "filtered-accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200069,G__200070) : tailrecursion.hoplon.span.call(null,G__200069,G__200070));
})();
var G__200048 = " ";
var G__200049 = (function (){var G__200071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200072 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200071,G__200072) : tailrecursion.hoplon.span.call(null,G__200071,G__200072));
})();
var G__200050 = (function (){var G__200073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200074 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200073,G__200074) : tailrecursion.hoplon.span.call(null,G__200073,G__200074));
})();
var G__200051 = " ";
var G__200052 = (function (){var G__200075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200076 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200075,G__200076) : tailrecursion.hoplon.span.call(null,G__200075,G__200076));
})();
var G__200053 = " ";
var G__200054 = (function (){var G__200077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200078 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200077,G__200078) : tailrecursion.hoplon.span.call(null,G__200077,G__200078));
})();
var G__200055 = " ";
var G__200056 = (function (){var G__200079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200080 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200079,G__200080) : tailrecursion.hoplon.span.call(null,G__200079,G__200080));
})();
var G__200057 = (function (){var G__200081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200082 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200081,G__200082) : tailrecursion.hoplon.span.call(null,G__200081,G__200082));
})();
var G__200058 = " ";
var G__200059 = (function (){var G__200083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200084 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200083,G__200084) : tailrecursion.hoplon.span.call(null,G__200083,G__200084));
})();
var G__200060 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__200038,G__200039,G__200040,G__200041,G__200042,G__200043,G__200044,G__200045,G__200046,G__200047,G__200048,G__200049,G__200050,G__200051,G__200052,G__200053,G__200054,G__200055,G__200056,G__200057,G__200058,G__200059,G__200060) : tailrecursion.hoplon.pre.call(null,G__200038,G__200039,G__200040,G__200041,G__200042,G__200043,G__200044,G__200045,G__200046,G__200047,G__200048,G__200049,G__200050,G__200051,G__200052,G__200053,G__200054,G__200055,G__200056,G__200057,G__200058,G__200059,G__200060));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200036,G__200037) : tailrecursion.hoplon.div.call(null,G__200036,G__200037));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200035) : tailrecursion.hoplon.div.call(null,G__200035));
})(),(function (){var G__200160 = (function (){var G__200161 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200162 = (function (){var G__200163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200164 = "(";
var G__200165 = (function (){var G__200198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200199 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200198,G__200199) : tailrecursion.hoplon.span.call(null,G__200198,G__200199));
})();
var G__200166 = (function (){var G__200200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200201 = "relatively-prime-factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200200,G__200201) : tailrecursion.hoplon.span.call(null,G__200200,G__200201));
})();
var G__200167 = " [";
var G__200168 = (function (){var G__200202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200203 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200202,G__200203) : tailrecursion.hoplon.span.call(null,G__200202,G__200203));
})();
var G__200169 = "]\n  (";
var G__200170 = (function (){var G__200204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200205 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200204,G__200205) : tailrecursion.hoplon.span.call(null,G__200204,G__200205));
})();
var G__200171 = (function (){var G__200206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200207 = "gcd-filter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200206,G__200207) : tailrecursion.hoplon.span.call(null,G__200206,G__200207));
})();
var G__200172 = " [";
var G__200173 = (function (){var G__200208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200209 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200208,G__200209) : tailrecursion.hoplon.span.call(null,G__200208,G__200209));
})();
var G__200174 = "] (";
var G__200175 = (function (){var G__200210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200211 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200210,G__200211) : tailrecursion.hoplon.span.call(null,G__200210,G__200211));
})();
var G__200176 = "(";
var G__200177 = (function (){var G__200212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200213 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200212,G__200213) : tailrecursion.hoplon.span.call(null,G__200212,G__200213));
})();
var G__200178 = " ";
var G__200179 = (function (){var G__200214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200215 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200214,G__200215) : tailrecursion.hoplon.span.call(null,G__200214,G__200215));
})();
var G__200180 = " ";
var G__200181 = (function (){var G__200216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200217 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200216,G__200217) : tailrecursion.hoplon.span.call(null,G__200216,G__200217));
})();
var G__200182 = ") ";
var G__200183 = (function (){var G__200218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200219 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200218,G__200219) : tailrecursion.hoplon.span.call(null,G__200218,G__200219));
})();
var G__200184 = "))\n  (";
var G__200185 = (function (){var G__200220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200221 = "filtered-accumulate";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200220,G__200221) : tailrecursion.hoplon.span.call(null,G__200220,G__200221));
})();
var G__200186 = " ";
var G__200187 = (function (){var G__200222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200223 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200222,G__200223) : tailrecursion.hoplon.span.call(null,G__200222,G__200223));
})();
var G__200188 = (function (){var G__200224 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200225 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200224,G__200225) : tailrecursion.hoplon.span.call(null,G__200224,G__200225));
})();
var G__200189 = " ";
var G__200190 = (function (){var G__200226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200227 = "identity ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200226,G__200227) : tailrecursion.hoplon.span.call(null,G__200226,G__200227));
})();
var G__200191 = (function (){var G__200228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200229 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200228,G__200229) : tailrecursion.hoplon.span.call(null,G__200228,G__200229));
})();
var G__200192 = " ";
var G__200193 = (function (){var G__200230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200231 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200230,G__200231) : tailrecursion.hoplon.span.call(null,G__200230,G__200231));
})();
var G__200194 = (function (){var G__200232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200233 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200232,G__200233) : tailrecursion.hoplon.span.call(null,G__200232,G__200233));
})();
var G__200195 = " ";
var G__200196 = (function (){var G__200234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200235 = "gcd-filter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200234,G__200235) : tailrecursion.hoplon.span.call(null,G__200234,G__200235));
})();
var G__200197 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__200163,G__200164,G__200165,G__200166,G__200167,G__200168,G__200169,G__200170,G__200171,G__200172,G__200173,G__200174,G__200175,G__200176,G__200177,G__200178,G__200179,G__200180,G__200181,G__200182,G__200183,G__200184,G__200185,G__200186,G__200187,G__200188,G__200189,G__200190,G__200191,G__200192,G__200193,G__200194,G__200195,G__200196,G__200197) : tailrecursion.hoplon.pre.call(null,G__200163,G__200164,G__200165,G__200166,G__200167,G__200168,G__200169,G__200170,G__200171,G__200172,G__200173,G__200174,G__200175,G__200176,G__200177,G__200178,G__200179,G__200180,G__200181,G__200182,G__200183,G__200184,G__200185,G__200186,G__200187,G__200188,G__200189,G__200190,G__200191,G__200192,G__200193,G__200194,G__200195,G__200196,G__200197));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200161,G__200162) : tailrecursion.hoplon.div.call(null,G__200161,G__200162));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200160) : tailrecursion.hoplon.div.call(null,G__200160));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199722;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199721;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_199720;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_199719;
}})()], 0))], 0))], 0));
var G__194640 = "";
var G__194641 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Constructing Procedures using fn"], null),(function (){var _STAR_references_STAR_200236 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200237 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_200238 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_200239 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__200240 = cljs.core.PersistentArrayMap.EMPTY;
var G__200241 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It might be useful to note that in Scheme this function is named ",(function (){var G__200242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lambda"], null);
var G__200243 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200242,G__200243) : tailrecursion.hoplon.markdown.code_node.call(null,G__200242,G__200243));
})()," (after the lambda calculus)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200240,G__200241) : tailrecursion.hoplon.markdown.para_node.call(null,G__200240,G__200241));
})(),(function (){var G__200244 = cljs.core.PersistentArrayMap.EMPTY;
var G__200245 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In using ",(function (){var G__200246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sum"], null);
var G__200247 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200246,G__200247) : tailrecursion.hoplon.markdown.code_node.call(null,G__200246,G__200247));
})()," as in section 1.3.1, it seems terribly awkward to have to define trivial procedures such as ",(function (){var G__200248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-term"], null);
var G__200249 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200248,G__200249) : tailrecursion.hoplon.markdown.code_node.call(null,G__200248,G__200249));
})()," and ",(function (){var G__200250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-next"], null);
var G__200251 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200250,G__200251) : tailrecursion.hoplon.markdown.code_node.call(null,G__200250,G__200251));
})()," just so we can use them as arguments to our higher-order procedure. Rather than define ",(function (){var G__200252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-next"], null);
var G__200253 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200252,G__200253) : tailrecursion.hoplon.markdown.code_node.call(null,G__200252,G__200253));
})()," and ",(function (){var G__200254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-term"], null);
var G__200255 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200254,G__200255) : tailrecursion.hoplon.markdown.code_node.call(null,G__200254,G__200255));
})(),", it would be more convenient to have a way to directly specify ",(function (){var G__200256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__200257 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the procedure that returns its input incremented by 4"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__200256,G__200257) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__200256,G__200257));
})()," and ",(function (){var G__200258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__200259 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the procedure that returns the reciprocal of its input times its input plus 2."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__200258,G__200259) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__200258,G__200259));
})()," We can do this by introducing the special form ",(function (){var G__200260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__200261 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200260,G__200261) : tailrecursion.hoplon.markdown.code_node.call(null,G__200260,G__200261));
})(),", which creates procedures. Using ",(function (){var G__200262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__200263 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200262,G__200263) : tailrecursion.hoplon.markdown.code_node.call(null,G__200262,G__200263));
})()," we can describe what we want as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200244,G__200245) : tailrecursion.hoplon.markdown.para_node.call(null,G__200244,G__200245));
})(),(function (){var G__200287 = (function (){var G__200288 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200289 = (function (){var G__200290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200291 = "(";
var G__200292 = (function (){var G__200301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200302 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200301,G__200302) : tailrecursion.hoplon.span.call(null,G__200301,G__200302));
})();
var G__200293 = "[";
var G__200294 = (function (){var G__200303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200304 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200303,G__200304) : tailrecursion.hoplon.span.call(null,G__200303,G__200304));
})();
var G__200295 = "] (";
var G__200296 = (function (){var G__200305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200306 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200305,G__200306) : tailrecursion.hoplon.span.call(null,G__200305,G__200306));
})();
var G__200297 = (function (){var G__200307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200308 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200307,G__200308) : tailrecursion.hoplon.span.call(null,G__200307,G__200308));
})();
var G__200298 = " ";
var G__200299 = (function (){var G__200309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200310 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200309,G__200310) : tailrecursion.hoplon.span.call(null,G__200309,G__200310));
})();
var G__200300 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__200290,G__200291,G__200292,G__200293,G__200294,G__200295,G__200296,G__200297,G__200298,G__200299,G__200300) : tailrecursion.hoplon.pre.call(null,G__200290,G__200291,G__200292,G__200293,G__200294,G__200295,G__200296,G__200297,G__200298,G__200299,G__200300));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200288,G__200289) : tailrecursion.hoplon.div.call(null,G__200288,G__200289));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200287) : tailrecursion.hoplon.div.call(null,G__200287));
})(),(function (){var G__200311 = cljs.core.PersistentArrayMap.EMPTY;
var G__200312 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200311,G__200312) : tailrecursion.hoplon.markdown.para_node.call(null,G__200311,G__200312));
})(),(function (){var G__200350 = (function (){var G__200351 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200352 = (function (){var G__200353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200354 = "(";
var G__200355 = (function (){var G__200370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200371 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200370,G__200371) : tailrecursion.hoplon.span.call(null,G__200370,G__200371));
})();
var G__200356 = "[";
var G__200357 = (function (){var G__200372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200373 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200372,G__200373) : tailrecursion.hoplon.span.call(null,G__200372,G__200373));
})();
var G__200358 = "] (";
var G__200359 = (function (){var G__200374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200375 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200374,G__200375) : tailrecursion.hoplon.span.call(null,G__200374,G__200375));
})();
var G__200360 = (function (){var G__200376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200377 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200376,G__200377) : tailrecursion.hoplon.span.call(null,G__200376,G__200377));
})();
var G__200361 = " (";
var G__200362 = (function (){var G__200378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200379 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200378,G__200379) : tailrecursion.hoplon.span.call(null,G__200378,G__200379));
})();
var G__200363 = (function (){var G__200380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200381 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200380,G__200381) : tailrecursion.hoplon.span.call(null,G__200380,G__200381));
})();
var G__200364 = " (";
var G__200365 = (function (){var G__200382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200383 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200382,G__200383) : tailrecursion.hoplon.span.call(null,G__200382,G__200383));
})();
var G__200366 = (function (){var G__200384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200385 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200384,G__200385) : tailrecursion.hoplon.span.call(null,G__200384,G__200385));
})();
var G__200367 = " ";
var G__200368 = (function (){var G__200386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200387 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200386,G__200387) : tailrecursion.hoplon.span.call(null,G__200386,G__200387));
})();
var G__200369 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__200353,G__200354,G__200355,G__200356,G__200357,G__200358,G__200359,G__200360,G__200361,G__200362,G__200363,G__200364,G__200365,G__200366,G__200367,G__200368,G__200369) : tailrecursion.hoplon.pre.call(null,G__200353,G__200354,G__200355,G__200356,G__200357,G__200358,G__200359,G__200360,G__200361,G__200362,G__200363,G__200364,G__200365,G__200366,G__200367,G__200368,G__200369));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200351,G__200352) : tailrecursion.hoplon.div.call(null,G__200351,G__200352));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200350) : tailrecursion.hoplon.div.call(null,G__200350));
})(),(function (){var G__200388 = cljs.core.PersistentArrayMap.EMPTY;
var G__200389 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The our ",(function (){var G__200390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"pi-sum"], null);
var G__200391 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200390,G__200391) : tailrecursion.hoplon.markdown.code_node.call(null,G__200390,G__200391));
})()," procedure can be expressed without defining any auxiliary procedures as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200388,G__200389) : tailrecursion.hoplon.markdown.para_node.call(null,G__200388,G__200389));
})(),(function (){var G__200475 = (function (){var G__200476 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200477 = (function (){var G__200478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200479 = "(";
var G__200480 = (function (){var G__200517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200518 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200517,G__200518) : tailrecursion.hoplon.span.call(null,G__200517,G__200518));
})();
var G__200481 = (function (){var G__200519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200520 = "pi-sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200519,G__200520) : tailrecursion.hoplon.span.call(null,G__200519,G__200520));
})();
var G__200482 = " [";
var G__200483 = (function (){var G__200521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200522 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200521,G__200522) : tailrecursion.hoplon.span.call(null,G__200521,G__200522));
})();
var G__200484 = " ";
var G__200485 = (function (){var G__200523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200524 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200523,G__200524) : tailrecursion.hoplon.span.call(null,G__200523,G__200524));
})();
var G__200486 = "]\n  (";
var G__200487 = (function (){var G__200525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200526 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200525,G__200526) : tailrecursion.hoplon.span.call(null,G__200525,G__200526));
})();
var G__200488 = " (";
var G__200489 = (function (){var G__200527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200528 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200527,G__200528) : tailrecursion.hoplon.span.call(null,G__200527,G__200528));
})();
var G__200490 = "[";
var G__200491 = (function (){var G__200529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200530 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200529,G__200530) : tailrecursion.hoplon.span.call(null,G__200529,G__200530));
})();
var G__200492 = "] (";
var G__200493 = (function (){var G__200531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200532 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200531,G__200532) : tailrecursion.hoplon.span.call(null,G__200531,G__200532));
})();
var G__200494 = (function (){var G__200533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200534 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200533,G__200534) : tailrecursion.hoplon.span.call(null,G__200533,G__200534));
})();
var G__200495 = " (";
var G__200496 = (function (){var G__200535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200536 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200535,G__200536) : tailrecursion.hoplon.span.call(null,G__200535,G__200536));
})();
var G__200497 = (function (){var G__200537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200538 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200537,G__200538) : tailrecursion.hoplon.span.call(null,G__200537,G__200538));
})();
var G__200498 = " (";
var G__200499 = (function (){var G__200539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200540 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200539,G__200540) : tailrecursion.hoplon.span.call(null,G__200539,G__200540));
})();
var G__200500 = (function (){var G__200541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200542 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200541,G__200542) : tailrecursion.hoplon.span.call(null,G__200541,G__200542));
})();
var G__200501 = " ";
var G__200502 = (function (){var G__200543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200544 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200543,G__200544) : tailrecursion.hoplon.span.call(null,G__200543,G__200544));
})();
var G__200503 = "))))\n       ";
var G__200504 = (function (){var G__200545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200546 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200545,G__200546) : tailrecursion.hoplon.span.call(null,G__200545,G__200546));
})();
var G__200505 = "\n       (";
var G__200506 = (function (){var G__200547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200548 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200547,G__200548) : tailrecursion.hoplon.span.call(null,G__200547,G__200548));
})();
var G__200507 = "[";
var G__200508 = (function (){var G__200549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200550 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200549,G__200550) : tailrecursion.hoplon.span.call(null,G__200549,G__200550));
})();
var G__200509 = "] (";
var G__200510 = (function (){var G__200551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200552 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200551,G__200552) : tailrecursion.hoplon.span.call(null,G__200551,G__200552));
})();
var G__200511 = (function (){var G__200553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200554 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200553,G__200554) : tailrecursion.hoplon.span.call(null,G__200553,G__200554));
})();
var G__200512 = " ";
var G__200513 = (function (){var G__200555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200556 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200555,G__200556) : tailrecursion.hoplon.span.call(null,G__200555,G__200556));
})();
var G__200514 = "))\n       ";
var G__200515 = (function (){var G__200557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200558 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200557,G__200558) : tailrecursion.hoplon.span.call(null,G__200557,G__200558));
})();
var G__200516 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__200478,G__200479,G__200480,G__200481,G__200482,G__200483,G__200484,G__200485,G__200486,G__200487,G__200488,G__200489,G__200490,G__200491,G__200492,G__200493,G__200494,G__200495,G__200496,G__200497,G__200498,G__200499,G__200500,G__200501,G__200502,G__200503,G__200504,G__200505,G__200506,G__200507,G__200508,G__200509,G__200510,G__200511,G__200512,G__200513,G__200514,G__200515,G__200516) : tailrecursion.hoplon.pre.call(null,G__200478,G__200479,G__200480,G__200481,G__200482,G__200483,G__200484,G__200485,G__200486,G__200487,G__200488,G__200489,G__200490,G__200491,G__200492,G__200493,G__200494,G__200495,G__200496,G__200497,G__200498,G__200499,G__200500,G__200501,G__200502,G__200503,G__200504,G__200505,G__200506,G__200507,G__200508,G__200509,G__200510,G__200511,G__200512,G__200513,G__200514,G__200515,G__200516));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200476,G__200477) : tailrecursion.hoplon.div.call(null,G__200476,G__200477));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200475) : tailrecursion.hoplon.div.call(null,G__200475));
})(),(function (){var G__200559 = cljs.core.PersistentArrayMap.EMPTY;
var G__200560 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Again using ",(function (){var G__200561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__200562 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200561,G__200562) : tailrecursion.hoplon.markdown.code_node.call(null,G__200561,G__200562));
})(),", we can write the ",(function (){var G__200563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"integral"], null);
var G__200564 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200563,G__200564) : tailrecursion.hoplon.markdown.code_node.call(null,G__200563,G__200564));
})()," procedure without having to define the auxiliary procedure ",(function (){var G__200565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"add-dx"], null);
var G__200566 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200565,G__200566) : tailrecursion.hoplon.markdown.code_node.call(null,G__200565,G__200566));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200559,G__200560) : tailrecursion.hoplon.markdown.para_node.call(null,G__200559,G__200560));
})(),(function (){var G__200651 = (function (){var G__200652 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200653 = (function (){var G__200654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200655 = "(";
var G__200656 = (function (){var G__200694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200695 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200694,G__200695) : tailrecursion.hoplon.span.call(null,G__200694,G__200695));
})();
var G__200657 = (function (){var G__200696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200697 = "integral";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200696,G__200697) : tailrecursion.hoplon.span.call(null,G__200696,G__200697));
})();
var G__200658 = " [";
var G__200659 = (function (){var G__200698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200699 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200698,G__200699) : tailrecursion.hoplon.span.call(null,G__200698,G__200699));
})();
var G__200660 = " ";
var G__200661 = (function (){var G__200700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200701 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200700,G__200701) : tailrecursion.hoplon.span.call(null,G__200700,G__200701));
})();
var G__200662 = " ";
var G__200663 = (function (){var G__200702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200703 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200702,G__200703) : tailrecursion.hoplon.span.call(null,G__200702,G__200703));
})();
var G__200664 = " ";
var G__200665 = (function (){var G__200704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200705 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200704,G__200705) : tailrecursion.hoplon.span.call(null,G__200704,G__200705));
})();
var G__200666 = "]\n  (";
var G__200667 = (function (){var G__200706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200707 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200706,G__200707) : tailrecursion.hoplon.span.call(null,G__200706,G__200707));
})();
var G__200668 = "(";
var G__200669 = (function (){var G__200708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__200709 = "sum";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200708,G__200709) : tailrecursion.hoplon.span.call(null,G__200708,G__200709));
})();
var G__200670 = " ";
var G__200671 = (function (){var G__200710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200711 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200710,G__200711) : tailrecursion.hoplon.span.call(null,G__200710,G__200711));
})();
var G__200672 = "\n          (";
var G__200673 = (function (){var G__200712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200713 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200712,G__200713) : tailrecursion.hoplon.span.call(null,G__200712,G__200713));
})();
var G__200674 = (function (){var G__200714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200715 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200714,G__200715) : tailrecursion.hoplon.span.call(null,G__200714,G__200715));
})();
var G__200675 = " (";
var G__200676 = (function (){var G__200716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200717 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200716,G__200717) : tailrecursion.hoplon.span.call(null,G__200716,G__200717));
})();
var G__200677 = (function (){var G__200718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200719 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200718,G__200719) : tailrecursion.hoplon.span.call(null,G__200718,G__200719));
})();
var G__200678 = " ";
var G__200679 = (function (){var G__200720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200721 = "2.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200720,G__200721) : tailrecursion.hoplon.span.call(null,G__200720,G__200721));
})();
var G__200680 = "))\n          (";
var G__200681 = (function (){var G__200722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200723 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200722,G__200723) : tailrecursion.hoplon.span.call(null,G__200722,G__200723));
})();
var G__200682 = "[";
var G__200683 = (function (){var G__200724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200725 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200724,G__200725) : tailrecursion.hoplon.span.call(null,G__200724,G__200725));
})();
var G__200684 = "] (";
var G__200685 = (function (){var G__200726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200727 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200726,G__200727) : tailrecursion.hoplon.span.call(null,G__200726,G__200727));
})();
var G__200686 = (function (){var G__200728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200729 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200728,G__200729) : tailrecursion.hoplon.span.call(null,G__200728,G__200729));
})();
var G__200687 = " ";
var G__200688 = (function (){var G__200730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200731 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200730,G__200731) : tailrecursion.hoplon.span.call(null,G__200730,G__200731));
})();
var G__200689 = "))\n          ";
var G__200690 = (function (){var G__200732 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200733 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200732,G__200733) : tailrecursion.hoplon.span.call(null,G__200732,G__200733));
})();
var G__200691 = ")\n     ";
var G__200692 = (function (){var G__200734 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200735 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200734,G__200735) : tailrecursion.hoplon.span.call(null,G__200734,G__200735));
})();
var G__200693 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$40(G__200654,G__200655,G__200656,G__200657,G__200658,G__200659,G__200660,G__200661,G__200662,G__200663,G__200664,G__200665,G__200666,G__200667,G__200668,G__200669,G__200670,G__200671,G__200672,G__200673,G__200674,G__200675,G__200676,G__200677,G__200678,G__200679,G__200680,G__200681,G__200682,G__200683,G__200684,G__200685,G__200686,G__200687,G__200688,G__200689,G__200690,G__200691,G__200692,G__200693) : tailrecursion.hoplon.pre.call(null,G__200654,G__200655,G__200656,G__200657,G__200658,G__200659,G__200660,G__200661,G__200662,G__200663,G__200664,G__200665,G__200666,G__200667,G__200668,G__200669,G__200670,G__200671,G__200672,G__200673,G__200674,G__200675,G__200676,G__200677,G__200678,G__200679,G__200680,G__200681,G__200682,G__200683,G__200684,G__200685,G__200686,G__200687,G__200688,G__200689,G__200690,G__200691,G__200692,G__200693));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200652,G__200653) : tailrecursion.hoplon.div.call(null,G__200652,G__200653));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200651) : tailrecursion.hoplon.div.call(null,G__200651));
})(),(function (){var G__200736 = cljs.core.PersistentArrayMap.EMPTY;
var G__200737 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, ",(function (){var G__200738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__200739 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200738,G__200739) : tailrecursion.hoplon.markdown.code_node.call(null,G__200738,G__200739));
})()," is used to create procedures in the same way as ",(function (){var G__200740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"defn"], null);
var G__200741 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200740,G__200741) : tailrecursion.hoplon.markdown.code_node.call(null,G__200740,G__200741));
})(),", except that no name is specified for the procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200736,G__200737) : tailrecursion.hoplon.markdown.para_node.call(null,G__200736,G__200737));
})(),(function (){var G__200758 = (function (){var G__200759 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200760 = (function (){var G__200761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200762 = "(";
var G__200763 = (function (){var G__200769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200770 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200769,G__200770) : tailrecursion.hoplon.span.call(null,G__200769,G__200770));
})();
var G__200764 = "[";
var G__200765 = (function (){var G__200771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200772 = "<formal-parameters>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200771,G__200772) : tailrecursion.hoplon.span.call(null,G__200771,G__200772));
})();
var G__200766 = "] ";
var G__200767 = (function (){var G__200773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200774 = "<body>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200773,G__200774) : tailrecursion.hoplon.span.call(null,G__200773,G__200774));
})();
var G__200768 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__200761,G__200762,G__200763,G__200764,G__200765,G__200766,G__200767,G__200768) : tailrecursion.hoplon.pre.call(null,G__200761,G__200762,G__200763,G__200764,G__200765,G__200766,G__200767,G__200768));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200759,G__200760) : tailrecursion.hoplon.div.call(null,G__200759,G__200760));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200758) : tailrecursion.hoplon.div.call(null,G__200758));
})(),(function (){var G__200775 = cljs.core.PersistentArrayMap.EMPTY;
var G__200776 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojure also has an alternate shorter syntax for using ",(function (){var G__200777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__200778 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200777,G__200778) : tailrecursion.hoplon.markdown.code_node.call(null,G__200777,G__200778));
})(),": ",(function (){var G__200779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"#(+ 5 %)"], null);
var G__200780 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200779,G__200780) : tailrecursion.hoplon.markdown.code_node.call(null,G__200779,G__200780));
})()," is the same thing as ",(function (){var G__200781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fn [x] (+ 5 x))"], null);
var G__200782 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200781,G__200782) : tailrecursion.hoplon.markdown.code_node.call(null,G__200781,G__200782));
})(),". If there are multiple arguments, we just enumerate them like so: ",(function (){var G__200783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"#(* %1 %2)"], null);
var G__200784 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200783,G__200784) : tailrecursion.hoplon.markdown.code_node.call(null,G__200783,G__200784));
})(),", which would be syntactic sugar for, ",(function (){var G__200785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fn [x1 x2] (* x1 x2))"], null);
var G__200786 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200785,G__200786) : tailrecursion.hoplon.markdown.code_node.call(null,G__200785,G__200786));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200775,G__200776) : tailrecursion.hoplon.markdown.para_node.call(null,G__200775,G__200776));
})(),(function (){var G__200787 = cljs.core.PersistentArrayMap.EMPTY;
var G__200788 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The resulting procedure is just as much a procedure as one that is created using ",(function (){var G__200789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"defn"], null);
var G__200790 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200789,G__200790) : tailrecursion.hoplon.markdown.code_node.call(null,G__200789,G__200790));
})(),". The only difference is that it has not been associated with any name in the environment. In fact,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200787,G__200788) : tailrecursion.hoplon.markdown.para_node.call(null,G__200787,G__200788));
})(),(function (){var G__200817 = (function (){var G__200818 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200819 = (function (){var G__200820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200821 = "(";
var G__200822 = (function (){var G__200832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200833 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200832,G__200833) : tailrecursion.hoplon.span.call(null,G__200832,G__200833));
})();
var G__200823 = (function (){var G__200834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200835 = "plus4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200834,G__200835) : tailrecursion.hoplon.span.call(null,G__200834,G__200835));
})();
var G__200824 = " [";
var G__200825 = (function (){var G__200836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200837 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200836,G__200837) : tailrecursion.hoplon.span.call(null,G__200836,G__200837));
})();
var G__200826 = "] (";
var G__200827 = (function (){var G__200838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200839 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200838,G__200839) : tailrecursion.hoplon.span.call(null,G__200838,G__200839));
})();
var G__200828 = (function (){var G__200840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200841 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200840,G__200841) : tailrecursion.hoplon.span.call(null,G__200840,G__200841));
})();
var G__200829 = " ";
var G__200830 = (function (){var G__200842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200843 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200842,G__200843) : tailrecursion.hoplon.span.call(null,G__200842,G__200843));
})();
var G__200831 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__200820,G__200821,G__200822,G__200823,G__200824,G__200825,G__200826,G__200827,G__200828,G__200829,G__200830,G__200831) : tailrecursion.hoplon.pre.call(null,G__200820,G__200821,G__200822,G__200823,G__200824,G__200825,G__200826,G__200827,G__200828,G__200829,G__200830,G__200831));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200818,G__200819) : tailrecursion.hoplon.div.call(null,G__200818,G__200819));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200817) : tailrecursion.hoplon.div.call(null,G__200817));
})(),(function (){var G__200844 = cljs.core.PersistentArrayMap.EMPTY;
var G__200845 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is equivalent to"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200844,G__200845) : tailrecursion.hoplon.markdown.para_node.call(null,G__200844,G__200845));
})(),(function (){var G__200876 = (function (){var G__200877 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200878 = (function (){var G__200879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200880 = "(";
var G__200881 = (function (){var G__200893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200894 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200893,G__200894) : tailrecursion.hoplon.span.call(null,G__200893,G__200894));
})();
var G__200882 = (function (){var G__200895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200896 = "plus4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200895,G__200896) : tailrecursion.hoplon.span.call(null,G__200895,G__200896));
})();
var G__200883 = " (";
var G__200884 = (function (){var G__200897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200898 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200897,G__200898) : tailrecursion.hoplon.span.call(null,G__200897,G__200898));
})();
var G__200885 = "[";
var G__200886 = (function (){var G__200899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200900 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200899,G__200900) : tailrecursion.hoplon.span.call(null,G__200899,G__200900));
})();
var G__200887 = "] (";
var G__200888 = (function (){var G__200901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200902 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200901,G__200902) : tailrecursion.hoplon.span.call(null,G__200901,G__200902));
})();
var G__200889 = (function (){var G__200903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200904 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200903,G__200904) : tailrecursion.hoplon.span.call(null,G__200903,G__200904));
})();
var G__200890 = " ";
var G__200891 = (function (){var G__200905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200906 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200905,G__200906) : tailrecursion.hoplon.span.call(null,G__200905,G__200906));
})();
var G__200892 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__200879,G__200880,G__200881,G__200882,G__200883,G__200884,G__200885,G__200886,G__200887,G__200888,G__200889,G__200890,G__200891,G__200892) : tailrecursion.hoplon.pre.call(null,G__200879,G__200880,G__200881,G__200882,G__200883,G__200884,G__200885,G__200886,G__200887,G__200888,G__200889,G__200890,G__200891,G__200892));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200877,G__200878) : tailrecursion.hoplon.div.call(null,G__200877,G__200878));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200876) : tailrecursion.hoplon.div.call(null,G__200876));
})(),(function (){var G__200907 = cljs.core.PersistentArrayMap.EMPTY;
var G__200908 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can read a ",(function (){var G__200909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__200910 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200909,G__200910) : tailrecursion.hoplon.markdown.code_node.call(null,G__200909,G__200910));
})()," expression as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200907,G__200908) : tailrecursion.hoplon.markdown.para_node.call(null,G__200907,G__200908));
})(),(function (){var G__200934 = (function (){var G__200935 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__200936 = (function (){var G__200937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__200938 = "(";
var G__200939 = (function (){var G__200948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__200949 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200948,G__200949) : tailrecursion.hoplon.span.call(null,G__200948,G__200949));
})();
var G__200940 = "[";
var G__200941 = (function (){var G__200950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200951 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200950,G__200951) : tailrecursion.hoplon.span.call(null,G__200950,G__200951));
})();
var G__200942 = "] (";
var G__200943 = (function (){var G__200952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__200953 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200952,G__200953) : tailrecursion.hoplon.span.call(null,G__200952,G__200953));
})();
var G__200944 = (function (){var G__200954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__200955 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200954,G__200955) : tailrecursion.hoplon.span.call(null,G__200954,G__200955));
})();
var G__200945 = " ";
var G__200946 = (function (){var G__200956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__200957 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__200956,G__200957) : tailrecursion.hoplon.span.call(null,G__200956,G__200957));
})();
var G__200947 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__200937,G__200938,G__200939,G__200940,G__200941,G__200942,G__200943,G__200944,G__200945,G__200946,G__200947) : tailrecursion.hoplon.pre.call(null,G__200937,G__200938,G__200939,G__200940,G__200941,G__200942,G__200943,G__200944,G__200945,G__200946,G__200947));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__200935,G__200936) : tailrecursion.hoplon.div.call(null,G__200935,G__200936));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__200934) : tailrecursion.hoplon.div.call(null,G__200934));
})(),(function (){var G__200958 = cljs.core.PersistentArrayMap.EMPTY;
var G__200959 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["the procedure of an argument x that adds x and 4"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200958,G__200959) : tailrecursion.hoplon.markdown.para_node.call(null,G__200958,G__200959));
})(),(function (){var G__200960 = cljs.core.PersistentArrayMap.EMPTY;
var G__200961 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Like any expression that has a procedure as its value, a ",(function (){var G__200962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__200963 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__200962,G__200963) : tailrecursion.hoplon.markdown.code_node.call(null,G__200962,G__200963));
})()," expression can be used as the operator in a combination such as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__200960,G__200961) : tailrecursion.hoplon.markdown.para_node.call(null,G__200960,G__200961));
})(),(function (){var G__201019 = (function (){var G__201020 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201021 = (function (){var G__201022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201023 = "((";
var G__201024 = (function (){var G__201049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201050 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201049,G__201050) : tailrecursion.hoplon.span.call(null,G__201049,G__201050));
})();
var G__201025 = "[";
var G__201026 = (function (){var G__201051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201052 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201051,G__201052) : tailrecursion.hoplon.span.call(null,G__201051,G__201052));
})();
var G__201027 = " ";
var G__201028 = (function (){var G__201053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201054 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201053,G__201054) : tailrecursion.hoplon.span.call(null,G__201053,G__201054));
})();
var G__201029 = " ";
var G__201030 = (function (){var G__201055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201056 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201055,G__201056) : tailrecursion.hoplon.span.call(null,G__201055,G__201056));
})();
var G__201031 = "] (";
var G__201032 = (function (){var G__201057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201058 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201057,G__201058) : tailrecursion.hoplon.span.call(null,G__201057,G__201058));
})();
var G__201033 = (function (){var G__201059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201060 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201059,G__201060) : tailrecursion.hoplon.span.call(null,G__201059,G__201060));
})();
var G__201034 = " ";
var G__201035 = (function (){var G__201061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201062 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201061,G__201062) : tailrecursion.hoplon.span.call(null,G__201061,G__201062));
})();
var G__201036 = " (";
var G__201037 = (function (){var G__201063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201064 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201063,G__201064) : tailrecursion.hoplon.span.call(null,G__201063,G__201064));
})();
var G__201038 = " ";
var G__201039 = (function (){var G__201065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201066 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201065,G__201066) : tailrecursion.hoplon.span.call(null,G__201065,G__201066));
})();
var G__201040 = "))) ";
var G__201041 = (function (){var G__201067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201068 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201067,G__201068) : tailrecursion.hoplon.span.call(null,G__201067,G__201068));
})();
var G__201042 = " ";
var G__201043 = (function (){var G__201069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201070 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201069,G__201070) : tailrecursion.hoplon.span.call(null,G__201069,G__201070));
})();
var G__201044 = " ";
var G__201045 = (function (){var G__201071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201072 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201071,G__201072) : tailrecursion.hoplon.span.call(null,G__201071,G__201072));
})();
var G__201046 = ")\n";
var G__201047 = (function (){var G__201073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201074 = "12";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201073,G__201074) : tailrecursion.hoplon.span.call(null,G__201073,G__201074));
})();
var G__201048 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__201022,G__201023,G__201024,G__201025,G__201026,G__201027,G__201028,G__201029,G__201030,G__201031,G__201032,G__201033,G__201034,G__201035,G__201036,G__201037,G__201038,G__201039,G__201040,G__201041,G__201042,G__201043,G__201044,G__201045,G__201046,G__201047,G__201048) : tailrecursion.hoplon.pre.call(null,G__201022,G__201023,G__201024,G__201025,G__201026,G__201027,G__201028,G__201029,G__201030,G__201031,G__201032,G__201033,G__201034,G__201035,G__201036,G__201037,G__201038,G__201039,G__201040,G__201041,G__201042,G__201043,G__201044,G__201045,G__201046,G__201047,G__201048));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201020,G__201021) : tailrecursion.hoplon.div.call(null,G__201020,G__201021));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201019) : tailrecursion.hoplon.div.call(null,G__201019));
})(),(function (){var G__201075 = cljs.core.PersistentArrayMap.EMPTY;
var G__201076 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["or, more generally, in any context where we would normally use a procedure name.",(function (){var G__201077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__201078 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It would be clearer and less intimidating to people learning Lisp if a name more obvious than ",(function (){var G__201079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lambda"], null);
var G__201080 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201079,G__201080) : tailrecursion.hoplon.markdown.code_node.call(null,G__201079,G__201080));
})(),", such as ",(function (){var G__201081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"make-procedure"], null);
var G__201082 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201081,G__201082) : tailrecursion.hoplon.markdown.code_node.call(null,G__201081,G__201082));
})()," (or ",(function (){var G__201083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__201084 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201083,G__201084) : tailrecursion.hoplon.markdown.code_node.call(null,G__201083,G__201084));
})()," in Clojure), were used. But the convention is firmly entrenched. The notation is adopted from the \\(\\lambda\\) calculus, a mathematical formalism introduced by the mathematical logician Alonzo Church (1941). Church developed the \\(\\lambda\\) calculus to provide a rigorous foundation for studying the notions of function and function application. The \\(\\lambda\\) calculus has become a basic tool for mathematical investigations of the semantics of programming languages."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__201077,G__201078) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__201077,G__201078));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201075,G__201076) : tailrecursion.hoplon.markdown.para_node.call(null,G__201075,G__201076));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200239;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200238;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_200237;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_200236;
}})()], 0));
var G__194642 = "";
var G__194643 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Using let to Create Local Variables"], null),(function (){var _STAR_references_STAR_201085 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201086 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_201087 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201088 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__201089 = cljs.core.PersistentArrayMap.EMPTY;
var G__201090 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another use of ",(function (){var G__201091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__201092 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201091,G__201092) : tailrecursion.hoplon.markdown.code_node.call(null,G__201091,G__201092));
})()," is in creating local variables. We often need local variables in our procedures other than those that have been bound as formal parameters. For example, suppose we wish to compute the function"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201089,G__201090) : tailrecursion.hoplon.markdown.para_node.call(null,G__201089,G__201090));
})(),(function (){var G__201093 = cljs.core.PersistentArrayMap.EMPTY;
var G__201094 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$f(x,y)=x(1+xy)^2 + y(1-y) + (1+xy)(1-y)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201093,G__201094) : tailrecursion.hoplon.markdown.para_node.call(null,G__201093,G__201094));
})(),(function (){var G__201095 = cljs.core.PersistentArrayMap.EMPTY;
var G__201096 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which we could alsp express as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201095,G__201096) : tailrecursion.hoplon.markdown.para_node.call(null,G__201095,G__201096));
})(),(function (){var G__201097 = cljs.core.PersistentArrayMap.EMPTY;
var G__201098 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} a=&1+xy \\\\  b=& 1-y \\\\  f(x,y)=& xa^2+yb+ab\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201097,G__201098) : tailrecursion.hoplon.markdown.para_node.call(null,G__201097,G__201098));
})(),(function (){var G__201099 = cljs.core.PersistentArrayMap.EMPTY;
var G__201100 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In writing a procedure to compute \\(f\\), we would like to include as local variables not only \\(x\\) and \\(y\\) but also the names of intermediate quantities like \\(a\\) and \\(b\\). One way to accomplish this is to use an auxiliary procedure to bind the local variables:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201099,G__201100) : tailrecursion.hoplon.markdown.para_node.call(null,G__201099,G__201100));
})(),(function (){var G__201209 = (function (){var G__201210 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201211 = (function (){var G__201212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201213 = "(";
var G__201214 = (function (){var G__201262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201263 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201262,G__201263) : tailrecursion.hoplon.span.call(null,G__201262,G__201263));
})();
var G__201215 = (function (){var G__201264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201265 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201264,G__201265) : tailrecursion.hoplon.span.call(null,G__201264,G__201265));
})();
var G__201216 = " [";
var G__201217 = (function (){var G__201266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201267 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201266,G__201267) : tailrecursion.hoplon.span.call(null,G__201266,G__201267));
})();
var G__201218 = " ";
var G__201219 = (function (){var G__201268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201269 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201268,G__201269) : tailrecursion.hoplon.span.call(null,G__201268,G__201269));
})();
var G__201220 = "]\n  (";
var G__201221 = (function (){var G__201270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201271 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201270,G__201271) : tailrecursion.hoplon.span.call(null,G__201270,G__201271));
})();
var G__201222 = (function (){var G__201272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201273 = "f-helper";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201272,G__201273) : tailrecursion.hoplon.span.call(null,G__201272,G__201273));
})();
var G__201223 = " [";
var G__201224 = (function (){var G__201274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201275 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201274,G__201275) : tailrecursion.hoplon.span.call(null,G__201274,G__201275));
})();
var G__201225 = " ";
var G__201226 = (function (){var G__201276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201277 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201276,G__201277) : tailrecursion.hoplon.span.call(null,G__201276,G__201277));
})();
var G__201227 = "]\n    (";
var G__201228 = (function (){var G__201278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201279 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201278,G__201279) : tailrecursion.hoplon.span.call(null,G__201278,G__201279));
})();
var G__201229 = "(";
var G__201230 = (function (){var G__201280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201281 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201280,G__201281) : tailrecursion.hoplon.span.call(null,G__201280,G__201281));
})();
var G__201231 = (function (){var G__201282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201283 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201282,G__201283) : tailrecursion.hoplon.span.call(null,G__201282,G__201283));
})();
var G__201232 = " (";
var G__201233 = (function (){var G__201284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201285 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201284,G__201285) : tailrecursion.hoplon.span.call(null,G__201284,G__201285));
})();
var G__201234 = " ";
var G__201235 = (function (){var G__201286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201287 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201286,G__201287) : tailrecursion.hoplon.span.call(null,G__201286,G__201287));
})();
var G__201236 = "))\n       (";
var G__201237 = (function (){var G__201288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201289 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201288,G__201289) : tailrecursion.hoplon.span.call(null,G__201288,G__201289));
})();
var G__201238 = (function (){var G__201290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201291 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201290,G__201291) : tailrecursion.hoplon.span.call(null,G__201290,G__201291));
})();
var G__201239 = " ";
var G__201240 = (function (){var G__201292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201293 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201292,G__201293) : tailrecursion.hoplon.span.call(null,G__201292,G__201293));
})();
var G__201241 = ")\n       (";
var G__201242 = (function (){var G__201294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201295 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201294,G__201295) : tailrecursion.hoplon.span.call(null,G__201294,G__201295));
})();
var G__201243 = (function (){var G__201296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201297 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201296,G__201297) : tailrecursion.hoplon.span.call(null,G__201296,G__201297));
})();
var G__201244 = " ";
var G__201245 = (function (){var G__201298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201299 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201298,G__201299) : tailrecursion.hoplon.span.call(null,G__201298,G__201299));
})();
var G__201246 = ")))\n  (";
var G__201247 = (function (){var G__201300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201301 = "f-helper";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201300,G__201301) : tailrecursion.hoplon.span.call(null,G__201300,G__201301));
})();
var G__201248 = " (";
var G__201249 = (function (){var G__201302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201303 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201302,G__201303) : tailrecursion.hoplon.span.call(null,G__201302,G__201303));
})();
var G__201250 = (function (){var G__201304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201305 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201304,G__201305) : tailrecursion.hoplon.span.call(null,G__201304,G__201305));
})();
var G__201251 = " (";
var G__201252 = (function (){var G__201306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201307 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201306,G__201307) : tailrecursion.hoplon.span.call(null,G__201306,G__201307));
})();
var G__201253 = (function (){var G__201308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201309 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201308,G__201309) : tailrecursion.hoplon.span.call(null,G__201308,G__201309));
})();
var G__201254 = " ";
var G__201255 = (function (){var G__201310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201311 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201310,G__201311) : tailrecursion.hoplon.span.call(null,G__201310,G__201311));
})();
var G__201256 = "))\n    (";
var G__201257 = (function (){var G__201312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201313 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201312,G__201313) : tailrecursion.hoplon.span.call(null,G__201312,G__201313));
})();
var G__201258 = (function (){var G__201314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201315 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201314,G__201315) : tailrecursion.hoplon.span.call(null,G__201314,G__201315));
})();
var G__201259 = " ";
var G__201260 = (function (){var G__201316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201317 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201316,G__201317) : tailrecursion.hoplon.span.call(null,G__201316,G__201317));
})();
var G__201261 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$50(G__201212,G__201213,G__201214,G__201215,G__201216,G__201217,G__201218,G__201219,G__201220,G__201221,G__201222,G__201223,G__201224,G__201225,G__201226,G__201227,G__201228,G__201229,G__201230,G__201231,G__201232,G__201233,G__201234,G__201235,G__201236,G__201237,G__201238,G__201239,G__201240,G__201241,G__201242,G__201243,G__201244,G__201245,G__201246,G__201247,G__201248,G__201249,G__201250,G__201251,G__201252,G__201253,G__201254,G__201255,G__201256,G__201257,G__201258,G__201259,G__201260,G__201261) : tailrecursion.hoplon.pre.call(null,G__201212,G__201213,G__201214,G__201215,G__201216,G__201217,G__201218,G__201219,G__201220,G__201221,G__201222,G__201223,G__201224,G__201225,G__201226,G__201227,G__201228,G__201229,G__201230,G__201231,G__201232,G__201233,G__201234,G__201235,G__201236,G__201237,G__201238,G__201239,G__201240,G__201241,G__201242,G__201243,G__201244,G__201245,G__201246,G__201247,G__201248,G__201249,G__201250,G__201251,G__201252,G__201253,G__201254,G__201255,G__201256,G__201257,G__201258,G__201259,G__201260,G__201261));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201210,G__201211) : tailrecursion.hoplon.div.call(null,G__201210,G__201211));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201209) : tailrecursion.hoplon.div.call(null,G__201209));
})(),(function (){var G__201318 = cljs.core.PersistentArrayMap.EMPTY;
var G__201319 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Of course, we could use a ",(function (){var G__201320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__201321 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201320,G__201321) : tailrecursion.hoplon.markdown.code_node.call(null,G__201320,G__201321));
})()," expression to specify an anonymous procedure for binding our local variables. The body of \\(f\\) then becomes a single call to that procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201318,G__201319) : tailrecursion.hoplon.markdown.para_node.call(null,G__201318,G__201319));
})(),(function (){var G__201423 = (function (){var G__201424 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201425 = (function (){var G__201426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201427 = "(";
var G__201428 = (function (){var G__201473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201474 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201473,G__201474) : tailrecursion.hoplon.span.call(null,G__201473,G__201474));
})();
var G__201429 = (function (){var G__201475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201476 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201475,G__201476) : tailrecursion.hoplon.span.call(null,G__201475,G__201476));
})();
var G__201430 = " [";
var G__201431 = (function (){var G__201477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201478 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201477,G__201478) : tailrecursion.hoplon.span.call(null,G__201477,G__201478));
})();
var G__201432 = " ";
var G__201433 = (function (){var G__201479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201480 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201479,G__201480) : tailrecursion.hoplon.span.call(null,G__201479,G__201480));
})();
var G__201434 = "]\n  (";
var G__201435 = (function (){var G__201481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201482 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201481,G__201482) : tailrecursion.hoplon.span.call(null,G__201481,G__201482));
})();
var G__201436 = "[";
var G__201437 = (function (){var G__201483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201484 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201483,G__201484) : tailrecursion.hoplon.span.call(null,G__201483,G__201484));
})();
var G__201438 = " (";
var G__201439 = (function (){var G__201485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201486 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201485,G__201486) : tailrecursion.hoplon.span.call(null,G__201485,G__201486));
})();
var G__201440 = (function (){var G__201487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201488 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201487,G__201488) : tailrecursion.hoplon.span.call(null,G__201487,G__201488));
})();
var G__201441 = " (";
var G__201442 = (function (){var G__201489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201490 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201489,G__201490) : tailrecursion.hoplon.span.call(null,G__201489,G__201490));
})();
var G__201443 = (function (){var G__201491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201492 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201491,G__201492) : tailrecursion.hoplon.span.call(null,G__201491,G__201492));
})();
var G__201444 = " ";
var G__201445 = (function (){var G__201493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201494 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201493,G__201494) : tailrecursion.hoplon.span.call(null,G__201493,G__201494));
})();
var G__201446 = "))\n        ";
var G__201447 = (function (){var G__201495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201496 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201495,G__201496) : tailrecursion.hoplon.span.call(null,G__201495,G__201496));
})();
var G__201448 = " (";
var G__201449 = (function (){var G__201497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201498 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201497,G__201498) : tailrecursion.hoplon.span.call(null,G__201497,G__201498));
})();
var G__201450 = (function (){var G__201499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201500 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201499,G__201500) : tailrecursion.hoplon.span.call(null,G__201499,G__201500));
})();
var G__201451 = " ";
var G__201452 = (function (){var G__201501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201502 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201501,G__201502) : tailrecursion.hoplon.span.call(null,G__201501,G__201502));
})();
var G__201453 = ")]\n    (";
var G__201454 = (function (){var G__201503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201504 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201503,G__201504) : tailrecursion.hoplon.span.call(null,G__201503,G__201504));
})();
var G__201455 = "(";
var G__201456 = (function (){var G__201505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201506 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201505,G__201506) : tailrecursion.hoplon.span.call(null,G__201505,G__201506));
})();
var G__201457 = (function (){var G__201507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201508 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201507,G__201508) : tailrecursion.hoplon.span.call(null,G__201507,G__201508));
})();
var G__201458 = " (";
var G__201459 = (function (){var G__201509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201510 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201509,G__201510) : tailrecursion.hoplon.span.call(null,G__201509,G__201510));
})();
var G__201460 = " ";
var G__201461 = (function (){var G__201511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201512 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201511,G__201512) : tailrecursion.hoplon.span.call(null,G__201511,G__201512));
})();
var G__201462 = "))\n       (";
var G__201463 = (function (){var G__201513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201514 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201513,G__201514) : tailrecursion.hoplon.span.call(null,G__201513,G__201514));
})();
var G__201464 = (function (){var G__201515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201516 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201515,G__201516) : tailrecursion.hoplon.span.call(null,G__201515,G__201516));
})();
var G__201465 = " ";
var G__201466 = (function (){var G__201517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201518 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201517,G__201518) : tailrecursion.hoplon.span.call(null,G__201517,G__201518));
})();
var G__201467 = ")\n       (";
var G__201468 = (function (){var G__201519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201520 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201519,G__201520) : tailrecursion.hoplon.span.call(null,G__201519,G__201520));
})();
var G__201469 = (function (){var G__201521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201522 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201521,G__201522) : tailrecursion.hoplon.span.call(null,G__201521,G__201522));
})();
var G__201470 = " ";
var G__201471 = (function (){var G__201523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201524 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201523,G__201524) : tailrecursion.hoplon.span.call(null,G__201523,G__201524));
})();
var G__201472 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__201426,G__201427,G__201428,G__201429,G__201430,G__201431,G__201432,G__201433,G__201434,G__201435,G__201436,G__201437,G__201438,G__201439,G__201440,G__201441,G__201442,G__201443,G__201444,G__201445,G__201446,G__201447,G__201448,G__201449,G__201450,G__201451,G__201452,G__201453,G__201454,G__201455,G__201456,G__201457,G__201458,G__201459,G__201460,G__201461,G__201462,G__201463,G__201464,G__201465,G__201466,G__201467,G__201468,G__201469,G__201470,G__201471,G__201472) : tailrecursion.hoplon.pre.call(null,G__201426,G__201427,G__201428,G__201429,G__201430,G__201431,G__201432,G__201433,G__201434,G__201435,G__201436,G__201437,G__201438,G__201439,G__201440,G__201441,G__201442,G__201443,G__201444,G__201445,G__201446,G__201447,G__201448,G__201449,G__201450,G__201451,G__201452,G__201453,G__201454,G__201455,G__201456,G__201457,G__201458,G__201459,G__201460,G__201461,G__201462,G__201463,G__201464,G__201465,G__201466,G__201467,G__201468,G__201469,G__201470,G__201471,G__201472));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201424,G__201425) : tailrecursion.hoplon.div.call(null,G__201424,G__201425));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201423) : tailrecursion.hoplon.div.call(null,G__201423));
})(),(function (){var G__201525 = cljs.core.PersistentArrayMap.EMPTY;
var G__201526 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is the way we can define things to the local environment in Clojure. The general form of a ",(function (){var G__201527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201528 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201527,G__201528) : tailrecursion.hoplon.markdown.code_node.call(null,G__201527,G__201528));
})()," expression is"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201525,G__201526) : tailrecursion.hoplon.markdown.para_node.call(null,G__201525,G__201526));
})(),(function (){var G__201569 = (function (){var G__201570 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201571 = (function (){var G__201572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201573 = "(";
var G__201574 = (function (){var G__201592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201593 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201592,G__201593) : tailrecursion.hoplon.span.call(null,G__201592,G__201593));
})();
var G__201575 = "[";
var G__201576 = (function (){var G__201594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201595 = "<var1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201594,G__201595) : tailrecursion.hoplon.span.call(null,G__201594,G__201595));
})();
var G__201577 = " ";
var G__201578 = (function (){var G__201596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201597 = "<exp1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201596,G__201597) : tailrecursion.hoplon.span.call(null,G__201596,G__201597));
})();
var G__201579 = "\n      ";
var G__201580 = (function (){var G__201598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201599 = "<var2>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201598,G__201599) : tailrecursion.hoplon.span.call(null,G__201598,G__201599));
})();
var G__201581 = " ";
var G__201582 = (function (){var G__201600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201601 = "<exp2>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201600,G__201601) : tailrecursion.hoplon.span.call(null,G__201600,G__201601));
})();
var G__201583 = "\n      ";
var G__201584 = (function (){var G__201602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"border: 1px solid #FF0000"], null);
var G__201603 = "\u22EE";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201602,G__201603) : tailrecursion.hoplon.span.call(null,G__201602,G__201603));
})();
var G__201585 = "\n      ";
var G__201586 = (function (){var G__201604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201605 = "<varn>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201604,G__201605) : tailrecursion.hoplon.span.call(null,G__201604,G__201605));
})();
var G__201587 = " ";
var G__201588 = (function (){var G__201606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201607 = "<expn>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201606,G__201607) : tailrecursion.hoplon.span.call(null,G__201606,G__201607));
})();
var G__201589 = "]\n  ";
var G__201590 = (function (){var G__201608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201609 = "<body>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201608,G__201609) : tailrecursion.hoplon.span.call(null,G__201608,G__201609));
})();
var G__201591 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__201572,G__201573,G__201574,G__201575,G__201576,G__201577,G__201578,G__201579,G__201580,G__201581,G__201582,G__201583,G__201584,G__201585,G__201586,G__201587,G__201588,G__201589,G__201590,G__201591) : tailrecursion.hoplon.pre.call(null,G__201572,G__201573,G__201574,G__201575,G__201576,G__201577,G__201578,G__201579,G__201580,G__201581,G__201582,G__201583,G__201584,G__201585,G__201586,G__201587,G__201588,G__201589,G__201590,G__201591));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201570,G__201571) : tailrecursion.hoplon.div.call(null,G__201570,G__201571));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201569) : tailrecursion.hoplon.div.call(null,G__201569));
})(),(function (){var G__201610 = cljs.core.PersistentArrayMap.EMPTY;
var G__201611 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which can be though of as saying"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201610,G__201611) : tailrecursion.hoplon.markdown.para_node.call(null,G__201610,G__201611));
})(),(function (){var G__201612 = cljs.core.PersistentArrayMap.EMPTY;
var G__201613 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["let ",(function (){var G__201614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<var1>"], null);
var G__201615 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201614,G__201615) : tailrecursion.hoplon.markdown.code_node.call(null,G__201614,G__201615));
})()," have the value ",(function (){var G__201616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<exp1>"], null);
var G__201617 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201616,G__201617) : tailrecursion.hoplon.markdown.code_node.call(null,G__201616,G__201617));
})()," and ",(function (){var G__201618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<var2>"], null);
var G__201619 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201618,G__201619) : tailrecursion.hoplon.markdown.code_node.call(null,G__201618,G__201619));
})()," have the value ",(function (){var G__201620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<exp2>"], null);
var G__201621 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201620,G__201621) : tailrecursion.hoplon.markdown.code_node.call(null,G__201620,G__201621));
})()," and ",(function (){var G__201622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__201623 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__201622,G__201623) : tailrecursion.hoplon.markdown.simple_node.call(null,G__201622,G__201623));
})()," ",(function (){var G__201624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<varn>"], null);
var G__201625 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201624,G__201625) : tailrecursion.hoplon.markdown.code_node.call(null,G__201624,G__201625));
})()," have the value ",(function (){var G__201626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<expn>"], null);
var G__201627 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201626,G__201627) : tailrecursion.hoplon.markdown.code_node.call(null,G__201626,G__201627));
})()," in ",(function (){var G__201628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"<body>"], null);
var G__201629 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201628,G__201629) : tailrecursion.hoplon.markdown.code_node.call(null,G__201628,G__201629));
})(),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201612,G__201613) : tailrecursion.hoplon.markdown.para_node.call(null,G__201612,G__201613));
})(),(function (){var G__201630 = cljs.core.PersistentArrayMap.EMPTY;
var G__201631 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The first part of the ",(function (){var G__201632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201633 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201632,G__201633) : tailrecursion.hoplon.markdown.code_node.call(null,G__201632,G__201633));
})()," expression is a vector of name-expression pairs. When the ",(function (){var G__201634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201635 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201634,G__201635) : tailrecursion.hoplon.markdown.code_node.call(null,G__201634,G__201635));
})()," is evaluated, each name is associated with the value of the corresponding expression. The body of the ",(function (){var G__201636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201637 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201636,G__201637) : tailrecursion.hoplon.markdown.code_node.call(null,G__201636,G__201637));
})()," is evaluated with these names bound as local variables. The way this happens is that the ",(function (){var G__201638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201639 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201638,G__201639) : tailrecursion.hoplon.markdown.code_node.call(null,G__201638,G__201639));
})()," expression is interpreted as an alternate syntax for"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201630,G__201631) : tailrecursion.hoplon.markdown.para_node.call(null,G__201630,G__201631));
})(),(function (){var G__201676 = (function (){var G__201677 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201678 = (function (){var G__201679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201680 = "((";
var G__201681 = (function (){var G__201697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201698 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201697,G__201698) : tailrecursion.hoplon.span.call(null,G__201697,G__201698));
})();
var G__201682 = "[";
var G__201683 = (function (){var G__201699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201700 = "<var1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201699,G__201700) : tailrecursion.hoplon.span.call(null,G__201699,G__201700));
})();
var G__201684 = " ";
var G__201685 = (function (){var G__201701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201702 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201701,G__201702) : tailrecursion.hoplon.span.call(null,G__201701,G__201702));
})();
var G__201686 = " ";
var G__201687 = (function (){var G__201703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201704 = "<varn>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201703,G__201704) : tailrecursion.hoplon.span.call(null,G__201703,G__201704));
})();
var G__201688 = "] ";
var G__201689 = (function (){var G__201705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201706 = "<body>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201705,G__201706) : tailrecursion.hoplon.span.call(null,G__201705,G__201706));
})();
var G__201690 = ") (";
var G__201691 = (function (){var G__201707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201708 = "<exp1>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201707,G__201708) : tailrecursion.hoplon.span.call(null,G__201707,G__201708));
})();
var G__201692 = " ";
var G__201693 = (function (){var G__201709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201710 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201709,G__201710) : tailrecursion.hoplon.span.call(null,G__201709,G__201710));
})();
var G__201694 = " ";
var G__201695 = (function (){var G__201711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201712 = "<expn>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201711,G__201712) : tailrecursion.hoplon.span.call(null,G__201711,G__201712));
})();
var G__201696 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__201679,G__201680,G__201681,G__201682,G__201683,G__201684,G__201685,G__201686,G__201687,G__201688,G__201689,G__201690,G__201691,G__201692,G__201693,G__201694,G__201695,G__201696) : tailrecursion.hoplon.pre.call(null,G__201679,G__201680,G__201681,G__201682,G__201683,G__201684,G__201685,G__201686,G__201687,G__201688,G__201689,G__201690,G__201691,G__201692,G__201693,G__201694,G__201695,G__201696));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201677,G__201678) : tailrecursion.hoplon.div.call(null,G__201677,G__201678));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201676) : tailrecursion.hoplon.div.call(null,G__201676));
})(),(function (){var G__201713 = cljs.core.PersistentArrayMap.EMPTY;
var G__201714 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["No new mechanism is required in the interpreter in order to provide local variables. A ",(function (){var G__201715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201716 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201715,G__201716) : tailrecursion.hoplon.markdown.code_node.call(null,G__201715,G__201716));
})()," expression is simply syntactic sugar for the underlying ",(function (){var G__201717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__201718 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201717,G__201718) : tailrecursion.hoplon.markdown.code_node.call(null,G__201717,G__201718));
})()," application."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201713,G__201714) : tailrecursion.hoplon.markdown.para_node.call(null,G__201713,G__201714));
})(),(function (){var G__201719 = cljs.core.PersistentArrayMap.EMPTY;
var G__201720 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can see from this equivalence that the scope of a variable specified by a ",(function (){var G__201721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201722 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201721,G__201722) : tailrecursion.hoplon.markdown.code_node.call(null,G__201721,G__201722));
})()," expression is the body of the ",(function (){var G__201723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201724 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201723,G__201724) : tailrecursion.hoplon.markdown.code_node.call(null,G__201723,G__201724));
})(),". This implies that:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201719,G__201720) : tailrecursion.hoplon.markdown.para_node.call(null,G__201719,G__201720));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201088;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201087;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201086;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201085;
}})(),"",(function (){var G__201725 = cljs.core.PersistentArrayMap.EMPTY;
var G__201726 = (function (){var G__201729 = cljs.core.PersistentArrayMap.EMPTY;
var G__201730 = (function (){var _STAR_references_STAR_201731 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201732 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_201733 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201734 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__201735 = cljs.core.PersistentArrayMap.EMPTY;
var G__201736 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__201737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201738 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201737,G__201738) : tailrecursion.hoplon.markdown.code_node.call(null,G__201737,G__201738));
})()," allows one to bind variables as locally as possible to where they are to be used. For example, if the value of x is 5, the value of the expression"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201735,G__201736) : tailrecursion.hoplon.markdown.para_node.call(null,G__201735,G__201736));
})(),(function (){var G__201781 = (function (){var G__201782 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201783 = (function (){var G__201784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201785 = "(";
var G__201786 = (function (){var G__201804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201805 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201804,G__201805) : tailrecursion.hoplon.span.call(null,G__201804,G__201805));
})();
var G__201787 = "(";
var G__201788 = (function (){var G__201806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201807 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201806,G__201807) : tailrecursion.hoplon.span.call(null,G__201806,G__201807));
})();
var G__201789 = "[";
var G__201790 = (function (){var G__201808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201809 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201808,G__201809) : tailrecursion.hoplon.span.call(null,G__201808,G__201809));
})();
var G__201791 = " ";
var G__201792 = (function (){var G__201810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201811 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201810,G__201811) : tailrecursion.hoplon.span.call(null,G__201810,G__201811));
})();
var G__201793 = "]\n     (";
var G__201794 = (function (){var G__201812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201813 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201812,G__201813) : tailrecursion.hoplon.span.call(null,G__201812,G__201813));
})();
var G__201795 = (function (){var G__201814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201815 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201814,G__201815) : tailrecursion.hoplon.span.call(null,G__201814,G__201815));
})();
var G__201796 = " (";
var G__201797 = (function (){var G__201816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201817 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201816,G__201817) : tailrecursion.hoplon.span.call(null,G__201816,G__201817));
})();
var G__201798 = (function (){var G__201818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201819 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201818,G__201819) : tailrecursion.hoplon.span.call(null,G__201818,G__201819));
})();
var G__201799 = " ";
var G__201800 = (function (){var G__201820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201821 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201820,G__201821) : tailrecursion.hoplon.span.call(null,G__201820,G__201821));
})();
var G__201801 = ")))\n   ";
var G__201802 = (function (){var G__201822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201823 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201822,G__201823) : tailrecursion.hoplon.span.call(null,G__201822,G__201823));
})();
var G__201803 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__201784,G__201785,G__201786,G__201787,G__201788,G__201789,G__201790,G__201791,G__201792,G__201793,G__201794,G__201795,G__201796,G__201797,G__201798,G__201799,G__201800,G__201801,G__201802,G__201803) : tailrecursion.hoplon.pre.call(null,G__201784,G__201785,G__201786,G__201787,G__201788,G__201789,G__201790,G__201791,G__201792,G__201793,G__201794,G__201795,G__201796,G__201797,G__201798,G__201799,G__201800,G__201801,G__201802,G__201803));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201782,G__201783) : tailrecursion.hoplon.div.call(null,G__201782,G__201783));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201781) : tailrecursion.hoplon.div.call(null,G__201781));
})(),(function (){var G__201824 = cljs.core.PersistentArrayMap.EMPTY;
var G__201825 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is 38. Here, the x in the body of the ",(function (){var G__201826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201827 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201826,G__201827) : tailrecursion.hoplon.markdown.code_node.call(null,G__201826,G__201827));
})()," is 3, so the value of the ",(function (){var G__201828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201828,G__201829) : tailrecursion.hoplon.markdown.code_node.call(null,G__201828,G__201829));
})()," expression is 33. On the other hand, the x that is the second argument to the outermost + is still 5."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201824,G__201825) : tailrecursion.hoplon.markdown.para_node.call(null,G__201824,G__201825));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201734;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201733;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201732;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201731;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__201729,G__201730) : tailrecursion.hoplon.li.call(null,G__201729,G__201730));
})();
var G__201727 = "";
var G__201728 = (function (){var G__201830 = cljs.core.PersistentArrayMap.EMPTY;
var G__201831 = (function (){var _STAR_references_STAR_201832 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201833 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_201834 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_201835 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__201836 = cljs.core.PersistentArrayMap.EMPTY;
var G__201837 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In Scheme, the variables",(function (){var G__201838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__201839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__201838,G__201839) : tailrecursion.hoplon.markdown.simple_node.call(null,G__201838,G__201839));
})()," values are computed outside the ",(function (){var G__201840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201840,G__201841) : tailrecursion.hoplon.markdown.code_node.call(null,G__201840,G__201841));
})()," which matters when the expressions that provide the values for the local variables depend upon variables having the same names as the local variables themselves. In Clojure, however, the values are computed sequentially with each new assigned value creating a nested environment. For example, if the value of x is 2, the expression"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201836,G__201837) : tailrecursion.hoplon.markdown.para_node.call(null,G__201836,G__201837));
})(),(function (){var G__201884 = (function (){var G__201885 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201886 = (function (){var G__201887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201888 = "(";
var G__201889 = (function (){var G__201907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201908 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201907,G__201908) : tailrecursion.hoplon.span.call(null,G__201907,G__201908));
})();
var G__201890 = "((";
var G__201891 = (function (){var G__201909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201910 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201909,G__201910) : tailrecursion.hoplon.span.call(null,G__201909,G__201910));
})();
var G__201892 = " ";
var G__201893 = (function (){var G__201911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201912 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201911,G__201912) : tailrecursion.hoplon.span.call(null,G__201911,G__201912));
})();
var G__201894 = ")\n      (";
var G__201895 = (function (){var G__201913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__201914 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201913,G__201914) : tailrecursion.hoplon.span.call(null,G__201913,G__201914));
})();
var G__201896 = " (";
var G__201897 = (function (){var G__201915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201916 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201915,G__201916) : tailrecursion.hoplon.span.call(null,G__201915,G__201916));
})();
var G__201898 = (function (){var G__201917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201918 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201917,G__201918) : tailrecursion.hoplon.span.call(null,G__201917,G__201918));
})();
var G__201899 = " ";
var G__201900 = (function (){var G__201919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__201920 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201919,G__201920) : tailrecursion.hoplon.span.call(null,G__201919,G__201920));
})();
var G__201901 = ")))\n  (";
var G__201902 = (function (){var G__201921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__201922 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201921,G__201922) : tailrecursion.hoplon.span.call(null,G__201921,G__201922));
})();
var G__201903 = (function (){var G__201923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201924 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201923,G__201924) : tailrecursion.hoplon.span.call(null,G__201923,G__201924));
})();
var G__201904 = " ";
var G__201905 = (function (){var G__201925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201926 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201925,G__201926) : tailrecursion.hoplon.span.call(null,G__201925,G__201926));
})();
var G__201906 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__201887,G__201888,G__201889,G__201890,G__201891,G__201892,G__201893,G__201894,G__201895,G__201896,G__201897,G__201898,G__201899,G__201900,G__201901,G__201902,G__201903,G__201904,G__201905,G__201906) : tailrecursion.hoplon.pre.call(null,G__201887,G__201888,G__201889,G__201890,G__201891,G__201892,G__201893,G__201894,G__201895,G__201896,G__201897,G__201898,G__201899,G__201900,G__201901,G__201902,G__201903,G__201904,G__201905,G__201906));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201885,G__201886) : tailrecursion.hoplon.div.call(null,G__201885,G__201886));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201884) : tailrecursion.hoplon.div.call(null,G__201884));
})(),(function (){var G__201927 = cljs.core.PersistentArrayMap.EMPTY;
var G__201928 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["would evaluate to 12 in Scheme because the values are computed from outside the ",(function (){var G__201929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__201930 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__201929,G__201930) : tailrecursion.hoplon.markdown.code_node.call(null,G__201929,G__201930));
})()," binding, but the same thing (in Clojurian syntax)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__201927,G__201928) : tailrecursion.hoplon.markdown.para_node.call(null,G__201927,G__201928));
})(),(function (){var G__201973 = (function (){var G__201974 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__201975 = (function (){var G__201976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__201977 = "(";
var G__201978 = (function (){var G__201996 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__201997 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201996,G__201997) : tailrecursion.hoplon.span.call(null,G__201996,G__201997));
})();
var G__201979 = "[";
var G__201980 = (function (){var G__201998 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__201999 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__201998,G__201999) : tailrecursion.hoplon.span.call(null,G__201998,G__201999));
})();
var G__201981 = " ";
var G__201982 = (function (){var G__202000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202001 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202000,G__202001) : tailrecursion.hoplon.span.call(null,G__202000,G__202001));
})();
var G__201983 = "\n      ";
var G__201984 = (function (){var G__202002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202003 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202002,G__202003) : tailrecursion.hoplon.span.call(null,G__202002,G__202003));
})();
var G__201985 = " (";
var G__201986 = (function (){var G__202004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202005 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202004,G__202005) : tailrecursion.hoplon.span.call(null,G__202004,G__202005));
})();
var G__201987 = (function (){var G__202006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202007 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202006,G__202007) : tailrecursion.hoplon.span.call(null,G__202006,G__202007));
})();
var G__201988 = " ";
var G__201989 = (function (){var G__202008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202009 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202008,G__202009) : tailrecursion.hoplon.span.call(null,G__202008,G__202009));
})();
var G__201990 = ")]\n  (";
var G__201991 = (function (){var G__202010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202011 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202010,G__202011) : tailrecursion.hoplon.span.call(null,G__202010,G__202011));
})();
var G__201992 = (function (){var G__202012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202013 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202012,G__202013) : tailrecursion.hoplon.span.call(null,G__202012,G__202013));
})();
var G__201993 = " ";
var G__201994 = (function (){var G__202014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202015 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202014,G__202015) : tailrecursion.hoplon.span.call(null,G__202014,G__202015));
})();
var G__201995 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__201976,G__201977,G__201978,G__201979,G__201980,G__201981,G__201982,G__201983,G__201984,G__201985,G__201986,G__201987,G__201988,G__201989,G__201990,G__201991,G__201992,G__201993,G__201994,G__201995) : tailrecursion.hoplon.pre.call(null,G__201976,G__201977,G__201978,G__201979,G__201980,G__201981,G__201982,G__201983,G__201984,G__201985,G__201986,G__201987,G__201988,G__201989,G__201990,G__201991,G__201992,G__201993,G__201994,G__201995));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__201974,G__201975) : tailrecursion.hoplon.div.call(null,G__201974,G__201975));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__201973) : tailrecursion.hoplon.div.call(null,G__201973));
})(),(function (){var G__202016 = cljs.core.PersistentArrayMap.EMPTY;
var G__202017 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["would evaluate to 15 in Clojure because the values are set in order. So when the y is being set to ",(function (){var G__202018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ x 2)"], null);
var G__202019 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202018,G__202019) : tailrecursion.hoplon.markdown.code_node.call(null,G__202018,G__202019));
})(),", the x is already set to 3."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202016,G__202017) : tailrecursion.hoplon.markdown.para_node.call(null,G__202016,G__202017));
})(),(function (){var G__202020 = cljs.core.PersistentArrayMap.EMPTY;
var G__202021 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__202023 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202022,G__202023) : tailrecursion.hoplon.markdown.code_node.call(null,G__202022,G__202023));
})()," in Clojure is actually based off of a function called ",(function (){var G__202024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let*"], null);
var G__202025 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202024,G__202025) : tailrecursion.hoplon.markdown.code_node.call(null,G__202024,G__202025));
})()," in Scheme which is equivalent to nested ",(function (){var G__202026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__202027 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202026,G__202027) : tailrecursion.hoplon.markdown.code_node.call(null,G__202026,G__202027));
})()," procedures. Strangely enough ",(function (){var G__202028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let*"], null);
var G__202029 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202028,G__202029) : tailrecursion.hoplon.markdown.code_node.call(null,G__202028,G__202029));
})()," in Clojure acts the same as ",(function (){var G__202030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__202031 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202030,G__202031) : tailrecursion.hoplon.markdown.code_node.call(null,G__202030,G__202031));
})()," in Scheme. So in summation, our previous function is actually the same as:",(function (){var G__202032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__202033 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Understanding internal definitions well enough to be sure a program means what we intend it to mean requires a more elaborate model of the evaluation process than we have presented in this chapter. We will return to this issue in section 4.1.6, after we learn more about evaluation."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__202032,G__202033) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__202032,G__202033));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202020,G__202021) : tailrecursion.hoplon.markdown.para_node.call(null,G__202020,G__202021));
})(),(function (){var G__202080 = (function (){var G__202081 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202082 = (function (){var G__202083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202084 = "(";
var G__202085 = (function (){var G__202105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202106 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202105,G__202106) : tailrecursion.hoplon.span.call(null,G__202105,G__202106));
})();
var G__202086 = "[";
var G__202087 = (function (){var G__202107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202108 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202107,G__202108) : tailrecursion.hoplon.span.call(null,G__202107,G__202108));
})();
var G__202088 = " ";
var G__202089 = (function (){var G__202109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202110 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202109,G__202110) : tailrecursion.hoplon.span.call(null,G__202109,G__202110));
})();
var G__202090 = "]\n  (";
var G__202091 = (function (){var G__202111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202112 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202111,G__202112) : tailrecursion.hoplon.span.call(null,G__202111,G__202112));
})();
var G__202092 = "[";
var G__202093 = (function (){var G__202113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202114 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202113,G__202114) : tailrecursion.hoplon.span.call(null,G__202113,G__202114));
})();
var G__202094 = " (";
var G__202095 = (function (){var G__202115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202116 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202115,G__202116) : tailrecursion.hoplon.span.call(null,G__202115,G__202116));
})();
var G__202096 = (function (){var G__202117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202118 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202117,G__202118) : tailrecursion.hoplon.span.call(null,G__202117,G__202118));
})();
var G__202097 = " ";
var G__202098 = (function (){var G__202119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202120 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202119,G__202120) : tailrecursion.hoplon.span.call(null,G__202119,G__202120));
})();
var G__202099 = ")]\n    (";
var G__202100 = (function (){var G__202121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202122 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202121,G__202122) : tailrecursion.hoplon.span.call(null,G__202121,G__202122));
})();
var G__202101 = (function (){var G__202123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202124 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202123,G__202124) : tailrecursion.hoplon.span.call(null,G__202123,G__202124));
})();
var G__202102 = " ";
var G__202103 = (function (){var G__202125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202126 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202125,G__202126) : tailrecursion.hoplon.span.call(null,G__202125,G__202126));
})();
var G__202104 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__202083,G__202084,G__202085,G__202086,G__202087,G__202088,G__202089,G__202090,G__202091,G__202092,G__202093,G__202094,G__202095,G__202096,G__202097,G__202098,G__202099,G__202100,G__202101,G__202102,G__202103,G__202104) : tailrecursion.hoplon.pre.call(null,G__202083,G__202084,G__202085,G__202086,G__202087,G__202088,G__202089,G__202090,G__202091,G__202092,G__202093,G__202094,G__202095,G__202096,G__202097,G__202098,G__202099,G__202100,G__202101,G__202102,G__202103,G__202104));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202081,G__202082) : tailrecursion.hoplon.div.call(null,G__202081,G__202082));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202080) : tailrecursion.hoplon.div.call(null,G__202080));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201835;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201834;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_201833;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_201832;
}})();
return (tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.li.cljs$core$IFn$_invoke$arity$2(G__201830,G__201831) : tailrecursion.hoplon.li.call(null,G__201830,G__201831));
})();
return (tailrecursion.hoplon.ul.cljs$core$IFn$_invoke$arity$4 ? tailrecursion.hoplon.ul.cljs$core$IFn$_invoke$arity$4(G__201725,G__201726,G__201727,G__201728) : tailrecursion.hoplon.ul.call(null,G__201725,G__201726,G__201727,G__201728));
})()], 0));
var G__194644 = "";
var G__194645 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,(34)], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_202127 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202128 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202129 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202130 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202131 = cljs.core.PersistentArrayMap.EMPTY;
var G__202132 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose we define the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202131,G__202132) : tailrecursion.hoplon.markdown.para_node.call(null,G__202131,G__202132));
})(),(function (){var G__202156 = (function (){var G__202157 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202158 = (function (){var G__202159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202160 = "(";
var G__202161 = (function (){var G__202170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202171 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202170,G__202171) : tailrecursion.hoplon.span.call(null,G__202170,G__202171));
})();
var G__202162 = (function (){var G__202172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202173 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202172,G__202173) : tailrecursion.hoplon.span.call(null,G__202172,G__202173));
})();
var G__202163 = " [";
var G__202164 = (function (){var G__202174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202175 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202174,G__202175) : tailrecursion.hoplon.span.call(null,G__202174,G__202175));
})();
var G__202165 = "]\n  (";
var G__202166 = (function (){var G__202176 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202177 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202176,G__202177) : tailrecursion.hoplon.span.call(null,G__202176,G__202177));
})();
var G__202167 = " ";
var G__202168 = (function (){var G__202178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202179 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202178,G__202179) : tailrecursion.hoplon.span.call(null,G__202178,G__202179));
})();
var G__202169 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$11(G__202159,G__202160,G__202161,G__202162,G__202163,G__202164,G__202165,G__202166,G__202167,G__202168,G__202169) : tailrecursion.hoplon.pre.call(null,G__202159,G__202160,G__202161,G__202162,G__202163,G__202164,G__202165,G__202166,G__202167,G__202168,G__202169));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202157,G__202158) : tailrecursion.hoplon.div.call(null,G__202157,G__202158));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202156) : tailrecursion.hoplon.div.call(null,G__202156));
})(),(function (){var G__202180 = cljs.core.PersistentArrayMap.EMPTY;
var G__202181 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then we have"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202180,G__202181) : tailrecursion.hoplon.markdown.para_node.call(null,G__202180,G__202181));
})(),(function (){var G__202198 = (function (){var G__202199 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202200 = (function (){var G__202201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202202 = "(";
var G__202203 = (function (){var G__202209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202210 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202209,G__202210) : tailrecursion.hoplon.span.call(null,G__202209,G__202210));
})();
var G__202204 = " ";
var G__202205 = (function (){var G__202211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202212 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202211,G__202212) : tailrecursion.hoplon.span.call(null,G__202211,G__202212));
})();
var G__202206 = ")\n";
var G__202207 = (function (){var G__202213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202214 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202213,G__202214) : tailrecursion.hoplon.span.call(null,G__202213,G__202214));
})();
var G__202208 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__202201,G__202202,G__202203,G__202204,G__202205,G__202206,G__202207,G__202208) : tailrecursion.hoplon.pre.call(null,G__202201,G__202202,G__202203,G__202204,G__202205,G__202206,G__202207,G__202208));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202199,G__202200) : tailrecursion.hoplon.div.call(null,G__202199,G__202200));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202198) : tailrecursion.hoplon.div.call(null,G__202198));
})(),(function (){var G__202253 = (function (){var G__202254 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202255 = (function (){var G__202256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202257 = "(";
var G__202258 = (function (){var G__202274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202275 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202274,G__202275) : tailrecursion.hoplon.span.call(null,G__202274,G__202275));
})();
var G__202259 = " (";
var G__202260 = (function (){var G__202276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202277 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202276,G__202277) : tailrecursion.hoplon.span.call(null,G__202276,G__202277));
})();
var G__202261 = "[";
var G__202262 = (function (){var G__202278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202279 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202278,G__202279) : tailrecursion.hoplon.span.call(null,G__202278,G__202279));
})();
var G__202263 = "] (";
var G__202264 = (function (){var G__202280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202281 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202280,G__202281) : tailrecursion.hoplon.span.call(null,G__202280,G__202281));
})();
var G__202265 = (function (){var G__202282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202283 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202282,G__202283) : tailrecursion.hoplon.span.call(null,G__202282,G__202283));
})();
var G__202266 = " (";
var G__202267 = (function (){var G__202284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202285 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202284,G__202285) : tailrecursion.hoplon.span.call(null,G__202284,G__202285));
})();
var G__202268 = (function (){var G__202286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202287 = "z";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202286,G__202287) : tailrecursion.hoplon.span.call(null,G__202286,G__202287));
})();
var G__202269 = " ";
var G__202270 = (function (){var G__202288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202289 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202288,G__202289) : tailrecursion.hoplon.span.call(null,G__202288,G__202289));
})();
var G__202271 = "))))\n";
var G__202272 = (function (){var G__202290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202291 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202290,G__202291) : tailrecursion.hoplon.span.call(null,G__202290,G__202291));
})();
var G__202273 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__202256,G__202257,G__202258,G__202259,G__202260,G__202261,G__202262,G__202263,G__202264,G__202265,G__202266,G__202267,G__202268,G__202269,G__202270,G__202271,G__202272,G__202273) : tailrecursion.hoplon.pre.call(null,G__202256,G__202257,G__202258,G__202259,G__202260,G__202261,G__202262,G__202263,G__202264,G__202265,G__202266,G__202267,G__202268,G__202269,G__202270,G__202271,G__202272,G__202273));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202254,G__202255) : tailrecursion.hoplon.div.call(null,G__202254,G__202255));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202253) : tailrecursion.hoplon.div.call(null,G__202253));
})(),(function (){var G__202292 = cljs.core.PersistentArrayMap.EMPTY;
var G__202293 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What happens if we (perversely) as the interpreter to evaluate the combination ",(function (){var G__202294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(f f)"], null);
var G__202295 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202294,G__202295) : tailrecursion.hoplon.markdown.code_node.call(null,G__202294,G__202295));
})(),"? Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202292,G__202293) : tailrecursion.hoplon.markdown.para_node.call(null,G__202292,G__202293));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202130;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202129;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202128;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202127;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_202296 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202297 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202298 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202299 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202340 = (function (){var G__202341 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202342 = (function (){var G__202343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202344 = "((";
var G__202345 = (function (){var G__202363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202364 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202363,G__202364) : tailrecursion.hoplon.span.call(null,G__202363,G__202364));
})();
var G__202346 = "[";
var G__202347 = (function (){var G__202365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202366 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202365,G__202366) : tailrecursion.hoplon.span.call(null,G__202365,G__202366));
})();
var G__202348 = "] (";
var G__202349 = (function (){var G__202367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202368 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202367,G__202368) : tailrecursion.hoplon.span.call(null,G__202367,G__202368));
})();
var G__202350 = " ";
var G__202351 = (function (){var G__202369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202370 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202369,G__202370) : tailrecursion.hoplon.span.call(null,G__202369,G__202370));
})();
var G__202352 = ")) ";
var G__202353 = (function (){var G__202371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202372 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202371,G__202372) : tailrecursion.hoplon.span.call(null,G__202371,G__202372));
})();
var G__202354 = ")\n(";
var G__202355 = (function (){var G__202373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202374 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202373,G__202374) : tailrecursion.hoplon.span.call(null,G__202373,G__202374));
})();
var G__202356 = " ";
var G__202357 = (function (){var G__202375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202376 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202375,G__202376) : tailrecursion.hoplon.span.call(null,G__202375,G__202376));
})();
var G__202358 = ")\n(";
var G__202359 = (function (){var G__202377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202378 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202377,G__202378) : tailrecursion.hoplon.span.call(null,G__202377,G__202378));
})();
var G__202360 = " ";
var G__202361 = (function (){var G__202379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__202380 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202379,G__202380) : tailrecursion.hoplon.span.call(null,G__202379,G__202380));
})();
var G__202362 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__202343,G__202344,G__202345,G__202346,G__202347,G__202348,G__202349,G__202350,G__202351,G__202352,G__202353,G__202354,G__202355,G__202356,G__202357,G__202358,G__202359,G__202360,G__202361,G__202362) : tailrecursion.hoplon.pre.call(null,G__202343,G__202344,G__202345,G__202346,G__202347,G__202348,G__202349,G__202350,G__202351,G__202352,G__202353,G__202354,G__202355,G__202356,G__202357,G__202358,G__202359,G__202360,G__202361,G__202362));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202341,G__202342) : tailrecursion.hoplon.div.call(null,G__202341,G__202342));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202340) : tailrecursion.hoplon.div.call(null,G__202340));
})(),(function (){var G__202381 = cljs.core.PersistentArrayMap.EMPTY;
var G__202382 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["which is not defined because 2 is not a function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202381,G__202382) : tailrecursion.hoplon.markdown.para_node.call(null,G__202381,G__202382));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202299;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202298;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202297;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202296;
}})()], 0))], 0))], 0));
var G__194646 = "";
var G__194647 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Procedure as General Methods"], null),(function (){var _STAR_references_STAR_202383 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202384 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202385 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202386 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202387 = cljs.core.PersistentArrayMap.EMPTY;
var G__202388 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We introduced compound procedures in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/4/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.4"], null)], 0))," as a mechanism for abstracting patterns of numerical operations so as to make them independent of the particular numbers involved. With higher-order procedures, such as the ",(function (){var G__202389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"integral"], null);
var G__202390 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__202389,G__202390) : tailrecursion.hoplon.markdown.code_node.call(null,G__202389,G__202390));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/3/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.3.1"], null)], 0)),", we began to see a more powerful kind of abstraction: procedures used to express general methods of computation, independent of the particular functions involved. In this section we discuss two more elaborate examples ",(function (){var G__202391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__202392 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__202391,G__202392) : tailrecursion.hoplon.markdown.simple_node.call(null,G__202391,G__202392));
})()," general methods for finding zeros and fixed points of functions ",(function (){var G__202393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__202394 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__202393,G__202394) : tailrecursion.hoplon.markdown.simple_node.call(null,G__202393,G__202394));
})()," and show how these methods can be expressed directly as procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202387,G__202388) : tailrecursion.hoplon.markdown.para_node.call(null,G__202387,G__202388));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202386;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202385;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202384;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202383;
}})()], 0));
var G__194648 = "";
var G__194649 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Finding Roots of Equations by the Half-Interval Method"], null),(function (){var _STAR_references_STAR_202395 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202396 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_202397 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_202398 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__202399 = cljs.core.PersistentArrayMap.EMPTY;
var G__202400 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["half-interval method"], null)], 0))," is a simple but powerful technique for finding roots of an equation \\(f(x) = 0\\), where \\(f\\) is a continuous function. The idea is that, if we are given points \\(a\\) and \\(b\\) such that \\(f(a) < 0 < f(b)\\), then \\(f\\) must have at least one zero between \\(a\\) and \\(b\\). To locate a zero, let \\(x\\) be the average of \\(a\\) and \\(b\\) and compute \\(f(x)\\). If \\(f(x) > 0\\), then \\(f\\) must have a zero between \\(a\\) and \\(x\\). If \\(f(x) < 0\\), then \\(f\\) must have a zero between \\(x\\) and \\(b\\). Continuing in this way, we can identify smaller and smaller intervals on which \\(f\\) must have a zero. When we reach a point where the interval is small enough, the process stops. Since the interval of uncertainty is reduced by half at each step of the process, the number of steps required grows as \\(\\Theta(\\log(L/T))\\), where \\(L\\) is the length of the original interval and \\(T\\) is the error tolerance (that is, the size of the interval we will consider ",(function (){var G__202401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__202402 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["small enough"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__202401,G__202402) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__202401,G__202402));
})(),"). Here is a procedure that implements this strategy:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202399,G__202400) : tailrecursion.hoplon.markdown.para_node.call(null,G__202399,G__202400));
})(),(function (){var G__202542 = (function (){var G__202543 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202544 = (function (){var G__202545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202546 = "(";
var G__202547 = (function (){var G__202614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202615 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202614,G__202615) : tailrecursion.hoplon.span.call(null,G__202614,G__202615));
})();
var G__202548 = (function (){var G__202616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202617 = "search";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202616,G__202617) : tailrecursion.hoplon.span.call(null,G__202616,G__202617));
})();
var G__202549 = " [";
var G__202550 = (function (){var G__202618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202619 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202618,G__202619) : tailrecursion.hoplon.span.call(null,G__202618,G__202619));
})();
var G__202551 = " ";
var G__202552 = (function (){var G__202620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202621 = "neg-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202620,G__202621) : tailrecursion.hoplon.span.call(null,G__202620,G__202621));
})();
var G__202553 = " ";
var G__202554 = (function (){var G__202622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202623 = "pos-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202622,G__202623) : tailrecursion.hoplon.span.call(null,G__202622,G__202623));
})();
var G__202555 = "]\n  (";
var G__202556 = (function (){var G__202624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202625 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202624,G__202625) : tailrecursion.hoplon.span.call(null,G__202624,G__202625));
})();
var G__202557 = "[";
var G__202558 = (function (){var G__202626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202627 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202626,G__202627) : tailrecursion.hoplon.span.call(null,G__202626,G__202627));
})();
var G__202559 = " (";
var G__202560 = (function (){var G__202628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202629 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202628,G__202629) : tailrecursion.hoplon.span.call(null,G__202628,G__202629));
})();
var G__202561 = " ";
var G__202562 = (function (){var G__202630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202631 = "neg-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202630,G__202631) : tailrecursion.hoplon.span.call(null,G__202630,G__202631));
})();
var G__202563 = " ";
var G__202564 = (function (){var G__202632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202633 = "pos-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202632,G__202633) : tailrecursion.hoplon.span.call(null,G__202632,G__202633));
})();
var G__202565 = ")]\n    (";
var G__202566 = (function (){var G__202634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202635 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202634,G__202635) : tailrecursion.hoplon.span.call(null,G__202634,G__202635));
})();
var G__202567 = "(";
var G__202568 = (function (){var G__202636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202637 = "close-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202636,G__202637) : tailrecursion.hoplon.span.call(null,G__202636,G__202637));
})();
var G__202569 = " ";
var G__202570 = (function (){var G__202638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202639 = "neg-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202638,G__202639) : tailrecursion.hoplon.span.call(null,G__202638,G__202639));
})();
var G__202571 = " ";
var G__202572 = (function (){var G__202640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202641 = "pos-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202640,G__202641) : tailrecursion.hoplon.span.call(null,G__202640,G__202641));
})();
var G__202573 = ")\n        ";
var G__202574 = (function (){var G__202642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202643 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202642,G__202643) : tailrecursion.hoplon.span.call(null,G__202642,G__202643));
})();
var G__202575 = "\n        (";
var G__202576 = (function (){var G__202644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202645 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202644,G__202645) : tailrecursion.hoplon.span.call(null,G__202644,G__202645));
})();
var G__202577 = "[";
var G__202578 = (function (){var G__202646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202647 = "test-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202646,G__202647) : tailrecursion.hoplon.span.call(null,G__202646,G__202647));
})();
var G__202579 = " (";
var G__202580 = (function (){var G__202648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202649 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202648,G__202649) : tailrecursion.hoplon.span.call(null,G__202648,G__202649));
})();
var G__202581 = " ";
var G__202582 = (function (){var G__202650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202651 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202650,G__202651) : tailrecursion.hoplon.span.call(null,G__202650,G__202651));
})();
var G__202583 = ")]\n          (";
var G__202584 = (function (){var G__202652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202653 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202652,G__202653) : tailrecursion.hoplon.span.call(null,G__202652,G__202653));
})();
var G__202585 = "(";
var G__202586 = (function (){var G__202654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202655 = "positive?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202654,G__202655) : tailrecursion.hoplon.span.call(null,G__202654,G__202655));
})();
var G__202587 = " ";
var G__202588 = (function (){var G__202656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202657 = "test-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202656,G__202657) : tailrecursion.hoplon.span.call(null,G__202656,G__202657));
})();
var G__202589 = ") (";
var G__202590 = (function (){var G__202658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202659 = "search";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202658,G__202659) : tailrecursion.hoplon.span.call(null,G__202658,G__202659));
})();
var G__202591 = " ";
var G__202592 = (function (){var G__202660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202661 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202660,G__202661) : tailrecursion.hoplon.span.call(null,G__202660,G__202661));
})();
var G__202593 = " ";
var G__202594 = (function (){var G__202662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202663 = "neg-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202662,G__202663) : tailrecursion.hoplon.span.call(null,G__202662,G__202663));
})();
var G__202595 = " ";
var G__202596 = (function (){var G__202664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202665 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202664,G__202665) : tailrecursion.hoplon.span.call(null,G__202664,G__202665));
})();
var G__202597 = ")\n                (";
var G__202598 = (function (){var G__202666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202667 = "negative?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202666,G__202667) : tailrecursion.hoplon.span.call(null,G__202666,G__202667));
})();
var G__202599 = " ";
var G__202600 = (function (){var G__202668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202669 = "test-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202668,G__202669) : tailrecursion.hoplon.span.call(null,G__202668,G__202669));
})();
var G__202601 = ") (";
var G__202602 = (function (){var G__202670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202671 = "search";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202670,G__202671) : tailrecursion.hoplon.span.call(null,G__202670,G__202671));
})();
var G__202603 = " ";
var G__202604 = (function (){var G__202672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202673 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202672,G__202673) : tailrecursion.hoplon.span.call(null,G__202672,G__202673));
})();
var G__202605 = " ";
var G__202606 = (function (){var G__202674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202675 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202674,G__202675) : tailrecursion.hoplon.span.call(null,G__202674,G__202675));
})();
var G__202607 = " ";
var G__202608 = (function (){var G__202676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202677 = "pos-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202676,G__202677) : tailrecursion.hoplon.span.call(null,G__202676,G__202677));
})();
var G__202609 = ")\n                ";
var G__202610 = (function (){var G__202678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202679 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202678,G__202679) : tailrecursion.hoplon.span.call(null,G__202678,G__202679));
})();
var G__202611 = " ";
var G__202612 = (function (){var G__202680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202681 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202680,G__202681) : tailrecursion.hoplon.span.call(null,G__202680,G__202681));
})();
var G__202613 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__202545,G__202546,G__202547,G__202548,G__202549,G__202550,G__202551,G__202552,G__202553,G__202554,G__202555,G__202556,G__202557,G__202558,G__202559,G__202560,G__202561,G__202562,G__202563,G__202564,G__202565,G__202566,G__202567,G__202568,G__202569,G__202570,G__202571,G__202572,G__202573,G__202574,G__202575,G__202576,G__202577,G__202578,G__202579,G__202580,G__202581,G__202582,G__202583,G__202584,G__202585,G__202586,G__202587,G__202588,G__202589,G__202590,G__202591,G__202592,G__202593,G__202594,G__202595,G__202596,G__202597,G__202598,G__202599,G__202600,G__202601,G__202602,G__202603,G__202604,G__202605,G__202606,G__202607,G__202608,G__202609,G__202610,G__202611,G__202612,G__202613) : tailrecursion.hoplon.pre.call(null,G__202545,G__202546,G__202547,G__202548,G__202549,G__202550,G__202551,G__202552,G__202553,G__202554,G__202555,G__202556,G__202557,G__202558,G__202559,G__202560,G__202561,G__202562,G__202563,G__202564,G__202565,G__202566,G__202567,G__202568,G__202569,G__202570,G__202571,G__202572,G__202573,G__202574,G__202575,G__202576,G__202577,G__202578,G__202579,G__202580,G__202581,G__202582,G__202583,G__202584,G__202585,G__202586,G__202587,G__202588,G__202589,G__202590,G__202591,G__202592,G__202593,G__202594,G__202595,G__202596,G__202597,G__202598,G__202599,G__202600,G__202601,G__202602,G__202603,G__202604,G__202605,G__202606,G__202607,G__202608,G__202609,G__202610,G__202611,G__202612,G__202613));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202543,G__202544) : tailrecursion.hoplon.div.call(null,G__202543,G__202544));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202542) : tailrecursion.hoplon.div.call(null,G__202542));
})(),(function (){var G__202833 = (function (){var G__202834 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__202835 = (function (){var G__202836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__202837 = "(";
var G__202838 = (function (){var G__202911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202912 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202911,G__202912) : tailrecursion.hoplon.span.call(null,G__202911,G__202912));
})();
var G__202839 = (function (){var G__202913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202914 = "search";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202913,G__202914) : tailrecursion.hoplon.span.call(null,G__202913,G__202914));
})();
var G__202840 = " [";
var G__202841 = (function (){var G__202915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202916 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202915,G__202916) : tailrecursion.hoplon.span.call(null,G__202915,G__202916));
})();
var G__202842 = " ";
var G__202843 = (function (){var G__202917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202918 = "neg-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202917,G__202918) : tailrecursion.hoplon.span.call(null,G__202917,G__202918));
})();
var G__202844 = " ";
var G__202845 = (function (){var G__202919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202920 = "pos-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202919,G__202920) : tailrecursion.hoplon.span.call(null,G__202919,G__202920));
})();
var G__202846 = "]\n  (";
var G__202847 = (function (){var G__202921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202922 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202921,G__202922) : tailrecursion.hoplon.span.call(null,G__202921,G__202922));
})();
var G__202848 = "[";
var G__202849 = (function (){var G__202923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202924 = "negative";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202923,G__202924) : tailrecursion.hoplon.span.call(null,G__202923,G__202924));
})();
var G__202850 = " ";
var G__202851 = (function (){var G__202925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202926 = "neg-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202925,G__202926) : tailrecursion.hoplon.span.call(null,G__202925,G__202926));
})();
var G__202852 = "\n         ";
var G__202853 = (function (){var G__202927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202928 = "positive";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202927,G__202928) : tailrecursion.hoplon.span.call(null,G__202927,G__202928));
})();
var G__202854 = " ";
var G__202855 = (function (){var G__202929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202930 = "pos-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202929,G__202930) : tailrecursion.hoplon.span.call(null,G__202929,G__202930));
})();
var G__202856 = "]\n    (";
var G__202857 = (function (){var G__202931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202932 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202931,G__202932) : tailrecursion.hoplon.span.call(null,G__202931,G__202932));
})();
var G__202858 = "[";
var G__202859 = (function (){var G__202933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202934 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202933,G__202934) : tailrecursion.hoplon.span.call(null,G__202933,G__202934));
})();
var G__202860 = " (";
var G__202861 = (function (){var G__202935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202936 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202935,G__202936) : tailrecursion.hoplon.span.call(null,G__202935,G__202936));
})();
var G__202862 = " ";
var G__202863 = (function (){var G__202937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202938 = "negative";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202937,G__202938) : tailrecursion.hoplon.span.call(null,G__202937,G__202938));
})();
var G__202864 = " ";
var G__202865 = (function (){var G__202939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202940 = "positive";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202939,G__202940) : tailrecursion.hoplon.span.call(null,G__202939,G__202940));
})();
var G__202866 = ")]\n      (";
var G__202867 = (function (){var G__202941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202942 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202941,G__202942) : tailrecursion.hoplon.span.call(null,G__202941,G__202942));
})();
var G__202868 = "(";
var G__202869 = (function (){var G__202943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202944 = "close-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202943,G__202944) : tailrecursion.hoplon.span.call(null,G__202943,G__202944));
})();
var G__202870 = " ";
var G__202871 = (function (){var G__202945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202946 = "negative";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202945,G__202946) : tailrecursion.hoplon.span.call(null,G__202945,G__202946));
})();
var G__202872 = " ";
var G__202873 = (function (){var G__202947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202948 = "positive";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202947,G__202948) : tailrecursion.hoplon.span.call(null,G__202947,G__202948));
})();
var G__202874 = ")\n          ";
var G__202875 = (function (){var G__202949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202950 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202949,G__202950) : tailrecursion.hoplon.span.call(null,G__202949,G__202950));
})();
var G__202876 = "\n          (";
var G__202877 = (function (){var G__202951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__202952 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202951,G__202952) : tailrecursion.hoplon.span.call(null,G__202951,G__202952));
})();
var G__202878 = "[";
var G__202879 = (function (){var G__202953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202954 = "test-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202953,G__202954) : tailrecursion.hoplon.span.call(null,G__202953,G__202954));
})();
var G__202880 = " (";
var G__202881 = (function (){var G__202955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202956 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202955,G__202956) : tailrecursion.hoplon.span.call(null,G__202955,G__202956));
})();
var G__202882 = " ";
var G__202883 = (function (){var G__202957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202958 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202957,G__202958) : tailrecursion.hoplon.span.call(null,G__202957,G__202958));
})();
var G__202884 = ")]\n            (";
var G__202885 = (function (){var G__202959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__202960 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202959,G__202960) : tailrecursion.hoplon.span.call(null,G__202959,G__202960));
})();
var G__202886 = "(";
var G__202887 = (function (){var G__202961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202962 = "positive?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202961,G__202962) : tailrecursion.hoplon.span.call(null,G__202961,G__202962));
})();
var G__202888 = " ";
var G__202889 = (function (){var G__202963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202964 = "test-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202963,G__202964) : tailrecursion.hoplon.span.call(null,G__202963,G__202964));
})();
var G__202890 = ") (";
var G__202891 = (function (){var G__202965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202966 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202965,G__202966) : tailrecursion.hoplon.span.call(null,G__202965,G__202966));
})();
var G__202892 = " ";
var G__202893 = (function (){var G__202967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202968 = "negative";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202967,G__202968) : tailrecursion.hoplon.span.call(null,G__202967,G__202968));
})();
var G__202894 = " ";
var G__202895 = (function (){var G__202969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202970 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202969,G__202970) : tailrecursion.hoplon.span.call(null,G__202969,G__202970));
})();
var G__202896 = ")\n                  (";
var G__202897 = (function (){var G__202971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202972 = "negative?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202971,G__202972) : tailrecursion.hoplon.span.call(null,G__202971,G__202972));
})();
var G__202898 = " ";
var G__202899 = (function (){var G__202973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202974 = "test-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202973,G__202974) : tailrecursion.hoplon.span.call(null,G__202973,G__202974));
})();
var G__202900 = ") (";
var G__202901 = (function (){var G__202975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__202976 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202975,G__202976) : tailrecursion.hoplon.span.call(null,G__202975,G__202976));
})();
var G__202902 = " ";
var G__202903 = (function (){var G__202977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202978 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202977,G__202978) : tailrecursion.hoplon.span.call(null,G__202977,G__202978));
})();
var G__202904 = " ";
var G__202905 = (function (){var G__202979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202980 = "positive";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202979,G__202980) : tailrecursion.hoplon.span.call(null,G__202979,G__202980));
})();
var G__202906 = ")\n                  ";
var G__202907 = (function (){var G__202981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202982 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202981,G__202982) : tailrecursion.hoplon.span.call(null,G__202981,G__202982));
})();
var G__202908 = " ";
var G__202909 = (function (){var G__202983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__202984 = "midpoint";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__202983,G__202984) : tailrecursion.hoplon.span.call(null,G__202983,G__202984));
})();
var G__202910 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$75 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$75(G__202836,G__202837,G__202838,G__202839,G__202840,G__202841,G__202842,G__202843,G__202844,G__202845,G__202846,G__202847,G__202848,G__202849,G__202850,G__202851,G__202852,G__202853,G__202854,G__202855,G__202856,G__202857,G__202858,G__202859,G__202860,G__202861,G__202862,G__202863,G__202864,G__202865,G__202866,G__202867,G__202868,G__202869,G__202870,G__202871,G__202872,G__202873,G__202874,G__202875,G__202876,G__202877,G__202878,G__202879,G__202880,G__202881,G__202882,G__202883,G__202884,G__202885,G__202886,G__202887,G__202888,G__202889,G__202890,G__202891,G__202892,G__202893,G__202894,G__202895,G__202896,G__202897,G__202898,G__202899,G__202900,G__202901,G__202902,G__202903,G__202904,G__202905,G__202906,G__202907,G__202908,G__202909,G__202910) : tailrecursion.hoplon.pre.call(null,G__202836,G__202837,G__202838,G__202839,G__202840,G__202841,G__202842,G__202843,G__202844,G__202845,G__202846,G__202847,G__202848,G__202849,G__202850,G__202851,G__202852,G__202853,G__202854,G__202855,G__202856,G__202857,G__202858,G__202859,G__202860,G__202861,G__202862,G__202863,G__202864,G__202865,G__202866,G__202867,G__202868,G__202869,G__202870,G__202871,G__202872,G__202873,G__202874,G__202875,G__202876,G__202877,G__202878,G__202879,G__202880,G__202881,G__202882,G__202883,G__202884,G__202885,G__202886,G__202887,G__202888,G__202889,G__202890,G__202891,G__202892,G__202893,G__202894,G__202895,G__202896,G__202897,G__202898,G__202899,G__202900,G__202901,G__202902,G__202903,G__202904,G__202905,G__202906,G__202907,G__202908,G__202909,G__202910));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__202834,G__202835) : tailrecursion.hoplon.div.call(null,G__202834,G__202835));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__202833) : tailrecursion.hoplon.div.call(null,G__202833));
})(),(function (){var G__202985 = cljs.core.PersistentArrayMap.EMPTY;
var G__202986 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We assume that we are initially given the function \\(f\\) together with points at which its values are negative and positive. We first compute the midpoint of the two given points. Next we check to see if the given interval is small enough, and if so we simply return the midpoint as our answer. Otherwise, we compute as a test value the value of \\(f\\) at the midpoint. If the test value is positive, then we continue the process with a new interval running from the original negative point to the midpoint. If the test value is negative, we continue with the interval from the midpoint to the positive point. Finally, there is the possibility that the test value is 0, in which case the midpoint is itself the root we are searching for."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202985,G__202986) : tailrecursion.hoplon.markdown.para_node.call(null,G__202985,G__202986));
})(),(function (){var G__202987 = cljs.core.PersistentArrayMap.EMPTY;
var G__202988 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To test whether the endpoints are ",(function (){var G__202989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__202990 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["close enough"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__202989,G__202990) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__202989,G__202990));
})()," we can use a procedure similar to the one used in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/7/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.7"], null)], 0))," for computing square roots:",(function (){var G__202991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__202992 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have used 0.001 as a representative ",(function (){var G__202993 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__202994 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["small"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__202993,G__202994) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__202993,G__202994));
})()," number to indicate a tolerance for the acceptable error in a calculation. The appropriate tolerance for a real calculation depends upon the problem to be solved and the limitations of the computer and the algorithm. This is often a very subtle consideration, requiring help from a numerical analyst or some other kind of magician."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__202991,G__202992) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__202991,G__202992));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__202987,G__202988) : tailrecursion.hoplon.markdown.para_node.call(null,G__202987,G__202988));
})(),(function (){var G__203037 = (function (){var G__203038 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__203039 = (function (){var G__203040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__203041 = "(";
var G__203042 = (function (){var G__203060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203061 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203060,G__203061) : tailrecursion.hoplon.span.call(null,G__203060,G__203061));
})();
var G__203043 = (function (){var G__203062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203063 = "close-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203062,G__203063) : tailrecursion.hoplon.span.call(null,G__203062,G__203063));
})();
var G__203044 = " [";
var G__203045 = (function (){var G__203064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203065 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203064,G__203065) : tailrecursion.hoplon.span.call(null,G__203064,G__203065));
})();
var G__203046 = " ";
var G__203047 = (function (){var G__203066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203067 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203066,G__203067) : tailrecursion.hoplon.span.call(null,G__203066,G__203067));
})();
var G__203048 = "]\n  (";
var G__203049 = (function (){var G__203068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203069 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203068,G__203069) : tailrecursion.hoplon.span.call(null,G__203068,G__203069));
})();
var G__203050 = "(";
var G__203051 = (function (){var G__203070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203071 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203070,G__203071) : tailrecursion.hoplon.span.call(null,G__203070,G__203071));
})();
var G__203052 = " (";
var G__203053 = (function (){var G__203072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203073 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203072,G__203073) : tailrecursion.hoplon.span.call(null,G__203072,G__203073));
})();
var G__203054 = (function (){var G__203074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203075 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203074,G__203075) : tailrecursion.hoplon.span.call(null,G__203074,G__203075));
})();
var G__203055 = " ";
var G__203056 = (function (){var G__203076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203077 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203076,G__203077) : tailrecursion.hoplon.span.call(null,G__203076,G__203077));
})();
var G__203057 = ")) ";
var G__203058 = (function (){var G__203078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203079 = "0.001";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203078,G__203079) : tailrecursion.hoplon.span.call(null,G__203078,G__203079));
})();
var G__203059 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__203040,G__203041,G__203042,G__203043,G__203044,G__203045,G__203046,G__203047,G__203048,G__203049,G__203050,G__203051,G__203052,G__203053,G__203054,G__203055,G__203056,G__203057,G__203058,G__203059) : tailrecursion.hoplon.pre.call(null,G__203040,G__203041,G__203042,G__203043,G__203044,G__203045,G__203046,G__203047,G__203048,G__203049,G__203050,G__203051,G__203052,G__203053,G__203054,G__203055,G__203056,G__203057,G__203058,G__203059));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__203038,G__203039) : tailrecursion.hoplon.div.call(null,G__203038,G__203039));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__203037) : tailrecursion.hoplon.div.call(null,G__203037));
})(),(function (){var G__203080 = cljs.core.PersistentArrayMap.EMPTY;
var G__203081 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__203082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"search"], null);
var G__203083 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203082,G__203083) : tailrecursion.hoplon.markdown.code_node.call(null,G__203082,G__203083));
})()," is awkward to use directly, because we can accidentally give it points at which \\(f\\)s values do not have the required sign, in which case we get a wrong answer. Instead we will use ",(function (){var G__203084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"search"], null);
var G__203085 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203084,G__203085) : tailrecursion.hoplon.markdown.code_node.call(null,G__203084,G__203085));
})()," via the following procedure, which checks to see which of the endpoints has a negative function value and which has a positive value, and calls the ",(function (){var G__203086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"search"], null);
var G__203087 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203086,G__203087) : tailrecursion.hoplon.markdown.code_node.call(null,G__203086,G__203087));
})()," procedure accordingly. If the function has the same sign at the two given points, the half-interval method cannot be used, in which case the procedure signals an error.",(function (){var G__203088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__203089 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This can be accomplished using ",(function (){var G__203090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"throw"], null);
var G__203091 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203090,G__203091) : tailrecursion.hoplon.markdown.code_node.call(null,G__203090,G__203091));
})(),", which takes as arguments a java ",(function (){var G__203092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__203093 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["throwable"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__203092,G__203093) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__203092,G__203093));
})()," like ",(function (){var G__203094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Exception."], null);
var G__203095 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203094,G__203095) : tailrecursion.hoplon.markdown.code_node.call(null,G__203094,G__203095));
})()," and a string to be printed as an error message."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__203088,G__203089) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__203088,G__203089));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203080,G__203081) : tailrecursion.hoplon.markdown.para_node.call(null,G__203080,G__203081));
})(),(function (){var G__203239 = (function (){var G__203240 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__203241 = (function (){var G__203242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__203243 = "(";
var G__203244 = (function (){var G__203313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203314 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203313,G__203314) : tailrecursion.hoplon.span.call(null,G__203313,G__203314));
})();
var G__203245 = (function (){var G__203315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203316 = "half-interval-method";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203315,G__203316) : tailrecursion.hoplon.span.call(null,G__203315,G__203316));
})();
var G__203246 = " [";
var G__203247 = (function (){var G__203317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203318 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203317,G__203318) : tailrecursion.hoplon.span.call(null,G__203317,G__203318));
})();
var G__203248 = " ";
var G__203249 = (function (){var G__203319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203320 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203319,G__203320) : tailrecursion.hoplon.span.call(null,G__203319,G__203320));
})();
var G__203250 = " ";
var G__203251 = (function (){var G__203321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203322 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203321,G__203322) : tailrecursion.hoplon.span.call(null,G__203321,G__203322));
})();
var G__203252 = "]\n  (";
var G__203253 = (function (){var G__203323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203324 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203323,G__203324) : tailrecursion.hoplon.span.call(null,G__203323,G__203324));
})();
var G__203254 = "[";
var G__203255 = (function (){var G__203325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203326 = "a-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203325,G__203326) : tailrecursion.hoplon.span.call(null,G__203325,G__203326));
})();
var G__203256 = " (";
var G__203257 = (function (){var G__203327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203328 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203327,G__203328) : tailrecursion.hoplon.span.call(null,G__203327,G__203328));
})();
var G__203258 = " ";
var G__203259 = (function (){var G__203329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203330 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203329,G__203330) : tailrecursion.hoplon.span.call(null,G__203329,G__203330));
})();
var G__203260 = ")\n        ";
var G__203261 = (function (){var G__203331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203332 = "b-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203331,G__203332) : tailrecursion.hoplon.span.call(null,G__203331,G__203332));
})();
var G__203262 = " (";
var G__203263 = (function (){var G__203333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203334 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203333,G__203334) : tailrecursion.hoplon.span.call(null,G__203333,G__203334));
})();
var G__203264 = " ";
var G__203265 = (function (){var G__203335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203336 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203335,G__203336) : tailrecursion.hoplon.span.call(null,G__203335,G__203336));
})();
var G__203266 = ")]\n    (";
var G__203267 = (function (){var G__203337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203338 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203337,G__203338) : tailrecursion.hoplon.span.call(null,G__203337,G__203338));
})();
var G__203268 = "(";
var G__203269 = (function (){var G__203339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203340 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203339,G__203340) : tailrecursion.hoplon.span.call(null,G__203339,G__203340));
})();
var G__203270 = "(";
var G__203271 = (function (){var G__203341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203342 = "negative?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203341,G__203342) : tailrecursion.hoplon.span.call(null,G__203341,G__203342));
})();
var G__203272 = " ";
var G__203273 = (function (){var G__203343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203344 = "a-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203343,G__203344) : tailrecursion.hoplon.span.call(null,G__203343,G__203344));
})();
var G__203274 = ") (";
var G__203275 = (function (){var G__203345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203346 = "positive?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203345,G__203346) : tailrecursion.hoplon.span.call(null,G__203345,G__203346));
})();
var G__203276 = " ";
var G__203277 = (function (){var G__203347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203348 = "b-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203347,G__203348) : tailrecursion.hoplon.span.call(null,G__203347,G__203348));
})();
var G__203278 = "))\n          (";
var G__203279 = (function (){var G__203349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203350 = "search";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203349,G__203350) : tailrecursion.hoplon.span.call(null,G__203349,G__203350));
})();
var G__203280 = " ";
var G__203281 = (function (){var G__203351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203352 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203351,G__203352) : tailrecursion.hoplon.span.call(null,G__203351,G__203352));
})();
var G__203282 = " ";
var G__203283 = (function (){var G__203353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203354 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203353,G__203354) : tailrecursion.hoplon.span.call(null,G__203353,G__203354));
})();
var G__203284 = " ";
var G__203285 = (function (){var G__203355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203356 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203355,G__203356) : tailrecursion.hoplon.span.call(null,G__203355,G__203356));
})();
var G__203286 = ")\n          (";
var G__203287 = (function (){var G__203357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203358 = "and ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203357,G__203358) : tailrecursion.hoplon.span.call(null,G__203357,G__203358));
})();
var G__203288 = "(";
var G__203289 = (function (){var G__203359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203360 = "positive?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203359,G__203360) : tailrecursion.hoplon.span.call(null,G__203359,G__203360));
})();
var G__203290 = " ";
var G__203291 = (function (){var G__203361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203362 = "a-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203361,G__203362) : tailrecursion.hoplon.span.call(null,G__203361,G__203362));
})();
var G__203292 = ") (";
var G__203293 = (function (){var G__203363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203364 = "negative?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203363,G__203364) : tailrecursion.hoplon.span.call(null,G__203363,G__203364));
})();
var G__203294 = " ";
var G__203295 = (function (){var G__203365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203366 = "b-value";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203365,G__203366) : tailrecursion.hoplon.span.call(null,G__203365,G__203366));
})();
var G__203296 = "))\n          (";
var G__203297 = (function (){var G__203367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203368 = "search";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203367,G__203368) : tailrecursion.hoplon.span.call(null,G__203367,G__203368));
})();
var G__203298 = " ";
var G__203299 = (function (){var G__203369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203370 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203369,G__203370) : tailrecursion.hoplon.span.call(null,G__203369,G__203370));
})();
var G__203300 = " ";
var G__203301 = (function (){var G__203371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203372 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203371,G__203372) : tailrecursion.hoplon.span.call(null,G__203371,G__203372));
})();
var G__203302 = " ";
var G__203303 = (function (){var G__203373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203374 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203373,G__203374) : tailrecursion.hoplon.span.call(null,G__203373,G__203374));
})();
var G__203304 = ")\n          ";
var G__203305 = (function (){var G__203375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203376 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203375,G__203376) : tailrecursion.hoplon.span.call(null,G__203375,G__203376));
})();
var G__203306 = " (";
var G__203307 = (function (){var G__203377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203378 = "throw";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203377,G__203378) : tailrecursion.hoplon.span.call(null,G__203377,G__203378));
})();
var G__203308 = " (";
var G__203309 = (function (){var G__203379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203380 = "Exception.";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203379,G__203380) : tailrecursion.hoplon.span.call(null,G__203379,G__203380));
})();
var G__203310 = " ";
var G__203311 = (function (){var G__203381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #BA2121"], null);
var G__203382 = "\"Values are not of opposite sign\"";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203381,G__203382) : tailrecursion.hoplon.span.call(null,G__203381,G__203382));
})();
var G__203312 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71(G__203242,G__203243,G__203244,G__203245,G__203246,G__203247,G__203248,G__203249,G__203250,G__203251,G__203252,G__203253,G__203254,G__203255,G__203256,G__203257,G__203258,G__203259,G__203260,G__203261,G__203262,G__203263,G__203264,G__203265,G__203266,G__203267,G__203268,G__203269,G__203270,G__203271,G__203272,G__203273,G__203274,G__203275,G__203276,G__203277,G__203278,G__203279,G__203280,G__203281,G__203282,G__203283,G__203284,G__203285,G__203286,G__203287,G__203288,G__203289,G__203290,G__203291,G__203292,G__203293,G__203294,G__203295,G__203296,G__203297,G__203298,G__203299,G__203300,G__203301,G__203302,G__203303,G__203304,G__203305,G__203306,G__203307,G__203308,G__203309,G__203310,G__203311,G__203312) : tailrecursion.hoplon.pre.call(null,G__203242,G__203243,G__203244,G__203245,G__203246,G__203247,G__203248,G__203249,G__203250,G__203251,G__203252,G__203253,G__203254,G__203255,G__203256,G__203257,G__203258,G__203259,G__203260,G__203261,G__203262,G__203263,G__203264,G__203265,G__203266,G__203267,G__203268,G__203269,G__203270,G__203271,G__203272,G__203273,G__203274,G__203275,G__203276,G__203277,G__203278,G__203279,G__203280,G__203281,G__203282,G__203283,G__203284,G__203285,G__203286,G__203287,G__203288,G__203289,G__203290,G__203291,G__203292,G__203293,G__203294,G__203295,G__203296,G__203297,G__203298,G__203299,G__203300,G__203301,G__203302,G__203303,G__203304,G__203305,G__203306,G__203307,G__203308,G__203309,G__203310,G__203311,G__203312));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__203240,G__203241) : tailrecursion.hoplon.div.call(null,G__203240,G__203241));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__203239) : tailrecursion.hoplon.div.call(null,G__203239));
})(),(function (){var G__203383 = cljs.core.PersistentArrayMap.EMPTY;
var G__203384 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following example uses the half-interval method to approximate \\(\\pi\\) as the root between 2 and 4 of \\(\\sin x=0\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203383,G__203384) : tailrecursion.hoplon.markdown.para_node.call(null,G__203383,G__203384));
})(),(function (){var G__203428 = (function (){var G__203429 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__203430 = (function (){var G__203431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__203432 = "(";
var G__203433 = (function (){var G__203452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203453 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203452,G__203453) : tailrecursion.hoplon.span.call(null,G__203452,G__203453));
})();
var G__203434 = (function (){var G__203454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203455 = "sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203454,G__203455) : tailrecursion.hoplon.span.call(null,G__203454,G__203455));
})();
var G__203435 = " [";
var G__203436 = (function (){var G__203456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203457 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203456,G__203457) : tailrecursion.hoplon.span.call(null,G__203456,G__203457));
})();
var G__203437 = "] (";
var G__203438 = (function (){var G__203458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203459 = "Math/sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203458,G__203459) : tailrecursion.hoplon.span.call(null,G__203458,G__203459));
})();
var G__203439 = " ";
var G__203440 = (function (){var G__203460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203461 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203460,G__203461) : tailrecursion.hoplon.span.call(null,G__203460,G__203461));
})();
var G__203441 = "))\n(";
var G__203442 = (function (){var G__203462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203463 = "half-interval-method";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203462,G__203463) : tailrecursion.hoplon.span.call(null,G__203462,G__203463));
})();
var G__203443 = " ";
var G__203444 = (function (){var G__203464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203465 = "sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203464,G__203465) : tailrecursion.hoplon.span.call(null,G__203464,G__203465));
})();
var G__203445 = " ";
var G__203446 = (function (){var G__203466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203467 = "2.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203466,G__203467) : tailrecursion.hoplon.span.call(null,G__203466,G__203467));
})();
var G__203447 = " ";
var G__203448 = (function (){var G__203468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203469 = "4.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203468,G__203469) : tailrecursion.hoplon.span.call(null,G__203468,G__203469));
})();
var G__203449 = ")\n";
var G__203450 = (function (){var G__203470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203471 = "3.14111328125";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203470,G__203471) : tailrecursion.hoplon.span.call(null,G__203470,G__203471));
})();
var G__203451 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__203431,G__203432,G__203433,G__203434,G__203435,G__203436,G__203437,G__203438,G__203439,G__203440,G__203441,G__203442,G__203443,G__203444,G__203445,G__203446,G__203447,G__203448,G__203449,G__203450,G__203451) : tailrecursion.hoplon.pre.call(null,G__203431,G__203432,G__203433,G__203434,G__203435,G__203436,G__203437,G__203438,G__203439,G__203440,G__203441,G__203442,G__203443,G__203444,G__203445,G__203446,G__203447,G__203448,G__203449,G__203450,G__203451));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__203429,G__203430) : tailrecursion.hoplon.div.call(null,G__203429,G__203430));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__203428) : tailrecursion.hoplon.div.call(null,G__203428));
})(),(function (){var G__203472 = cljs.core.PersistentArrayMap.EMPTY;
var G__203473 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Here is another example, using the half-interval method to search for a root of the equation \\(x^3-2x-3=0\\) between 1 and 2:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203472,G__203473) : tailrecursion.hoplon.markdown.para_node.call(null,G__203472,G__203473));
})(),(function (){var G__203536 = (function (){var G__203537 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__203538 = (function (){var G__203539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__203540 = "(";
var G__203541 = (function (){var G__203569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203570 = "half-interval-method";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203569,G__203570) : tailrecursion.hoplon.span.call(null,G__203569,G__203570));
})();
var G__203542 = " (";
var G__203543 = (function (){var G__203571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203572 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203571,G__203572) : tailrecursion.hoplon.span.call(null,G__203571,G__203572));
})();
var G__203544 = "[";
var G__203545 = (function (){var G__203573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203574 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203573,G__203574) : tailrecursion.hoplon.span.call(null,G__203573,G__203574));
})();
var G__203546 = "] (";
var G__203547 = (function (){var G__203575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203576 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203575,G__203576) : tailrecursion.hoplon.span.call(null,G__203575,G__203576));
})();
var G__203548 = "(";
var G__203549 = (function (){var G__203577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203578 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203577,G__203578) : tailrecursion.hoplon.span.call(null,G__203577,G__203578));
})();
var G__203550 = (function (){var G__203579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203580 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203579,G__203580) : tailrecursion.hoplon.span.call(null,G__203579,G__203580));
})();
var G__203551 = " ";
var G__203552 = (function (){var G__203581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203582 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203581,G__203582) : tailrecursion.hoplon.span.call(null,G__203581,G__203582));
})();
var G__203553 = " ";
var G__203554 = (function (){var G__203583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203584 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203583,G__203584) : tailrecursion.hoplon.span.call(null,G__203583,G__203584));
})();
var G__203555 = ") (";
var G__203556 = (function (){var G__203585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203586 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203585,G__203586) : tailrecursion.hoplon.span.call(null,G__203585,G__203586));
})();
var G__203557 = (function (){var G__203587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203588 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203587,G__203588) : tailrecursion.hoplon.span.call(null,G__203587,G__203588));
})();
var G__203558 = " ";
var G__203559 = (function (){var G__203589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203590 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203589,G__203590) : tailrecursion.hoplon.span.call(null,G__203589,G__203590));
})();
var G__203560 = ") ";
var G__203561 = (function (){var G__203591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203592 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203591,G__203592) : tailrecursion.hoplon.span.call(null,G__203591,G__203592));
})();
var G__203562 = "))\n                      ";
var G__203563 = (function (){var G__203593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203594 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203593,G__203594) : tailrecursion.hoplon.span.call(null,G__203593,G__203594));
})();
var G__203564 = "\n                      ";
var G__203565 = (function (){var G__203595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203596 = "2.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203595,G__203596) : tailrecursion.hoplon.span.call(null,G__203595,G__203596));
})();
var G__203566 = ")\n";
var G__203567 = (function (){var G__203597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203598 = "1.89306640625";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203597,G__203598) : tailrecursion.hoplon.span.call(null,G__203597,G__203598));
})();
var G__203568 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$30(G__203539,G__203540,G__203541,G__203542,G__203543,G__203544,G__203545,G__203546,G__203547,G__203548,G__203549,G__203550,G__203551,G__203552,G__203553,G__203554,G__203555,G__203556,G__203557,G__203558,G__203559,G__203560,G__203561,G__203562,G__203563,G__203564,G__203565,G__203566,G__203567,G__203568) : tailrecursion.hoplon.pre.call(null,G__203539,G__203540,G__203541,G__203542,G__203543,G__203544,G__203545,G__203546,G__203547,G__203548,G__203549,G__203550,G__203551,G__203552,G__203553,G__203554,G__203555,G__203556,G__203557,G__203558,G__203559,G__203560,G__203561,G__203562,G__203563,G__203564,G__203565,G__203566,G__203567,G__203568));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__203537,G__203538) : tailrecursion.hoplon.div.call(null,G__203537,G__203538));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__203536) : tailrecursion.hoplon.div.call(null,G__203536));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202398;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202397;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_202396;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_202395;
}})()], 0));
var G__194650 = "";
var G__194651 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Finding Fixed Points of Functions"], null),(function (){var _STAR_references_STAR_203599 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203600 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_203601 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_203602 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__203603 = cljs.core.PersistentArrayMap.EMPTY;
var G__203604 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A number \\(x\\) is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["fixed point"], null)], 0))," of a function \\(f\\) if \\(x\\) satisfies the equation \\(f(x)=x\\). For some functions \\(f\\) we can locate a fixed point by beginning with an initial guess and applying \\(f\\) repeatedly,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203603,G__203604) : tailrecursion.hoplon.markdown.para_node.call(null,G__203603,G__203604));
})(),(function (){var G__203605 = cljs.core.PersistentArrayMap.EMPTY;
var G__203606 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$f(x),f(f(x)),f(f(f(x))),",(function (){var G__203607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__203608 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__203607,G__203608) : tailrecursion.hoplon.markdown.simple_node.call(null,G__203607,G__203608));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203605,G__203606) : tailrecursion.hoplon.markdown.para_node.call(null,G__203605,G__203606));
})(),(function (){var G__203609 = cljs.core.PersistentArrayMap.EMPTY;
var G__203610 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["until the value does not change very much. Using this idea, we can devise a procedure ",(function (){var G__203611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fixed-point"], null);
var G__203612 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203611,G__203612) : tailrecursion.hoplon.markdown.code_node.call(null,G__203611,G__203612));
})()," that takes as inputs a function and an initial guess and produces an approximation to a fixed point of the function. We apply the function repeatedly until we find two successive values whose difference is less than some prescribed tolerance:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203609,G__203610) : tailrecursion.hoplon.markdown.para_node.call(null,G__203609,G__203610));
})(),(function (){var G__203742 = (function (){var G__203743 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__203744 = (function (){var G__203745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__203746 = "(";
var G__203747 = (function (){var G__203808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203809 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203808,G__203809) : tailrecursion.hoplon.span.call(null,G__203808,G__203809));
})();
var G__203748 = (function (){var G__203810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203811 = "tolerance";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203810,G__203811) : tailrecursion.hoplon.span.call(null,G__203810,G__203811));
})();
var G__203749 = " ";
var G__203750 = (function (){var G__203812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203813 = "0.00001";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203812,G__203813) : tailrecursion.hoplon.span.call(null,G__203812,G__203813));
})();
var G__203751 = ")\n(";
var G__203752 = (function (){var G__203814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203815 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203814,G__203815) : tailrecursion.hoplon.span.call(null,G__203814,G__203815));
})();
var G__203753 = (function (){var G__203816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203817 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203816,G__203817) : tailrecursion.hoplon.span.call(null,G__203816,G__203817));
})();
var G__203754 = " [";
var G__203755 = (function (){var G__203818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203819 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203818,G__203819) : tailrecursion.hoplon.span.call(null,G__203818,G__203819));
})();
var G__203756 = " ";
var G__203757 = (function (){var G__203820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203821 = "first-guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203820,G__203821) : tailrecursion.hoplon.span.call(null,G__203820,G__203821));
})();
var G__203758 = "]\n  (";
var G__203759 = (function (){var G__203822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203823 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203822,G__203823) : tailrecursion.hoplon.span.call(null,G__203822,G__203823));
})();
var G__203760 = "[";
var G__203761 = (function (){var G__203824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203825 = "close-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203824,G__203825) : tailrecursion.hoplon.span.call(null,G__203824,G__203825));
})();
var G__203762 = " (";
var G__203763 = (function (){var G__203826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203827 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203826,G__203827) : tailrecursion.hoplon.span.call(null,G__203826,G__203827));
})();
var G__203764 = "[";
var G__203765 = (function (){var G__203828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203829 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203828,G__203829) : tailrecursion.hoplon.span.call(null,G__203828,G__203829));
})();
var G__203766 = " ";
var G__203767 = (function (){var G__203830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203831 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203830,G__203831) : tailrecursion.hoplon.span.call(null,G__203830,G__203831));
})();
var G__203768 = "]\n                        (";
var G__203769 = (function (){var G__203832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203833 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203832,G__203833) : tailrecursion.hoplon.span.call(null,G__203832,G__203833));
})();
var G__203770 = "(";
var G__203771 = (function (){var G__203834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203835 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203834,G__203835) : tailrecursion.hoplon.span.call(null,G__203834,G__203835));
})();
var G__203772 = " (";
var G__203773 = (function (){var G__203836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203837 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203836,G__203837) : tailrecursion.hoplon.span.call(null,G__203836,G__203837));
})();
var G__203774 = (function (){var G__203838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203839 = "v1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203838,G__203839) : tailrecursion.hoplon.span.call(null,G__203838,G__203839));
})();
var G__203775 = " ";
var G__203776 = (function (){var G__203840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203841 = "v2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203840,G__203841) : tailrecursion.hoplon.span.call(null,G__203840,G__203841));
})();
var G__203777 = ")) ";
var G__203778 = (function (){var G__203842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203843 = "tolerance";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203842,G__203843) : tailrecursion.hoplon.span.call(null,G__203842,G__203843));
})();
var G__203779 = "))]\n    (";
var G__203780 = (function (){var G__203844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203845 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203844,G__203845) : tailrecursion.hoplon.span.call(null,G__203844,G__203845));
})();
var G__203781 = "[";
var G__203782 = (function (){var G__203846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203847 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203846,G__203847) : tailrecursion.hoplon.span.call(null,G__203846,G__203847));
})();
var G__203783 = " ";
var G__203784 = (function (){var G__203848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203849 = "first-guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203848,G__203849) : tailrecursion.hoplon.span.call(null,G__203848,G__203849));
})();
var G__203785 = "]\n      (";
var G__203786 = (function (){var G__203850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203851 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203850,G__203851) : tailrecursion.hoplon.span.call(null,G__203850,G__203851));
})();
var G__203787 = "[";
var G__203788 = (function (){var G__203852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__203853 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203852,G__203853) : tailrecursion.hoplon.span.call(null,G__203852,G__203853));
})();
var G__203789 = "(";
var G__203790 = (function (){var G__203854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203855 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203854,G__203855) : tailrecursion.hoplon.span.call(null,G__203854,G__203855));
})();
var G__203791 = " ";
var G__203792 = (function (){var G__203856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203857 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203856,G__203857) : tailrecursion.hoplon.span.call(null,G__203856,G__203857));
})();
var G__203793 = ")]\n        (";
var G__203794 = (function (){var G__203858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203859 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203858,G__203859) : tailrecursion.hoplon.span.call(null,G__203858,G__203859));
})();
var G__203795 = "(";
var G__203796 = (function (){var G__203860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203861 = "close-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203860,G__203861) : tailrecursion.hoplon.span.call(null,G__203860,G__203861));
})();
var G__203797 = " ";
var G__203798 = (function (){var G__203862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203863 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203862,G__203863) : tailrecursion.hoplon.span.call(null,G__203862,G__203863));
})();
var G__203799 = " ";
var G__203800 = (function (){var G__203864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203865 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203864,G__203865) : tailrecursion.hoplon.span.call(null,G__203864,G__203865));
})();
var G__203801 = ")\n            ";
var G__203802 = (function (){var G__203866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203867 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203866,G__203867) : tailrecursion.hoplon.span.call(null,G__203866,G__203867));
})();
var G__203803 = "\n            (";
var G__203804 = (function (){var G__203868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203869 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203868,G__203869) : tailrecursion.hoplon.span.call(null,G__203868,G__203869));
})();
var G__203805 = " ";
var G__203806 = (function (){var G__203870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203871 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203870,G__203871) : tailrecursion.hoplon.span.call(null,G__203870,G__203871));
})();
var G__203807 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$63(G__203745,G__203746,G__203747,G__203748,G__203749,G__203750,G__203751,G__203752,G__203753,G__203754,G__203755,G__203756,G__203757,G__203758,G__203759,G__203760,G__203761,G__203762,G__203763,G__203764,G__203765,G__203766,G__203767,G__203768,G__203769,G__203770,G__203771,G__203772,G__203773,G__203774,G__203775,G__203776,G__203777,G__203778,G__203779,G__203780,G__203781,G__203782,G__203783,G__203784,G__203785,G__203786,G__203787,G__203788,G__203789,G__203790,G__203791,G__203792,G__203793,G__203794,G__203795,G__203796,G__203797,G__203798,G__203799,G__203800,G__203801,G__203802,G__203803,G__203804,G__203805,G__203806,G__203807) : tailrecursion.hoplon.pre.call(null,G__203745,G__203746,G__203747,G__203748,G__203749,G__203750,G__203751,G__203752,G__203753,G__203754,G__203755,G__203756,G__203757,G__203758,G__203759,G__203760,G__203761,G__203762,G__203763,G__203764,G__203765,G__203766,G__203767,G__203768,G__203769,G__203770,G__203771,G__203772,G__203773,G__203774,G__203775,G__203776,G__203777,G__203778,G__203779,G__203780,G__203781,G__203782,G__203783,G__203784,G__203785,G__203786,G__203787,G__203788,G__203789,G__203790,G__203791,G__203792,G__203793,G__203794,G__203795,G__203796,G__203797,G__203798,G__203799,G__203800,G__203801,G__203802,G__203803,G__203804,G__203805,G__203806,G__203807));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__203743,G__203744) : tailrecursion.hoplon.div.call(null,G__203743,G__203744));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__203742) : tailrecursion.hoplon.div.call(null,G__203742));
})(),(function (){var G__203872 = cljs.core.PersistentArrayMap.EMPTY;
var G__203873 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, we can use this method to approximate the fixed point of the cosine function, starting with 1 as an initial approximation.",(function (){var G__203874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__203875 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Try this during a boring lecture: Set your calculator to radians mode and then repeatedly press the ",(function (){var G__203876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cos"], null);
var G__203877 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__203876,G__203877) : tailrecursion.hoplon.markdown.code_node.call(null,G__203876,G__203877));
})()," button until you obtain the fixed point."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__203874,G__203875) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__203874,G__203875));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203872,G__203873) : tailrecursion.hoplon.markdown.para_node.call(null,G__203872,G__203873));
})(),(function (){var G__203917 = (function (){var G__203918 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__203919 = (function (){var G__203920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__203921 = "(";
var G__203922 = (function (){var G__203939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__203940 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203939,G__203940) : tailrecursion.hoplon.span.call(null,G__203939,G__203940));
})();
var G__203923 = (function (){var G__203941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203942 = "cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203941,G__203942) : tailrecursion.hoplon.span.call(null,G__203941,G__203942));
})();
var G__203924 = " [";
var G__203925 = (function (){var G__203943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203944 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203943,G__203944) : tailrecursion.hoplon.span.call(null,G__203943,G__203944));
})();
var G__203926 = "] (";
var G__203927 = (function (){var G__203945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203946 = "Math/cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203945,G__203946) : tailrecursion.hoplon.span.call(null,G__203945,G__203946));
})();
var G__203928 = " ";
var G__203929 = (function (){var G__203947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203948 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203947,G__203948) : tailrecursion.hoplon.span.call(null,G__203947,G__203948));
})();
var G__203930 = "))\n(";
var G__203931 = (function (){var G__203949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__203950 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203949,G__203950) : tailrecursion.hoplon.span.call(null,G__203949,G__203950));
})();
var G__203932 = " ";
var G__203933 = (function (){var G__203951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203952 = "cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203951,G__203952) : tailrecursion.hoplon.span.call(null,G__203951,G__203952));
})();
var G__203934 = " ";
var G__203935 = (function (){var G__203953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__203954 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203953,G__203954) : tailrecursion.hoplon.span.call(null,G__203953,G__203954));
})();
var G__203936 = ")\n";
var G__203937 = (function (){var G__203955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__203956 = ".7390822985224023";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__203955,G__203956) : tailrecursion.hoplon.span.call(null,G__203955,G__203956));
})();
var G__203938 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__203920,G__203921,G__203922,G__203923,G__203924,G__203925,G__203926,G__203927,G__203928,G__203929,G__203930,G__203931,G__203932,G__203933,G__203934,G__203935,G__203936,G__203937,G__203938) : tailrecursion.hoplon.pre.call(null,G__203920,G__203921,G__203922,G__203923,G__203924,G__203925,G__203926,G__203927,G__203928,G__203929,G__203930,G__203931,G__203932,G__203933,G__203934,G__203935,G__203936,G__203937,G__203938));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__203918,G__203919) : tailrecursion.hoplon.div.call(null,G__203918,G__203919));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__203917) : tailrecursion.hoplon.div.call(null,G__203917));
})(),(function (){var G__203957 = cljs.core.PersistentArrayMap.EMPTY;
var G__203958 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, we can find a solution to the equation \\(y= \\sin y+\\cos y\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__203957,G__203958) : tailrecursion.hoplon.markdown.para_node.call(null,G__203957,G__203958));
})(),(function (){var G__204003 = (function (){var G__204004 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__204005 = (function (){var G__204006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__204007 = "(";
var G__204008 = (function (){var G__204028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204029 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204028,G__204029) : tailrecursion.hoplon.span.call(null,G__204028,G__204029));
})();
var G__204009 = " (";
var G__204010 = (function (){var G__204030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204031 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204030,G__204031) : tailrecursion.hoplon.span.call(null,G__204030,G__204031));
})();
var G__204011 = "[";
var G__204012 = (function (){var G__204032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204033 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204032,G__204033) : tailrecursion.hoplon.span.call(null,G__204032,G__204033));
})();
var G__204013 = "] (";
var G__204014 = (function (){var G__204034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204035 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204034,G__204035) : tailrecursion.hoplon.span.call(null,G__204034,G__204035));
})();
var G__204015 = "(";
var G__204016 = (function (){var G__204036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204037 = "sin";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204036,G__204037) : tailrecursion.hoplon.span.call(null,G__204036,G__204037));
})();
var G__204017 = " ";
var G__204018 = (function (){var G__204038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204039 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204038,G__204039) : tailrecursion.hoplon.span.call(null,G__204038,G__204039));
})();
var G__204019 = ") (";
var G__204020 = (function (){var G__204040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204041 = "cos";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204040,G__204041) : tailrecursion.hoplon.span.call(null,G__204040,G__204041));
})();
var G__204021 = " ";
var G__204022 = (function (){var G__204042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204043 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204042,G__204043) : tailrecursion.hoplon.span.call(null,G__204042,G__204043));
})();
var G__204023 = ")))\n             ";
var G__204024 = (function (){var G__204044 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204045 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204044,G__204045) : tailrecursion.hoplon.span.call(null,G__204044,G__204045));
})();
var G__204025 = ")\n";
var G__204026 = (function (){var G__204046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204047 = "1.2587315962971173";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204046,G__204047) : tailrecursion.hoplon.span.call(null,G__204046,G__204047));
})();
var G__204027 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__204006,G__204007,G__204008,G__204009,G__204010,G__204011,G__204012,G__204013,G__204014,G__204015,G__204016,G__204017,G__204018,G__204019,G__204020,G__204021,G__204022,G__204023,G__204024,G__204025,G__204026,G__204027) : tailrecursion.hoplon.pre.call(null,G__204006,G__204007,G__204008,G__204009,G__204010,G__204011,G__204012,G__204013,G__204014,G__204015,G__204016,G__204017,G__204018,G__204019,G__204020,G__204021,G__204022,G__204023,G__204024,G__204025,G__204026,G__204027));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__204004,G__204005) : tailrecursion.hoplon.div.call(null,G__204004,G__204005));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__204003) : tailrecursion.hoplon.div.call(null,G__204003));
})(),(function (){var G__204048 = cljs.core.PersistentArrayMap.EMPTY;
var G__204049 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The fixed-point process is reminiscent of the process we used for finding square roots in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/7/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.7"], null)], 0)),". Both are based on the idea of repeatedly improving a guess until the result satisfies some criterion. In fact, we can readily formulate the square-root computation as a fixed-point search. Computing the square root of some number \\(x\\) requires finding a \\(y\\) such that \\(y^2=x\\). Putting this equation into the equivalent form \\(y=x/y\\), we recognize that we are looking for a fixed point of the function",(function (){var G__204050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__204051 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["\\(\\to\\) (pronounced ",(function (){var G__204052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__204053 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["maps to"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__204052,G__204053) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__204052,G__204053));
})(),") is the mathematician way of writing ",(function (){var G__204054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"lambda"], null);
var G__204055 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204054,G__204055) : tailrecursion.hoplon.markdown.code_node.call(null,G__204054,G__204055));
})()," (or ",(function (){var G__204056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__204057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204056,G__204057) : tailrecursion.hoplon.markdown.code_node.call(null,G__204056,G__204057));
})(),"). \\(y\\to x/y\\) means ",(function (){var G__204058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fn [y] (/ x y))"], null);
var G__204059 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204058,G__204059) : tailrecursion.hoplon.markdown.code_node.call(null,G__204058,G__204059));
})(),", that is, the function whose value at \\(y\\) is \\(x/y\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__204050,G__204051) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__204050,G__204051));
})()," \\(y\\to x/y\\), and we can therefore try to compute square roots as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204048,G__204049) : tailrecursion.hoplon.markdown.para_node.call(null,G__204048,G__204049));
})(),(function (){var G__204102 = (function (){var G__204103 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__204104 = (function (){var G__204105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__204106 = "(";
var G__204107 = (function (){var G__204125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204126 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204125,G__204126) : tailrecursion.hoplon.span.call(null,G__204125,G__204126));
})();
var G__204108 = (function (){var G__204127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204128 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204127,G__204128) : tailrecursion.hoplon.span.call(null,G__204127,G__204128));
})();
var G__204109 = " [";
var G__204110 = (function (){var G__204129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204130 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204129,G__204130) : tailrecursion.hoplon.span.call(null,G__204129,G__204130));
})();
var G__204111 = "]\n  (";
var G__204112 = (function (){var G__204131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204132 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204131,G__204132) : tailrecursion.hoplon.span.call(null,G__204131,G__204132));
})();
var G__204113 = " (";
var G__204114 = (function (){var G__204133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204134 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204133,G__204134) : tailrecursion.hoplon.span.call(null,G__204133,G__204134));
})();
var G__204115 = "[";
var G__204116 = (function (){var G__204135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204136 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204135,G__204136) : tailrecursion.hoplon.span.call(null,G__204135,G__204136));
})();
var G__204117 = "] (";
var G__204118 = (function (){var G__204137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204138 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204137,G__204138) : tailrecursion.hoplon.span.call(null,G__204137,G__204138));
})();
var G__204119 = (function (){var G__204139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204140 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204139,G__204140) : tailrecursion.hoplon.span.call(null,G__204139,G__204140));
})();
var G__204120 = " ";
var G__204121 = (function (){var G__204141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204142 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204141,G__204142) : tailrecursion.hoplon.span.call(null,G__204141,G__204142));
})();
var G__204122 = "))\n               ";
var G__204123 = (function (){var G__204143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204144 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204143,G__204144) : tailrecursion.hoplon.span.call(null,G__204143,G__204144));
})();
var G__204124 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__204105,G__204106,G__204107,G__204108,G__204109,G__204110,G__204111,G__204112,G__204113,G__204114,G__204115,G__204116,G__204117,G__204118,G__204119,G__204120,G__204121,G__204122,G__204123,G__204124) : tailrecursion.hoplon.pre.call(null,G__204105,G__204106,G__204107,G__204108,G__204109,G__204110,G__204111,G__204112,G__204113,G__204114,G__204115,G__204116,G__204117,G__204118,G__204119,G__204120,G__204121,G__204122,G__204123,G__204124));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__204103,G__204104) : tailrecursion.hoplon.div.call(null,G__204103,G__204104));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__204102) : tailrecursion.hoplon.div.call(null,G__204102));
})(),(function (){var G__204145 = cljs.core.PersistentArrayMap.EMPTY;
var G__204146 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, this fixed-point search does not converge. Consider an initial guess \\(y_1\\). The next guess is \\(y_2= x/y_1\\) and the next guess is \\(y_3 = x/y_2 = x/(x/y_1) = y_1\\). This results in an infinite loop in which the two guesses \\(y_1\\) and \\(y_2\\) repeat over and over, oscillating about the answer."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204145,G__204146) : tailrecursion.hoplon.markdown.para_node.call(null,G__204145,G__204146));
})(),(function (){var G__204147 = cljs.core.PersistentArrayMap.EMPTY;
var G__204148 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One way to control such oscillations is to prevent the guesses from changing so much. Since the answer is always between our guess \\(y\\) and \\(x/y\\), we can make a new guess that is not as far from \\(y\\) as \\(x/y\\) by averaging \\(y\\) with \\(x/y\\), so that the next guess after \\(y\\) is \\((1/2)(y + x/y)\\) instead of \\(x/y\\). The process of making such a sequence of guesses is simply the process of looking for a fixed point of \\(y\\to (1/2)(y + x/y)\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204147,G__204148) : tailrecursion.hoplon.markdown.para_node.call(null,G__204147,G__204148));
})(),(function (){var G__204199 = (function (){var G__204200 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__204201 = (function (){var G__204202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__204203 = "(";
var G__204204 = (function (){var G__204226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204227 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204226,G__204227) : tailrecursion.hoplon.span.call(null,G__204226,G__204227));
})();
var G__204205 = (function (){var G__204228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204229 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204228,G__204229) : tailrecursion.hoplon.span.call(null,G__204228,G__204229));
})();
var G__204206 = " [";
var G__204207 = (function (){var G__204230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204231 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204230,G__204231) : tailrecursion.hoplon.span.call(null,G__204230,G__204231));
})();
var G__204208 = "]\n  (";
var G__204209 = (function (){var G__204232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204233 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204232,G__204233) : tailrecursion.hoplon.span.call(null,G__204232,G__204233));
})();
var G__204210 = " (";
var G__204211 = (function (){var G__204234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204235 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204234,G__204235) : tailrecursion.hoplon.span.call(null,G__204234,G__204235));
})();
var G__204212 = "[";
var G__204213 = (function (){var G__204236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204237 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204236,G__204237) : tailrecursion.hoplon.span.call(null,G__204236,G__204237));
})();
var G__204214 = "] (";
var G__204215 = (function (){var G__204238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204239 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204238,G__204239) : tailrecursion.hoplon.span.call(null,G__204238,G__204239));
})();
var G__204216 = " ";
var G__204217 = (function (){var G__204240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204241 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204240,G__204241) : tailrecursion.hoplon.span.call(null,G__204240,G__204241));
})();
var G__204218 = " (";
var G__204219 = (function (){var G__204242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204243 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204242,G__204243) : tailrecursion.hoplon.span.call(null,G__204242,G__204243));
})();
var G__204220 = (function (){var G__204244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204245 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204244,G__204245) : tailrecursion.hoplon.span.call(null,G__204244,G__204245));
})();
var G__204221 = " ";
var G__204222 = (function (){var G__204246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204247 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204246,G__204247) : tailrecursion.hoplon.span.call(null,G__204246,G__204247));
})();
var G__204223 = ")))\n               ";
var G__204224 = (function (){var G__204248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204249 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204248,G__204249) : tailrecursion.hoplon.span.call(null,G__204248,G__204249));
})();
var G__204225 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$24(G__204202,G__204203,G__204204,G__204205,G__204206,G__204207,G__204208,G__204209,G__204210,G__204211,G__204212,G__204213,G__204214,G__204215,G__204216,G__204217,G__204218,G__204219,G__204220,G__204221,G__204222,G__204223,G__204224,G__204225) : tailrecursion.hoplon.pre.call(null,G__204202,G__204203,G__204204,G__204205,G__204206,G__204207,G__204208,G__204209,G__204210,G__204211,G__204212,G__204213,G__204214,G__204215,G__204216,G__204217,G__204218,G__204219,G__204220,G__204221,G__204222,G__204223,G__204224,G__204225));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__204200,G__204201) : tailrecursion.hoplon.div.call(null,G__204200,G__204201));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__204199) : tailrecursion.hoplon.div.call(null,G__204199));
})(),(function (){var G__204250 = cljs.core.PersistentArrayMap.EMPTY;
var G__204251 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(Note that \\(y = (1/2)(y + x/y)\\) is a simple transformation of the equation \\(y = x/y\\); to derive it, add \\(y\\) to both sides of the equation and divide by 2.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204250,G__204251) : tailrecursion.hoplon.markdown.para_node.call(null,G__204250,G__204251));
})(),(function (){var G__204252 = cljs.core.PersistentArrayMap.EMPTY;
var G__204253 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With this modification, the square-root procedure works. In fact, if we unravel the definitions, we can see that the sequence of approximations to the square root generated here is precisely the same as the one generated by our original square-root procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/7/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.7"], null)], 0)),". This approach of averaging successive approximations to a solution, a technique we that we call ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["average damping"], null)], 0)),", often aids the convergence of fixed-point searches."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204252,G__204253) : tailrecursion.hoplon.markdown.para_node.call(null,G__204252,G__204253));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203602;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203601;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_203600;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_203599;
}})()], 0));
var G__194652 = "";
var G__194653 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_204254 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204255 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_204256 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204257 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__204258 = cljs.core.PersistentArrayMap.EMPTY;
var G__204259 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Show that the golden ratio \\(\\phi\\) ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0))," is a fixed point of the transformation \\(x\\to 1+1/x\\), and use this fact to compute \\(\\phi\\) by means of the ",(function (){var G__204260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fixed-point"], null);
var G__204261 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204260,G__204261) : tailrecursion.hoplon.markdown.code_node.call(null,G__204260,G__204261));
})()," procedure."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204258,G__204259) : tailrecursion.hoplon.markdown.para_node.call(null,G__204258,G__204259));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204257;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204256;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204255;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204254;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_204262 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204263 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_204264 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204265 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__204266 = cljs.core.PersistentArrayMap.EMPTY;
var G__204267 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If we define \\(f(x)=1+1/x\\), then a fixed point of \\(f\\) would be one where \\(x=1+1/x\\). But then"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204266,G__204267) : tailrecursion.hoplon.markdown.para_node.call(null,G__204266,G__204267));
})(),(function (){var G__204268 = cljs.core.PersistentArrayMap.EMPTY;
var G__204269 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  x=&1+1/x \\\\  x^2=&x+1 \\end{align*} $$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204268,G__204269) : tailrecursion.hoplon.markdown.para_node.call(null,G__204268,G__204269));
})(),(function (){var G__204270 = cljs.core.PersistentArrayMap.EMPTY;
var G__204271 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: the golden ratio \\(\\phi\\), is  \\(\\lim_{x\\to\\infty}\\frac{Fib(x+1)}{Fib(x)}\\), which can also be  seen as a fixed point of the transformation,  \\(\\frac{a}{b}\\to\\frac{a+b}{a}\\). So, setting"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204270,G__204271) : tailrecursion.hoplon.markdown.para_node.call(null,G__204270,G__204271));
})(),(function (){var G__204272 = cljs.core.PersistentArrayMap.EMPTY;
var G__204273 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}\\frac{a}{b}=&\\frac{a+b}{a} \\\\\\frac{a}{b}=&\\frac{a}{a}+\\frac{b}{a} \\\\\\phi=&1+1/\\phi\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204272,G__204273) : tailrecursion.hoplon.markdown.para_node.call(null,G__204272,G__204273));
})(),(function (){var G__204274 = cljs.core.PersistentArrayMap.EMPTY;
var G__204275 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since that is the same equation we started out with, we",(function (){var G__204276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__204277 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__204276,G__204277) : tailrecursion.hoplon.markdown.simple_node.call(null,G__204276,G__204277));
})(),"re done."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204274,G__204275) : tailrecursion.hoplon.markdown.para_node.call(null,G__204274,G__204275));
})(),(function (){var G__204278 = cljs.core.PersistentArrayMap.EMPTY;
var G__204279 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now to compute it using the ",(function (){var G__204280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fixed-point"], null);
var G__204281 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204280,G__204281) : tailrecursion.hoplon.markdown.code_node.call(null,G__204280,G__204281));
})()," procedure."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204278,G__204279) : tailrecursion.hoplon.markdown.para_node.call(null,G__204278,G__204279));
})(),(function (){var G__204320 = (function (){var G__204321 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__204322 = (function (){var G__204323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__204324 = "(";
var G__204325 = (function (){var G__204341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204342 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204341,G__204342) : tailrecursion.hoplon.span.call(null,G__204341,G__204342));
})();
var G__204326 = " (";
var G__204327 = (function (){var G__204343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204344 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204343,G__204344) : tailrecursion.hoplon.span.call(null,G__204343,G__204344));
})();
var G__204328 = "[";
var G__204329 = (function (){var G__204345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204346 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204345,G__204346) : tailrecursion.hoplon.span.call(null,G__204345,G__204346));
})();
var G__204330 = "] (";
var G__204331 = (function (){var G__204347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204348 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204347,G__204348) : tailrecursion.hoplon.span.call(null,G__204347,G__204348));
})();
var G__204332 = (function (){var G__204349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204350 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204349,G__204350) : tailrecursion.hoplon.span.call(null,G__204349,G__204350));
})();
var G__204333 = " (";
var G__204334 = (function (){var G__204351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204352 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204351,G__204352) : tailrecursion.hoplon.span.call(null,G__204351,G__204352));
})();
var G__204335 = (function (){var G__204353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204354 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204353,G__204354) : tailrecursion.hoplon.span.call(null,G__204353,G__204354));
})();
var G__204336 = " ";
var G__204337 = (function (){var G__204355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204356 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204355,G__204356) : tailrecursion.hoplon.span.call(null,G__204355,G__204356));
})();
var G__204338 = "))) ";
var G__204339 = (function (){var G__204357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204358 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204357,G__204358) : tailrecursion.hoplon.span.call(null,G__204357,G__204358));
})();
var G__204340 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__204323,G__204324,G__204325,G__204326,G__204327,G__204328,G__204329,G__204330,G__204331,G__204332,G__204333,G__204334,G__204335,G__204336,G__204337,G__204338,G__204339,G__204340) : tailrecursion.hoplon.pre.call(null,G__204323,G__204324,G__204325,G__204326,G__204327,G__204328,G__204329,G__204330,G__204331,G__204332,G__204333,G__204334,G__204335,G__204336,G__204337,G__204338,G__204339,G__204340));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__204321,G__204322) : tailrecursion.hoplon.div.call(null,G__204321,G__204322));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__204320) : tailrecursion.hoplon.div.call(null,G__204320));
})(),(function (){var G__204359 = cljs.core.PersistentArrayMap.EMPTY;
var G__204360 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or, using Clojure",(function (){var G__204361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__204362 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__204361,G__204362) : tailrecursion.hoplon.markdown.simple_node.call(null,G__204361,G__204362));
})(),"s shorter syntax,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204359,G__204360) : tailrecursion.hoplon.markdown.para_node.call(null,G__204359,G__204360));
})(),(function (){var G__204397 = (function (){var G__204398 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__204399 = (function (){var G__204400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__204401 = "(";
var G__204402 = (function (){var G__204416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204417 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204416,G__204417) : tailrecursion.hoplon.span.call(null,G__204416,G__204417));
})();
var G__204403 = " ";
var G__204404 = (function (){var G__204418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204419 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204418,G__204419) : tailrecursion.hoplon.span.call(null,G__204418,G__204419));
})();
var G__204405 = "(";
var G__204406 = (function (){var G__204420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204421 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204420,G__204421) : tailrecursion.hoplon.span.call(null,G__204420,G__204421));
})();
var G__204407 = (function (){var G__204422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204423 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204422,G__204423) : tailrecursion.hoplon.span.call(null,G__204422,G__204423));
})();
var G__204408 = " (";
var G__204409 = (function (){var G__204424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204425 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204424,G__204425) : tailrecursion.hoplon.span.call(null,G__204424,G__204425));
})();
var G__204410 = (function (){var G__204426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204427 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204426,G__204427) : tailrecursion.hoplon.span.call(null,G__204426,G__204427));
})();
var G__204411 = " ";
var G__204412 = (function (){var G__204428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204429 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204428,G__204429) : tailrecursion.hoplon.span.call(null,G__204428,G__204429));
})();
var G__204413 = ")) ";
var G__204414 = (function (){var G__204430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204431 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204430,G__204431) : tailrecursion.hoplon.span.call(null,G__204430,G__204431));
})();
var G__204415 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$16(G__204400,G__204401,G__204402,G__204403,G__204404,G__204405,G__204406,G__204407,G__204408,G__204409,G__204410,G__204411,G__204412,G__204413,G__204414,G__204415) : tailrecursion.hoplon.pre.call(null,G__204400,G__204401,G__204402,G__204403,G__204404,G__204405,G__204406,G__204407,G__204408,G__204409,G__204410,G__204411,G__204412,G__204413,G__204414,G__204415));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__204398,G__204399) : tailrecursion.hoplon.div.call(null,G__204398,G__204399));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__204397) : tailrecursion.hoplon.div.call(null,G__204397));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204265;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204264;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204263;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204262;
}})()], 0))], 0)),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_204432 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204433 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_204434 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204435 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__204436 = cljs.core.PersistentArrayMap.EMPTY;
var G__204437 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modify ",(function (){var G__204438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fixed-point"], null);
var G__204439 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204438,G__204439) : tailrecursion.hoplon.markdown.code_node.call(null,G__204438,G__204439));
})()," so that it prints the sequence of approximations it generates, using the ",(function (){var G__204440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"println"], null);
var G__204441 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204440,G__204441) : tailrecursion.hoplon.markdown.code_node.call(null,G__204440,G__204441));
})()," primitive that prints its argument followed by a line break shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/22/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0)),". Then find a solution to \\(x^x = 1000\\) by finding a fixed point of \\(x\\to\\log(1000)/\\log(x)\\). (Use Clojure",(function (){var G__204442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__204443 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__204442,G__204443) : tailrecursion.hoplon.markdown.simple_node.call(null,G__204442,G__204443));
})(),"s primitive ",(function (){var G__204444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Math/log"], null);
var G__204445 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204444,G__204445) : tailrecursion.hoplon.markdown.code_node.call(null,G__204444,G__204445));
})()," procedure to get \\(\\ln(x)\\), which computes natural logarithms.) Compare the number of steps this takes with and without average damping. (Note that you cannot start ",(function (){var G__204446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fixed-point"], null);
var G__204447 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204446,G__204447) : tailrecursion.hoplon.markdown.code_node.call(null,G__204446,G__204447));
})()," with a guess of 1, as this would cause division by \\(\\log(1) = 0\\).)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204436,G__204437) : tailrecursion.hoplon.markdown.para_node.call(null,G__204436,G__204437));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204435;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204434;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204433;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204432;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_204448 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204449 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_204450 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204451 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__204580 = (function (){var G__204581 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__204582 = (function (){var G__204583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__204584 = "(";
var G__204585 = (function (){var G__204645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204646 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204645,G__204646) : tailrecursion.hoplon.span.call(null,G__204645,G__204646));
})();
var G__204586 = (function (){var G__204647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204648 = "print-fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204647,G__204648) : tailrecursion.hoplon.span.call(null,G__204647,G__204648));
})();
var G__204587 = " [";
var G__204588 = (function (){var G__204649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204650 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204649,G__204650) : tailrecursion.hoplon.span.call(null,G__204649,G__204650));
})();
var G__204589 = " ";
var G__204590 = (function (){var G__204651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204652 = "first-guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204651,G__204652) : tailrecursion.hoplon.span.call(null,G__204651,G__204652));
})();
var G__204591 = "]\n  (";
var G__204592 = (function (){var G__204653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204654 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204653,G__204654) : tailrecursion.hoplon.span.call(null,G__204653,G__204654));
})();
var G__204593 = "[";
var G__204594 = (function (){var G__204655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204656 = "tolerance";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204655,G__204656) : tailrecursion.hoplon.span.call(null,G__204655,G__204656));
})();
var G__204595 = " ";
var G__204596 = (function (){var G__204657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204658 = "0.00001";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204657,G__204658) : tailrecursion.hoplon.span.call(null,G__204657,G__204658));
})();
var G__204597 = "\n        ";
var G__204598 = (function (){var G__204659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204660 = "close-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204659,G__204660) : tailrecursion.hoplon.span.call(null,G__204659,G__204660));
})();
var G__204599 = " ";
var G__204600 = (function (){var G__204661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204662 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204661,G__204662) : tailrecursion.hoplon.span.call(null,G__204661,G__204662));
})();
var G__204601 = "(";
var G__204602 = (function (){var G__204663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204664 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204663,G__204664) : tailrecursion.hoplon.span.call(null,G__204663,G__204664));
})();
var G__204603 = (function (){var G__204665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204666 = "tolerance";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204665,G__204666) : tailrecursion.hoplon.span.call(null,G__204665,G__204666));
})();
var G__204604 = " (";
var G__204605 = (function (){var G__204667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204668 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204667,G__204668) : tailrecursion.hoplon.span.call(null,G__204667,G__204668));
})();
var G__204606 = " (";
var G__204607 = (function (){var G__204669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204670 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204669,G__204670) : tailrecursion.hoplon.span.call(null,G__204669,G__204670));
})();
var G__204608 = (function (){var G__204671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204672 = "%1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204671,G__204672) : tailrecursion.hoplon.span.call(null,G__204671,G__204672));
})();
var G__204609 = " ";
var G__204610 = (function (){var G__204673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204674 = "%2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204673,G__204674) : tailrecursion.hoplon.span.call(null,G__204673,G__204674));
})();
var G__204611 = ")))]\n    (";
var G__204612 = (function (){var G__204675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204676 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204675,G__204676) : tailrecursion.hoplon.span.call(null,G__204675,G__204676));
})();
var G__204613 = "[";
var G__204614 = (function (){var G__204677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204678 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204677,G__204678) : tailrecursion.hoplon.span.call(null,G__204677,G__204678));
})();
var G__204615 = " ";
var G__204616 = (function (){var G__204679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204680 = "first-guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204679,G__204680) : tailrecursion.hoplon.span.call(null,G__204679,G__204680));
})();
var G__204617 = "]\n      (";
var G__204618 = (function (){var G__204681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204682 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204681,G__204682) : tailrecursion.hoplon.span.call(null,G__204681,G__204682));
})();
var G__204619 = "[";
var G__204620 = (function (){var G__204683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204684 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204683,G__204684) : tailrecursion.hoplon.span.call(null,G__204683,G__204684));
})();
var G__204621 = "(";
var G__204622 = (function (){var G__204685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204686 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204685,G__204686) : tailrecursion.hoplon.span.call(null,G__204685,G__204686));
})();
var G__204623 = " ";
var G__204624 = (function (){var G__204687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204688 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204687,G__204688) : tailrecursion.hoplon.span.call(null,G__204687,G__204688));
})();
var G__204625 = ")]\n        (";
var G__204626 = (function (){var G__204689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204690 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204689,G__204690) : tailrecursion.hoplon.span.call(null,G__204689,G__204690));
})();
var G__204627 = "(";
var G__204628 = (function (){var G__204691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204692 = "close-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204691,G__204692) : tailrecursion.hoplon.span.call(null,G__204691,G__204692));
})();
var G__204629 = " ";
var G__204630 = (function (){var G__204693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204694 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204693,G__204694) : tailrecursion.hoplon.span.call(null,G__204693,G__204694));
})();
var G__204631 = " ";
var G__204632 = (function (){var G__204695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204696 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204695,G__204696) : tailrecursion.hoplon.span.call(null,G__204695,G__204696));
})();
var G__204633 = ")\n            ";
var G__204634 = (function (){var G__204697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204698 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204697,G__204698) : tailrecursion.hoplon.span.call(null,G__204697,G__204698));
})();
var G__204635 = "\n            (";
var G__204636 = (function (){var G__204699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204700 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204699,G__204700) : tailrecursion.hoplon.span.call(null,G__204699,G__204700));
})();
var G__204637 = "(";
var G__204638 = (function (){var G__204701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204702 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204701,G__204702) : tailrecursion.hoplon.span.call(null,G__204701,G__204702));
})();
var G__204639 = (function (){var G__204703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204704 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204703,G__204704) : tailrecursion.hoplon.span.call(null,G__204703,G__204704));
})();
var G__204640 = ") (";
var G__204641 = (function (){var G__204705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204706 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204705,G__204706) : tailrecursion.hoplon.span.call(null,G__204705,G__204706));
})();
var G__204642 = " ";
var G__204643 = (function (){var G__204707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204708 = "next";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204707,G__204708) : tailrecursion.hoplon.span.call(null,G__204707,G__204708));
})();
var G__204644 = ")))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$62(G__204583,G__204584,G__204585,G__204586,G__204587,G__204588,G__204589,G__204590,G__204591,G__204592,G__204593,G__204594,G__204595,G__204596,G__204597,G__204598,G__204599,G__204600,G__204601,G__204602,G__204603,G__204604,G__204605,G__204606,G__204607,G__204608,G__204609,G__204610,G__204611,G__204612,G__204613,G__204614,G__204615,G__204616,G__204617,G__204618,G__204619,G__204620,G__204621,G__204622,G__204623,G__204624,G__204625,G__204626,G__204627,G__204628,G__204629,G__204630,G__204631,G__204632,G__204633,G__204634,G__204635,G__204636,G__204637,G__204638,G__204639,G__204640,G__204641,G__204642,G__204643,G__204644) : tailrecursion.hoplon.pre.call(null,G__204583,G__204584,G__204585,G__204586,G__204587,G__204588,G__204589,G__204590,G__204591,G__204592,G__204593,G__204594,G__204595,G__204596,G__204597,G__204598,G__204599,G__204600,G__204601,G__204602,G__204603,G__204604,G__204605,G__204606,G__204607,G__204608,G__204609,G__204610,G__204611,G__204612,G__204613,G__204614,G__204615,G__204616,G__204617,G__204618,G__204619,G__204620,G__204621,G__204622,G__204623,G__204624,G__204625,G__204626,G__204627,G__204628,G__204629,G__204630,G__204631,G__204632,G__204633,G__204634,G__204635,G__204636,G__204637,G__204638,G__204639,G__204640,G__204641,G__204642,G__204643,G__204644));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__204581,G__204582) : tailrecursion.hoplon.div.call(null,G__204581,G__204582));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__204580) : tailrecursion.hoplon.div.call(null,G__204580));
})(),(function (){var G__204764 = (function (){var G__204765 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__204766 = (function (){var G__204767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__204768 = "(";
var G__204769 = (function (){var G__204794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__204795 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204794,G__204795) : tailrecursion.hoplon.span.call(null,G__204794,G__204795));
})();
var G__204770 = (function (){var G__204796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204797 = "log";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204796,G__204797) : tailrecursion.hoplon.span.call(null,G__204796,G__204797));
})();
var G__204771 = " [";
var G__204772 = (function (){var G__204798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204799 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204798,G__204799) : tailrecursion.hoplon.span.call(null,G__204798,G__204799));
})();
var G__204773 = "] (";
var G__204774 = (function (){var G__204800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204801 = "Math/log";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204800,G__204801) : tailrecursion.hoplon.span.call(null,G__204800,G__204801));
})();
var G__204775 = " ";
var G__204776 = (function (){var G__204802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204803 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204802,G__204803) : tailrecursion.hoplon.span.call(null,G__204802,G__204803));
})();
var G__204777 = "))\n(";
var G__204778 = (function (){var G__204804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204805 = "print-fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204804,G__204805) : tailrecursion.hoplon.span.call(null,G__204804,G__204805));
})();
var G__204779 = " ";
var G__204780 = (function (){var G__204806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204807 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204806,G__204807) : tailrecursion.hoplon.span.call(null,G__204806,G__204807));
})();
var G__204781 = "(";
var G__204782 = (function (){var G__204808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__204809 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204808,G__204809) : tailrecursion.hoplon.span.call(null,G__204808,G__204809));
})();
var G__204783 = "(";
var G__204784 = (function (){var G__204810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204811 = "log";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204810,G__204811) : tailrecursion.hoplon.span.call(null,G__204810,G__204811));
})();
var G__204785 = " ";
var G__204786 = (function (){var G__204812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204813 = "1000";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204812,G__204813) : tailrecursion.hoplon.span.call(null,G__204812,G__204813));
})();
var G__204787 = ") (";
var G__204788 = (function (){var G__204814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204815 = "log";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204814,G__204815) : tailrecursion.hoplon.span.call(null,G__204814,G__204815));
})();
var G__204789 = " ";
var G__204790 = (function (){var G__204816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204817 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204816,G__204817) : tailrecursion.hoplon.span.call(null,G__204816,G__204817));
})();
var G__204791 = ")) ";
var G__204792 = (function (){var G__204818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204819 = "2.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204818,G__204819) : tailrecursion.hoplon.span.call(null,G__204818,G__204819));
})();
var G__204793 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__204767,G__204768,G__204769,G__204770,G__204771,G__204772,G__204773,G__204774,G__204775,G__204776,G__204777,G__204778,G__204779,G__204780,G__204781,G__204782,G__204783,G__204784,G__204785,G__204786,G__204787,G__204788,G__204789,G__204790,G__204791,G__204792,G__204793) : tailrecursion.hoplon.pre.call(null,G__204767,G__204768,G__204769,G__204770,G__204771,G__204772,G__204773,G__204774,G__204775,G__204776,G__204777,G__204778,G__204779,G__204780,G__204781,G__204782,G__204783,G__204784,G__204785,G__204786,G__204787,G__204788,G__204789,G__204790,G__204791,G__204792,G__204793));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__204765,G__204766) : tailrecursion.hoplon.div.call(null,G__204765,G__204766));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__204764) : tailrecursion.hoplon.div.call(null,G__204764));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204451;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204450;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204449;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204448;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_204820 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204821 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_204822 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204823 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__204824 = cljs.core.PersistentArrayMap.EMPTY;
var G__204825 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. An infinite ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["continued fraction"], null)], 0))," is an expression of the form"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204824,G__204825) : tailrecursion.hoplon.markdown.para_node.call(null,G__204824,G__204825));
})(),(function (){var G__204826 = cljs.core.PersistentArrayMap.EMPTY;
var G__204827 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$f=\\frac{N_1}{D_1+\\frac{N_2}{D_2+\\frac{N_3}{D_3+",(function (){var G__204828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__204829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__204828,G__204829) : tailrecursion.hoplon.markdown.simple_node.call(null,G__204828,G__204829));
})(),"}}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204826,G__204827) : tailrecursion.hoplon.markdown.para_node.call(null,G__204826,G__204827));
})(),(function (){var G__204830 = cljs.core.PersistentArrayMap.EMPTY;
var G__204831 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As an example, one can show that the infinite continued fraction expansion with the \\(N_i\\) and \\(D_i\\) all equal to 1 produces \\(1/\\phi\\), where \\(\\phi\\) is the golden ratio (described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),". One way to approximate an infinite continued fraction is to truncate the expansion after a given number of terms. Such a truncation ",(function (){var G__204832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__204833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__204832,G__204833) : tailrecursion.hoplon.markdown.simple_node.call(null,G__204832,G__204833));
})()," a so-called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["k-term finite continued fraction"], null)], 0))," ",(function (){var G__204834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__204835 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__204834,G__204835) : tailrecursion.hoplon.markdown.simple_node.call(null,G__204834,G__204835));
})()," has the form"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204830,G__204831) : tailrecursion.hoplon.markdown.para_node.call(null,G__204830,G__204831));
})(),(function (){var G__204836 = cljs.core.PersistentArrayMap.EMPTY;
var G__204837 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\frac{N_1}{D_1+\\frac{N_2}{",(function (){var G__204838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__204839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__204838,G__204839) : tailrecursion.hoplon.markdown.simple_node.call(null,G__204838,G__204839));
})(),"+\\frac{N_k}{D_k}}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204836,G__204837) : tailrecursion.hoplon.markdown.para_node.call(null,G__204836,G__204837));
})(),(function (){var G__204840 = cljs.core.PersistentArrayMap.EMPTY;
var G__204841 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Suppose that \\(n\\) and \\(d\\) are procedures of one argument (the term index \\(i\\)) that return the \\(N_i\\) and \\(D_i\\) of the terms of the continued fraction. Define a procedure ",(function (){var G__204842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cont-frac"], null);
var G__204843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204842,G__204843) : tailrecursion.hoplon.markdown.code_node.call(null,G__204842,G__204843));
})()," such that evaluating ",(function (){var G__204844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(cont-frac n d k)"], null);
var G__204845 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204844,G__204845) : tailrecursion.hoplon.markdown.code_node.call(null,G__204844,G__204845));
})()," computes the value of the \\(k\\)-term finite continued fraction. Check your procedure by approximating \\(1/\\phi\\) using"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204840,G__204841) : tailrecursion.hoplon.markdown.para_node.call(null,G__204840,G__204841));
})(),(function (){var G__204874 = (function (){var G__204875 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__204876 = (function (){var G__204877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__204878 = "(";
var G__204879 = (function (){var G__204891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__204892 = "cont-frac";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204891,G__204892) : tailrecursion.hoplon.span.call(null,G__204891,G__204892));
})();
var G__204880 = " ";
var G__204881 = (function (){var G__204893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204894 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204893,G__204894) : tailrecursion.hoplon.span.call(null,G__204893,G__204894));
})();
var G__204882 = "(";
var G__204883 = (function (){var G__204895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204896 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204895,G__204896) : tailrecursion.hoplon.span.call(null,G__204895,G__204896));
})();
var G__204884 = ")\n           ";
var G__204885 = (function (){var G__204897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204898 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204897,G__204898) : tailrecursion.hoplon.span.call(null,G__204897,G__204898));
})();
var G__204886 = "(";
var G__204887 = (function (){var G__204899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__204900 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204899,G__204900) : tailrecursion.hoplon.span.call(null,G__204899,G__204900));
})();
var G__204888 = ")\n           ";
var G__204889 = (function (){var G__204901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__204902 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__204901,G__204902) : tailrecursion.hoplon.span.call(null,G__204901,G__204902));
})();
var G__204890 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__204877,G__204878,G__204879,G__204880,G__204881,G__204882,G__204883,G__204884,G__204885,G__204886,G__204887,G__204888,G__204889,G__204890) : tailrecursion.hoplon.pre.call(null,G__204877,G__204878,G__204879,G__204880,G__204881,G__204882,G__204883,G__204884,G__204885,G__204886,G__204887,G__204888,G__204889,G__204890));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__204875,G__204876) : tailrecursion.hoplon.div.call(null,G__204875,G__204876));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__204874) : tailrecursion.hoplon.div.call(null,G__204874));
})(),(function (){var G__204903 = cljs.core.PersistentArrayMap.EMPTY;
var G__204904 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for successive values of \\(k\\). How large must you make \\(k\\) in order to get an approximation that is accurate to 4 decimal places?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204903,G__204904) : tailrecursion.hoplon.markdown.para_node.call(null,G__204903,G__204904));
})(),(function (){var G__204905 = cljs.core.PersistentArrayMap.EMPTY;
var G__204906 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. If your ",(function (){var G__204907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cont-frac"], null);
var G__204908 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__204907,G__204908) : tailrecursion.hoplon.markdown.code_node.call(null,G__204907,G__204908));
})()," procedure generates a recursive process, write one that generates an iterative process. If it generates an iterative process, write one that generates a recursive process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__204905,G__204906) : tailrecursion.hoplon.markdown.para_node.call(null,G__204905,G__204906));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204823;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204822;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204821;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204820;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_204909 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204910 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_204911 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_204912 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__205009 = (function (){var G__205010 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__205011 = (function (){var G__205012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__205013 = "(";
var G__205014 = (function (){var G__205058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205059 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205058,G__205059) : tailrecursion.hoplon.span.call(null,G__205058,G__205059));
})();
var G__205015 = (function (){var G__205060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205061 = "cont-frac";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205060,G__205061) : tailrecursion.hoplon.span.call(null,G__205060,G__205061));
})();
var G__205016 = " [";
var G__205017 = (function (){var G__205062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205063 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205062,G__205063) : tailrecursion.hoplon.span.call(null,G__205062,G__205063));
})();
var G__205018 = " ";
var G__205019 = (function (){var G__205064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205065 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205064,G__205065) : tailrecursion.hoplon.span.call(null,G__205064,G__205065));
})();
var G__205020 = " ";
var G__205021 = (function (){var G__205066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205067 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205066,G__205067) : tailrecursion.hoplon.span.call(null,G__205066,G__205067));
})();
var G__205022 = "]\n  (";
var G__205023 = (function (){var G__205068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205069 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205068,G__205069) : tailrecursion.hoplon.span.call(null,G__205068,G__205069));
})();
var G__205024 = "[";
var G__205025 = (function (){var G__205070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205071 = "index ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205070,G__205071) : tailrecursion.hoplon.span.call(null,G__205070,G__205071));
})();
var G__205026 = (function (){var G__205072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205073 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205072,G__205073) : tailrecursion.hoplon.span.call(null,G__205072,G__205073));
})();
var G__205027 = "\n         ";
var G__205028 = (function (){var G__205074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205075 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205074,G__205075) : tailrecursion.hoplon.span.call(null,G__205074,G__205075));
})();
var G__205029 = "  ";
var G__205030 = (function (){var G__205076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205077 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205076,G__205077) : tailrecursion.hoplon.span.call(null,G__205076,G__205077));
})();
var G__205031 = "]\n    (";
var G__205032 = (function (){var G__205078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205079 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205078,G__205079) : tailrecursion.hoplon.span.call(null,G__205078,G__205079));
})();
var G__205033 = "(";
var G__205034 = (function (){var G__205080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205081 = "= index ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205080,G__205081) : tailrecursion.hoplon.span.call(null,G__205080,G__205081));
})();
var G__205035 = (function (){var G__205082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205083 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205082,G__205083) : tailrecursion.hoplon.span.call(null,G__205082,G__205083));
})();
var G__205036 = ")\n        ";
var G__205037 = (function (){var G__205084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205085 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205084,G__205085) : tailrecursion.hoplon.span.call(null,G__205084,G__205085));
})();
var G__205038 = "\n        (";
var G__205039 = (function (){var G__205086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205087 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205086,G__205087) : tailrecursion.hoplon.span.call(null,G__205086,G__205087));
})();
var G__205040 = " (";
var G__205041 = (function (){var G__205088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205089 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205088,G__205089) : tailrecursion.hoplon.span.call(null,G__205088,G__205089));
})();
var G__205042 = (function (){var G__205090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205091 = "index";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205090,G__205091) : tailrecursion.hoplon.span.call(null,G__205090,G__205091));
})();
var G__205043 = ") (";
var G__205044 = (function (){var G__205092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205093 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205092,G__205093) : tailrecursion.hoplon.span.call(null,G__205092,G__205093));
})();
var G__205045 = "(";
var G__205046 = (function (){var G__205094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205095 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205094,G__205095) : tailrecursion.hoplon.span.call(null,G__205094,G__205095));
})();
var G__205047 = " ";
var G__205048 = (function (){var G__205096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205097 = "index";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205096,G__205097) : tailrecursion.hoplon.span.call(null,G__205096,G__205097));
})();
var G__205049 = ") (";
var G__205050 = (function (){var G__205098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205099 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205098,G__205099) : tailrecursion.hoplon.span.call(null,G__205098,G__205099));
})();
var G__205051 = "(";
var G__205052 = (function (){var G__205100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205101 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205100,G__205101) : tailrecursion.hoplon.span.call(null,G__205100,G__205101));
})();
var G__205053 = " ";
var G__205054 = (function (){var G__205102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205103 = "index";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205102,G__205103) : tailrecursion.hoplon.span.call(null,G__205102,G__205103));
})();
var G__205055 = ") ";
var G__205056 = (function (){var G__205104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205105 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205104,G__205105) : tailrecursion.hoplon.span.call(null,G__205104,G__205105));
})();
var G__205057 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__205012,G__205013,G__205014,G__205015,G__205016,G__205017,G__205018,G__205019,G__205020,G__205021,G__205022,G__205023,G__205024,G__205025,G__205026,G__205027,G__205028,G__205029,G__205030,G__205031,G__205032,G__205033,G__205034,G__205035,G__205036,G__205037,G__205038,G__205039,G__205040,G__205041,G__205042,G__205043,G__205044,G__205045,G__205046,G__205047,G__205048,G__205049,G__205050,G__205051,G__205052,G__205053,G__205054,G__205055,G__205056,G__205057) : tailrecursion.hoplon.pre.call(null,G__205012,G__205013,G__205014,G__205015,G__205016,G__205017,G__205018,G__205019,G__205020,G__205021,G__205022,G__205023,G__205024,G__205025,G__205026,G__205027,G__205028,G__205029,G__205030,G__205031,G__205032,G__205033,G__205034,G__205035,G__205036,G__205037,G__205038,G__205039,G__205040,G__205041,G__205042,G__205043,G__205044,G__205045,G__205046,G__205047,G__205048,G__205049,G__205050,G__205051,G__205052,G__205053,G__205054,G__205055,G__205056,G__205057));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__205010,G__205011) : tailrecursion.hoplon.div.call(null,G__205010,G__205011));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__205009) : tailrecursion.hoplon.div.call(null,G__205009));
})(),(function (){var G__205191 = (function (){var G__205192 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__205193 = (function (){var G__205194 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__205195 = "(";
var G__205196 = (function (){var G__205235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205236 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205235,G__205236) : tailrecursion.hoplon.span.call(null,G__205235,G__205236));
})();
var G__205197 = (function (){var G__205237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205238 = "cont-frac";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205237,G__205238) : tailrecursion.hoplon.span.call(null,G__205237,G__205238));
})();
var G__205198 = " [";
var G__205199 = (function (){var G__205239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205240 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205239,G__205240) : tailrecursion.hoplon.span.call(null,G__205239,G__205240));
})();
var G__205200 = " ";
var G__205201 = (function (){var G__205241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205242 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205241,G__205242) : tailrecursion.hoplon.span.call(null,G__205241,G__205242));
})();
var G__205202 = " ";
var G__205203 = (function (){var G__205243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205244 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205243,G__205244) : tailrecursion.hoplon.span.call(null,G__205243,G__205244));
})();
var G__205204 = "]\n  (";
var G__205205 = (function (){var G__205245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205246 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205245,G__205246) : tailrecursion.hoplon.span.call(null,G__205245,G__205246));
})();
var G__205206 = "(";
var G__205207 = (function (){var G__205247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205248 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205247,G__205248) : tailrecursion.hoplon.span.call(null,G__205247,G__205248));
})();
var G__205208 = (function (){var G__205249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205250 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205249,G__205250) : tailrecursion.hoplon.span.call(null,G__205249,G__205250));
})();
var G__205209 = " ";
var G__205210 = (function (){var G__205251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205252 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205251,G__205252) : tailrecursion.hoplon.span.call(null,G__205251,G__205252));
})();
var G__205211 = ")\n      ";
var G__205212 = (function (){var G__205253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205254 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205253,G__205254) : tailrecursion.hoplon.span.call(null,G__205253,G__205254));
})();
var G__205213 = "\n      (";
var G__205214 = (function (){var G__205255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205256 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205255,G__205256) : tailrecursion.hoplon.span.call(null,G__205255,G__205256));
})();
var G__205215 = "(";
var G__205216 = (function (){var G__205257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205258 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205257,G__205258) : tailrecursion.hoplon.span.call(null,G__205257,G__205258));
})();
var G__205217 = " ";
var G__205218 = (function (){var G__205259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205260 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205259,G__205260) : tailrecursion.hoplon.span.call(null,G__205259,G__205260));
})();
var G__205219 = ") (";
var G__205220 = (function (){var G__205261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205262 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205261,G__205262) : tailrecursion.hoplon.span.call(null,G__205261,G__205262));
})();
var G__205221 = "(";
var G__205222 = (function (){var G__205263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205264 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205263,G__205264) : tailrecursion.hoplon.span.call(null,G__205263,G__205264));
})();
var G__205223 = " ";
var G__205224 = (function (){var G__205265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205266 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205265,G__205266) : tailrecursion.hoplon.span.call(null,G__205265,G__205266));
})();
var G__205225 = ") (";
var G__205226 = (function (){var G__205267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205268 = "cont-frac";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205267,G__205268) : tailrecursion.hoplon.span.call(null,G__205267,G__205268));
})();
var G__205227 = " ";
var G__205228 = (function (){var G__205269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205270 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205269,G__205270) : tailrecursion.hoplon.span.call(null,G__205269,G__205270));
})();
var G__205229 = " ";
var G__205230 = (function (){var G__205271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205272 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205271,G__205272) : tailrecursion.hoplon.span.call(null,G__205271,G__205272));
})();
var G__205231 = " (";
var G__205232 = (function (){var G__205273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205274 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205273,G__205274) : tailrecursion.hoplon.span.call(null,G__205273,G__205274));
})();
var G__205233 = (function (){var G__205275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205276 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205275,G__205276) : tailrecursion.hoplon.span.call(null,G__205275,G__205276));
})();
var G__205234 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__205194,G__205195,G__205196,G__205197,G__205198,G__205199,G__205200,G__205201,G__205202,G__205203,G__205204,G__205205,G__205206,G__205207,G__205208,G__205209,G__205210,G__205211,G__205212,G__205213,G__205214,G__205215,G__205216,G__205217,G__205218,G__205219,G__205220,G__205221,G__205222,G__205223,G__205224,G__205225,G__205226,G__205227,G__205228,G__205229,G__205230,G__205231,G__205232,G__205233,G__205234) : tailrecursion.hoplon.pre.call(null,G__205194,G__205195,G__205196,G__205197,G__205198,G__205199,G__205200,G__205201,G__205202,G__205203,G__205204,G__205205,G__205206,G__205207,G__205208,G__205209,G__205210,G__205211,G__205212,G__205213,G__205214,G__205215,G__205216,G__205217,G__205218,G__205219,G__205220,G__205221,G__205222,G__205223,G__205224,G__205225,G__205226,G__205227,G__205228,G__205229,G__205230,G__205231,G__205232,G__205233,G__205234));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__205192,G__205193) : tailrecursion.hoplon.div.call(null,G__205192,G__205193));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__205191) : tailrecursion.hoplon.div.call(null,G__205191));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204912;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204911;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_204910;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_204909;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_205277 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205278 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_205279 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205280 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__205281 = cljs.core.PersistentArrayMap.EMPTY;
var G__205282 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In 1737, the Swiss mathematician Leonhard Euler published a memoir ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["De Fractionibus Continuls"], null)], 0)),", which included a continued fraction expansion for \\(e-2\\), where \\(e\\) is the base of the natural logarithms. In this fraction the \\(N_i\\) are all 1, and the \\(D_i\\) are successively 1,2,1,1,4,1,1,6,1,1,8,",(function (){var G__205283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__205284 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__205283,G__205284) : tailrecursion.hoplon.markdown.simple_node.call(null,G__205283,G__205284));
})()," Write a program that uses your ",(function (){var G__205285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cont-frac"], null);
var G__205286 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205285,G__205286) : tailrecursion.hoplon.markdown.code_node.call(null,G__205285,G__205286));
})()," procedure from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/37/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise1.37"], null)], 0))," to approximate \\(e\\), based on Euler",(function (){var G__205287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__205288 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__205287,G__205288) : tailrecursion.hoplon.markdown.simple_node.call(null,G__205287,G__205288));
})(),"s expansion."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205281,G__205282) : tailrecursion.hoplon.markdown.para_node.call(null,G__205281,G__205282));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205280;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205279;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205278;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205277;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_205289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_205291 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205292 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__205409 = (function (){var G__205410 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__205411 = (function (){var G__205412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__205413 = "(";
var G__205414 = (function (){var G__205468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205469 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205468,G__205469) : tailrecursion.hoplon.span.call(null,G__205468,G__205469));
})();
var G__205415 = (function (){var G__205470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205471 = "e-approximation";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205470,G__205471) : tailrecursion.hoplon.span.call(null,G__205470,G__205471));
})();
var G__205416 = " [";
var G__205417 = (function (){var G__205472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205473 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205472,G__205473) : tailrecursion.hoplon.span.call(null,G__205472,G__205473));
})();
var G__205418 = "]\n  (";
var G__205419 = (function (){var G__205474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205475 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205474,G__205475) : tailrecursion.hoplon.span.call(null,G__205474,G__205475));
})();
var G__205420 = "[";
var G__205421 = (function (){var G__205476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205477 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205476,G__205477) : tailrecursion.hoplon.span.call(null,G__205476,G__205477));
})();
var G__205422 = " ";
var G__205423 = (function (){var G__205478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205479 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205478,G__205479) : tailrecursion.hoplon.span.call(null,G__205478,G__205479));
})();
var G__205424 = "(";
var G__205425 = (function (){var G__205480 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205481 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205480,G__205481) : tailrecursion.hoplon.span.call(null,G__205480,G__205481));
})();
var G__205426 = ")\n        ";
var G__205427 = (function (){var G__205482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205483 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205482,G__205483) : tailrecursion.hoplon.span.call(null,G__205482,G__205483));
})();
var G__205428 = " ";
var G__205429 = (function (){var G__205484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205485 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205484,G__205485) : tailrecursion.hoplon.span.call(null,G__205484,G__205485));
})();
var G__205430 = "(";
var G__205431 = (function (){var G__205486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205487 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205486,G__205487) : tailrecursion.hoplon.span.call(null,G__205486,G__205487));
})();
var G__205432 = "(";
var G__205433 = (function (){var G__205488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205489 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205488,G__205489) : tailrecursion.hoplon.span.call(null,G__205488,G__205489));
})();
var G__205434 = "(";
var G__205435 = (function (){var G__205490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205491 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205490,G__205491) : tailrecursion.hoplon.span.call(null,G__205490,G__205491));
})();
var G__205436 = " ";
var G__205437 = (function (){var G__205492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205493 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205492,G__205493) : tailrecursion.hoplon.span.call(null,G__205492,G__205493));
})();
var G__205438 = " ";
var G__205439 = (function (){var G__205494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205495 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205494,G__205495) : tailrecursion.hoplon.span.call(null,G__205494,G__205495));
})();
var G__205440 = ") ";
var G__205441 = (function (){var G__205496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205497 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205496,G__205497) : tailrecursion.hoplon.span.call(null,G__205496,G__205497));
})();
var G__205442 = ")\n               (";
var G__205443 = (function (){var G__205498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205499 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205498,G__205499) : tailrecursion.hoplon.span.call(null,G__205498,G__205499));
})();
var G__205444 = (function (){var G__205500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205501 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205500,G__205501) : tailrecursion.hoplon.span.call(null,G__205500,G__205501));
})();
var G__205445 = " (";
var G__205446 = (function (){var G__205502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205503 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205502,G__205503) : tailrecursion.hoplon.span.call(null,G__205502,G__205503));
})();
var G__205447 = "(";
var G__205448 = (function (){var G__205504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205505 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205504,G__205505) : tailrecursion.hoplon.span.call(null,G__205504,G__205505));
})();
var G__205449 = (function (){var G__205506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205507 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205506,G__205507) : tailrecursion.hoplon.span.call(null,G__205506,G__205507));
})();
var G__205450 = " ";
var G__205451 = (function (){var G__205508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205509 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205508,G__205509) : tailrecursion.hoplon.span.call(null,G__205508,G__205509));
})();
var G__205452 = ") ";
var G__205453 = (function (){var G__205510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205511 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205510,G__205511) : tailrecursion.hoplon.span.call(null,G__205510,G__205511));
})();
var G__205454 = "))\n               ";
var G__205455 = (function (){var G__205512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205513 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205512,G__205513) : tailrecursion.hoplon.span.call(null,G__205512,G__205513));
})();
var G__205456 = ")]\n    (";
var G__205457 = (function (){var G__205514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205515 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205514,G__205515) : tailrecursion.hoplon.span.call(null,G__205514,G__205515));
})();
var G__205458 = (function (){var G__205516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205517 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205516,G__205517) : tailrecursion.hoplon.span.call(null,G__205516,G__205517));
})();
var G__205459 = " (";
var G__205460 = (function (){var G__205518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205519 = "cont-frac";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205518,G__205519) : tailrecursion.hoplon.span.call(null,G__205518,G__205519));
})();
var G__205461 = " ";
var G__205462 = (function (){var G__205520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205521 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205520,G__205521) : tailrecursion.hoplon.span.call(null,G__205520,G__205521));
})();
var G__205463 = " ";
var G__205464 = (function (){var G__205522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205523 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205522,G__205523) : tailrecursion.hoplon.span.call(null,G__205522,G__205523));
})();
var G__205465 = " ";
var G__205466 = (function (){var G__205524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205525 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205524,G__205525) : tailrecursion.hoplon.span.call(null,G__205524,G__205525));
})();
var G__205467 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__205412,G__205413,G__205414,G__205415,G__205416,G__205417,G__205418,G__205419,G__205420,G__205421,G__205422,G__205423,G__205424,G__205425,G__205426,G__205427,G__205428,G__205429,G__205430,G__205431,G__205432,G__205433,G__205434,G__205435,G__205436,G__205437,G__205438,G__205439,G__205440,G__205441,G__205442,G__205443,G__205444,G__205445,G__205446,G__205447,G__205448,G__205449,G__205450,G__205451,G__205452,G__205453,G__205454,G__205455,G__205456,G__205457,G__205458,G__205459,G__205460,G__205461,G__205462,G__205463,G__205464,G__205465,G__205466,G__205467) : tailrecursion.hoplon.pre.call(null,G__205412,G__205413,G__205414,G__205415,G__205416,G__205417,G__205418,G__205419,G__205420,G__205421,G__205422,G__205423,G__205424,G__205425,G__205426,G__205427,G__205428,G__205429,G__205430,G__205431,G__205432,G__205433,G__205434,G__205435,G__205436,G__205437,G__205438,G__205439,G__205440,G__205441,G__205442,G__205443,G__205444,G__205445,G__205446,G__205447,G__205448,G__205449,G__205450,G__205451,G__205452,G__205453,G__205454,G__205455,G__205456,G__205457,G__205458,G__205459,G__205460,G__205461,G__205462,G__205463,G__205464,G__205465,G__205466,G__205467));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__205410,G__205411) : tailrecursion.hoplon.div.call(null,G__205410,G__205411));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__205409) : tailrecursion.hoplon.div.call(null,G__205409));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205292;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205291;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205289;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_205526 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205527 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_205528 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205529 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__205530 = cljs.core.PersistentArrayMap.EMPTY;
var G__205531 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A continued fraction representation of the tangent function was published in 1770 by the German mathematician J.H. Lambert:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205530,G__205531) : tailrecursion.hoplon.markdown.para_node.call(null,G__205530,G__205531));
})(),(function (){var G__205532 = cljs.core.PersistentArrayMap.EMPTY;
var G__205533 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\tan x = \\frac{x}{1-\\frac{x^2}{3-\\frac{x^3}{5-",(function (){var G__205534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__205535 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__205534,G__205535) : tailrecursion.hoplon.markdown.simple_node.call(null,G__205534,G__205535));
})(),"}}}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205532,G__205533) : tailrecursion.hoplon.markdown.para_node.call(null,G__205532,G__205533));
})(),(function (){var G__205536 = cljs.core.PersistentArrayMap.EMPTY;
var G__205537 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where \\(x\\) is in radians. Define a procedure ",(function (){var G__205538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(tan-cf x k)"], null);
var G__205539 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205538,G__205539) : tailrecursion.hoplon.markdown.code_node.call(null,G__205538,G__205539));
})()," that computes an approximation to the tangent function based on Lambert",(function (){var G__205540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__205541 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__205540,G__205541) : tailrecursion.hoplon.markdown.simple_node.call(null,G__205540,G__205541));
})(),"s formula. ",(function (){var G__205542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"k"], null);
var G__205543 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205542,G__205543) : tailrecursion.hoplon.markdown.code_node.call(null,G__205542,G__205543));
})()," specifies the number of terms to compute, as in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/37/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.37"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205536,G__205537) : tailrecursion.hoplon.markdown.para_node.call(null,G__205536,G__205537));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205529;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205528;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205527;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205526;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_205544 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205545 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_205546 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205547 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__205642 = (function (){var G__205643 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__205644 = (function (){var G__205645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__205646 = "(";
var G__205647 = (function (){var G__205691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205692 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205691,G__205692) : tailrecursion.hoplon.span.call(null,G__205691,G__205692));
})();
var G__205648 = (function (){var G__205693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205694 = "tan-cf";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205693,G__205694) : tailrecursion.hoplon.span.call(null,G__205693,G__205694));
})();
var G__205649 = " [";
var G__205650 = (function (){var G__205695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205696 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205695,G__205696) : tailrecursion.hoplon.span.call(null,G__205695,G__205696));
})();
var G__205651 = " ";
var G__205652 = (function (){var G__205697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205698 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205697,G__205698) : tailrecursion.hoplon.span.call(null,G__205697,G__205698));
})();
var G__205653 = "]\n  (";
var G__205654 = (function (){var G__205699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205700 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205699,G__205700) : tailrecursion.hoplon.span.call(null,G__205699,G__205700));
})();
var G__205655 = "[";
var G__205656 = (function (){var G__205701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205702 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205701,G__205702) : tailrecursion.hoplon.span.call(null,G__205701,G__205702));
})();
var G__205657 = " ";
var G__205658 = (function (){var G__205703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205704 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205703,G__205704) : tailrecursion.hoplon.span.call(null,G__205703,G__205704));
})();
var G__205659 = "(";
var G__205660 = (function (){var G__205705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205706 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205705,G__205706) : tailrecursion.hoplon.span.call(null,G__205705,G__205706));
})();
var G__205661 = "(";
var G__205662 = (function (){var G__205707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205708 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205707,G__205708) : tailrecursion.hoplon.span.call(null,G__205707,G__205708));
})();
var G__205663 = " ";
var G__205664 = (function (){var G__205709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205710 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205709,G__205710) : tailrecursion.hoplon.span.call(null,G__205709,G__205710));
})();
var G__205665 = " ";
var G__205666 = (function (){var G__205711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205712 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205711,G__205712) : tailrecursion.hoplon.span.call(null,G__205711,G__205712));
})();
var G__205667 = "))\n        ";
var G__205668 = (function (){var G__205713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205714 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205713,G__205714) : tailrecursion.hoplon.span.call(null,G__205713,G__205714));
})();
var G__205669 = " ";
var G__205670 = (function (){var G__205715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205716 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205715,G__205716) : tailrecursion.hoplon.span.call(null,G__205715,G__205716));
})();
var G__205671 = "(";
var G__205672 = (function (){var G__205717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205718 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205717,G__205718) : tailrecursion.hoplon.span.call(null,G__205717,G__205718));
})();
var G__205673 = "(";
var G__205674 = (function (){var G__205719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205720 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205719,G__205720) : tailrecursion.hoplon.span.call(null,G__205719,G__205720));
})();
var G__205675 = (function (){var G__205721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205722 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205721,G__205722) : tailrecursion.hoplon.span.call(null,G__205721,G__205722));
})();
var G__205676 = " ";
var G__205677 = (function (){var G__205723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205724 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205723,G__205724) : tailrecursion.hoplon.span.call(null,G__205723,G__205724));
})();
var G__205678 = ") ";
var G__205679 = (function (){var G__205725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205726 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205725,G__205726) : tailrecursion.hoplon.span.call(null,G__205725,G__205726));
})();
var G__205680 = ")]\n    (";
var G__205681 = (function (){var G__205727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205728 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205727,G__205728) : tailrecursion.hoplon.span.call(null,G__205727,G__205728));
})();
var G__205682 = "(";
var G__205683 = (function (){var G__205729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205730 = "cont-frac";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205729,G__205730) : tailrecursion.hoplon.span.call(null,G__205729,G__205730));
})();
var G__205684 = " ";
var G__205685 = (function (){var G__205731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205732 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205731,G__205732) : tailrecursion.hoplon.span.call(null,G__205731,G__205732));
})();
var G__205686 = " ";
var G__205687 = (function (){var G__205733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205734 = "d";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205733,G__205734) : tailrecursion.hoplon.span.call(null,G__205733,G__205734));
})();
var G__205688 = " ";
var G__205689 = (function (){var G__205735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205736 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205735,G__205736) : tailrecursion.hoplon.span.call(null,G__205735,G__205736));
})();
var G__205690 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__205645,G__205646,G__205647,G__205648,G__205649,G__205650,G__205651,G__205652,G__205653,G__205654,G__205655,G__205656,G__205657,G__205658,G__205659,G__205660,G__205661,G__205662,G__205663,G__205664,G__205665,G__205666,G__205667,G__205668,G__205669,G__205670,G__205671,G__205672,G__205673,G__205674,G__205675,G__205676,G__205677,G__205678,G__205679,G__205680,G__205681,G__205682,G__205683,G__205684,G__205685,G__205686,G__205687,G__205688,G__205689,G__205690) : tailrecursion.hoplon.pre.call(null,G__205645,G__205646,G__205647,G__205648,G__205649,G__205650,G__205651,G__205652,G__205653,G__205654,G__205655,G__205656,G__205657,G__205658,G__205659,G__205660,G__205661,G__205662,G__205663,G__205664,G__205665,G__205666,G__205667,G__205668,G__205669,G__205670,G__205671,G__205672,G__205673,G__205674,G__205675,G__205676,G__205677,G__205678,G__205679,G__205680,G__205681,G__205682,G__205683,G__205684,G__205685,G__205686,G__205687,G__205688,G__205689,G__205690));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__205643,G__205644) : tailrecursion.hoplon.div.call(null,G__205643,G__205644));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__205642) : tailrecursion.hoplon.div.call(null,G__205642));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205547;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205546;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205545;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205544;
}})()], 0))], 0))], 0));
var G__194654 = "";
var G__194655 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Procedures as Returned Values"], null),(function (){var _STAR_references_STAR_205737 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205738 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_205739 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_205740 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__205741 = cljs.core.PersistentArrayMap.EMPTY;
var G__205742 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The above examples demonstrate how the ability to pass procedures as arguments significantly enhances the expressive power of our programming language. We can achieve even more expressive power by creating procedures whose returned values are themselves procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205741,G__205742) : tailrecursion.hoplon.markdown.para_node.call(null,G__205741,G__205742));
})(),(function (){var G__205743 = cljs.core.PersistentArrayMap.EMPTY;
var G__205744 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can illustrate this idea by looking again at the ",(function (){var G__205745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fixed-point"], null);
var G__205746 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205745,G__205746) : tailrecursion.hoplon.markdown.code_node.call(null,G__205745,G__205746));
})()," example described at the end of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/3/sub/3/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.3.3"], null)], 0)),". We formulated a new version of the square-root procedure as a fixed-point search, starting with the observation that \\(\\sqrt x\\) is a fixed-point of the function \\(y\\to x/y\\). Then we used average damping to make the approximations converge. Average damping is a useful general technique in itself. Namely, given a function \\(f\\), we consider the function whose value at \\(x\\) is equal to the average of \\(x\\) and \\(f(x)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205743,G__205744) : tailrecursion.hoplon.markdown.para_node.call(null,G__205743,G__205744));
})(),(function (){var G__205747 = cljs.core.PersistentArrayMap.EMPTY;
var G__205748 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express the idea of average damping by means of the following procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205747,G__205748) : tailrecursion.hoplon.markdown.para_node.call(null,G__205747,G__205748));
})(),(function (){var G__205788 = (function (){var G__205789 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__205790 = (function (){var G__205791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__205792 = "(";
var G__205793 = (function (){var G__205810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205811 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205810,G__205811) : tailrecursion.hoplon.span.call(null,G__205810,G__205811));
})();
var G__205794 = (function (){var G__205812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205813 = "average-damp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205812,G__205813) : tailrecursion.hoplon.span.call(null,G__205812,G__205813));
})();
var G__205795 = " [";
var G__205796 = (function (){var G__205814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205815 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205814,G__205815) : tailrecursion.hoplon.span.call(null,G__205814,G__205815));
})();
var G__205797 = "]\n  (";
var G__205798 = (function (){var G__205816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205817 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205816,G__205817) : tailrecursion.hoplon.span.call(null,G__205816,G__205817));
})();
var G__205799 = "[";
var G__205800 = (function (){var G__205818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205819 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205818,G__205819) : tailrecursion.hoplon.span.call(null,G__205818,G__205819));
})();
var G__205801 = "] (";
var G__205802 = (function (){var G__205820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205821 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205820,G__205821) : tailrecursion.hoplon.span.call(null,G__205820,G__205821));
})();
var G__205803 = " ";
var G__205804 = (function (){var G__205822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205823 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205822,G__205823) : tailrecursion.hoplon.span.call(null,G__205822,G__205823));
})();
var G__205805 = " (";
var G__205806 = (function (){var G__205824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205825 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205824,G__205825) : tailrecursion.hoplon.span.call(null,G__205824,G__205825));
})();
var G__205807 = " ";
var G__205808 = (function (){var G__205826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205827 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205826,G__205827) : tailrecursion.hoplon.span.call(null,G__205826,G__205827));
})();
var G__205809 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__205791,G__205792,G__205793,G__205794,G__205795,G__205796,G__205797,G__205798,G__205799,G__205800,G__205801,G__205802,G__205803,G__205804,G__205805,G__205806,G__205807,G__205808,G__205809) : tailrecursion.hoplon.pre.call(null,G__205791,G__205792,G__205793,G__205794,G__205795,G__205796,G__205797,G__205798,G__205799,G__205800,G__205801,G__205802,G__205803,G__205804,G__205805,G__205806,G__205807,G__205808,G__205809));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__205789,G__205790) : tailrecursion.hoplon.div.call(null,G__205789,G__205790));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__205788) : tailrecursion.hoplon.div.call(null,G__205788));
})(),(function (){var G__205828 = cljs.core.PersistentArrayMap.EMPTY;
var G__205829 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__205830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"average-damp"], null);
var G__205831 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205830,G__205831) : tailrecursion.hoplon.markdown.code_node.call(null,G__205830,G__205831));
})()," is a procedure that takes as arguments a procedure ",(function (){var G__205832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"f"], null);
var G__205833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205832,G__205833) : tailrecursion.hoplon.markdown.code_node.call(null,G__205832,G__205833));
})()," and returns as its value a procedure (produced by the ",(function (){var G__205834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fn"], null);
var G__205835 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205834,G__205835) : tailrecursion.hoplon.markdown.code_node.call(null,G__205834,G__205835));
})(),") that, when applied to a number ",(function (){var G__205836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__205837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205836,G__205837) : tailrecursion.hoplon.markdown.code_node.call(null,G__205836,G__205837));
})(),", produces the average of ",(function (){var G__205838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"x"], null);
var G__205839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205838,G__205839) : tailrecursion.hoplon.markdown.code_node.call(null,G__205838,G__205839));
})()," and ",(function (){var G__205840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(f x)"], null);
var G__205841 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205840,G__205841) : tailrecursion.hoplon.markdown.code_node.call(null,G__205840,G__205841));
})(),". For example, apply ",(function (){var G__205842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"average-damp"], null);
var G__205843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205842,G__205843) : tailrecursion.hoplon.markdown.code_node.call(null,G__205842,G__205843));
})()," to the ",(function (){var G__205844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"square"], null);
var G__205845 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205844,G__205845) : tailrecursion.hoplon.markdown.code_node.call(null,G__205844,G__205845));
})()," procedure produces a procedure whose value at some number \\(x\\) is the average of \\(x\\) and \\(x^2\\). Applying this resulting procedure to 10 returns the average of 10 and 100, or 55.",(function (){var G__205846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__205847 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Observe that this is a combination whose operator is itself a combination. ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/4/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exercise 1.4"], null)], 0))," already demonstrated the ability to form such combinations, but that was only a toy example. Here we begin to see the real need for such combinations ",(function (){var G__205848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__205849 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__205848,G__205849) : tailrecursion.hoplon.markdown.simple_node.call(null,G__205848,G__205849));
})()," when applying a procedure that is obtained as the value returned by a higher-order procedure."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__205846,G__205847) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__205846,G__205847));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205828,G__205829) : tailrecursion.hoplon.markdown.para_node.call(null,G__205828,G__205829));
})(),(function (){var G__205870 = (function (){var G__205871 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__205872 = (function (){var G__205873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__205874 = "((";
var G__205875 = (function (){var G__205883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205884 = "average-damp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205883,G__205884) : tailrecursion.hoplon.span.call(null,G__205883,G__205884));
})();
var G__205876 = " ";
var G__205877 = (function (){var G__205885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205886 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205885,G__205886) : tailrecursion.hoplon.span.call(null,G__205885,G__205886));
})();
var G__205878 = ") ";
var G__205879 = (function (){var G__205887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205888 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205887,G__205888) : tailrecursion.hoplon.span.call(null,G__205887,G__205888));
})();
var G__205880 = ")\n";
var G__205881 = (function (){var G__205889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205890 = "55";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205889,G__205890) : tailrecursion.hoplon.span.call(null,G__205889,G__205890));
})();
var G__205882 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$10(G__205873,G__205874,G__205875,G__205876,G__205877,G__205878,G__205879,G__205880,G__205881,G__205882) : tailrecursion.hoplon.pre.call(null,G__205873,G__205874,G__205875,G__205876,G__205877,G__205878,G__205879,G__205880,G__205881,G__205882));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__205871,G__205872) : tailrecursion.hoplon.div.call(null,G__205871,G__205872));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__205870) : tailrecursion.hoplon.div.call(null,G__205870));
})(),(function (){var G__205891 = cljs.core.PersistentArrayMap.EMPTY;
var G__205892 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using ",(function (){var G__205893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"average-damp"], null);
var G__205894 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__205893,G__205894) : tailrecursion.hoplon.markdown.code_node.call(null,G__205893,G__205894));
})(),", we can reformulate the square-root procedure as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205891,G__205892) : tailrecursion.hoplon.markdown.para_node.call(null,G__205891,G__205892));
})(),(function (){var G__205937 = (function (){var G__205938 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__205939 = (function (){var G__205940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__205941 = "(";
var G__205942 = (function (){var G__205960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__205961 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205960,G__205961) : tailrecursion.hoplon.span.call(null,G__205960,G__205961));
})();
var G__205943 = (function (){var G__205962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205963 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205962,G__205963) : tailrecursion.hoplon.span.call(null,G__205962,G__205963));
})();
var G__205944 = " [";
var G__205945 = (function (){var G__205964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205965 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205964,G__205965) : tailrecursion.hoplon.span.call(null,G__205964,G__205965));
})();
var G__205946 = "]\n  (";
var G__205947 = (function (){var G__205966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205967 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205966,G__205967) : tailrecursion.hoplon.span.call(null,G__205966,G__205967));
})();
var G__205948 = " (";
var G__205949 = (function (){var G__205968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__205969 = "average-damp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205968,G__205969) : tailrecursion.hoplon.span.call(null,G__205968,G__205969));
})();
var G__205950 = " ";
var G__205951 = (function (){var G__205970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205971 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205970,G__205971) : tailrecursion.hoplon.span.call(null,G__205970,G__205971));
})();
var G__205952 = "(";
var G__205953 = (function (){var G__205972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__205973 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205972,G__205973) : tailrecursion.hoplon.span.call(null,G__205972,G__205973));
})();
var G__205954 = (function (){var G__205974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205975 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205974,G__205975) : tailrecursion.hoplon.span.call(null,G__205974,G__205975));
})();
var G__205955 = " ";
var G__205956 = (function (){var G__205976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__205977 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205976,G__205977) : tailrecursion.hoplon.span.call(null,G__205976,G__205977));
})();
var G__205957 = "))\n               ";
var G__205958 = (function (){var G__205978 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__205979 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__205978,G__205979) : tailrecursion.hoplon.span.call(null,G__205978,G__205979));
})();
var G__205959 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__205940,G__205941,G__205942,G__205943,G__205944,G__205945,G__205946,G__205947,G__205948,G__205949,G__205950,G__205951,G__205952,G__205953,G__205954,G__205955,G__205956,G__205957,G__205958,G__205959) : tailrecursion.hoplon.pre.call(null,G__205940,G__205941,G__205942,G__205943,G__205944,G__205945,G__205946,G__205947,G__205948,G__205949,G__205950,G__205951,G__205952,G__205953,G__205954,G__205955,G__205956,G__205957,G__205958,G__205959));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__205938,G__205939) : tailrecursion.hoplon.div.call(null,G__205938,G__205939));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__205937) : tailrecursion.hoplon.div.call(null,G__205937));
})(),(function (){var G__205980 = cljs.core.PersistentArrayMap.EMPTY;
var G__205981 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Notice how this formulation makes explicit the three ideas in the method: fixed-point search, average damping, and the function \\(y\\to x/y\\). It is instructive to compare this formulation of the square-root method with the original version given in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/7/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.7"], null)], 0)),". Bear in mind that these procedures express the same process, and notice how much clearer the idea becomes when we express the process in terms of these abstractions. In general, there are many ways to formulate a process as a procedure. Experienced programmers know how to choose procedural formulations that are particularly perspicuous, and where useful elements of the process are exposed as separate entities that can be reused in other applications. As a simple example of reuse, notice that the cube root of \\(x\\) is a fixed point of the function \\(y\\to x/y^2\\), so we can immediately generalize our square-root procedure to one that extracts cube roots:",(function (){var G__205982 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__205983 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["See ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/45/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.45"], null)], 0))," for a further generalization."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__205982,G__205983) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__205982,G__205983));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__205980,G__205981) : tailrecursion.hoplon.markdown.para_node.call(null,G__205980,G__205981));
})(),(function (){var G__206030 = (function (){var G__206031 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206032 = (function (){var G__206033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206034 = "(";
var G__206035 = (function (){var G__206055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206056 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206055,G__206056) : tailrecursion.hoplon.span.call(null,G__206055,G__206056));
})();
var G__206036 = (function (){var G__206057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206058 = "cube-root";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206057,G__206058) : tailrecursion.hoplon.span.call(null,G__206057,G__206058));
})();
var G__206037 = " [";
var G__206038 = (function (){var G__206059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206060 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206059,G__206060) : tailrecursion.hoplon.span.call(null,G__206059,G__206060));
})();
var G__206039 = "]\n  (";
var G__206040 = (function (){var G__206061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206062 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206061,G__206062) : tailrecursion.hoplon.span.call(null,G__206061,G__206062));
})();
var G__206041 = " (";
var G__206042 = (function (){var G__206063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206064 = "average-damp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206063,G__206064) : tailrecursion.hoplon.span.call(null,G__206063,G__206064));
})();
var G__206043 = " ";
var G__206044 = (function (){var G__206065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206066 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206065,G__206066) : tailrecursion.hoplon.span.call(null,G__206065,G__206066));
})();
var G__206045 = "(";
var G__206046 = (function (){var G__206067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206068 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206067,G__206068) : tailrecursion.hoplon.span.call(null,G__206067,G__206068));
})();
var G__206047 = (function (){var G__206069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206070 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206069,G__206070) : tailrecursion.hoplon.span.call(null,G__206069,G__206070));
})();
var G__206048 = " (";
var G__206049 = (function (){var G__206071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206072 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206071,G__206072) : tailrecursion.hoplon.span.call(null,G__206071,G__206072));
})();
var G__206050 = " ";
var G__206051 = (function (){var G__206073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206074 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206073,G__206074) : tailrecursion.hoplon.span.call(null,G__206073,G__206074));
})();
var G__206052 = ")))\n               ";
var G__206053 = (function (){var G__206075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206076 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206075,G__206076) : tailrecursion.hoplon.span.call(null,G__206075,G__206076));
})();
var G__206054 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__206033,G__206034,G__206035,G__206036,G__206037,G__206038,G__206039,G__206040,G__206041,G__206042,G__206043,G__206044,G__206045,G__206046,G__206047,G__206048,G__206049,G__206050,G__206051,G__206052,G__206053,G__206054) : tailrecursion.hoplon.pre.call(null,G__206033,G__206034,G__206035,G__206036,G__206037,G__206038,G__206039,G__206040,G__206041,G__206042,G__206043,G__206044,G__206045,G__206046,G__206047,G__206048,G__206049,G__206050,G__206051,G__206052,G__206053,G__206054));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206031,G__206032) : tailrecursion.hoplon.div.call(null,G__206031,G__206032));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206030) : tailrecursion.hoplon.div.call(null,G__206030));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205740;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205739;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_205738;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_205737;
}})()], 0));
var G__194656 = "";
var G__194657 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Newton's Method"], null),(function (){var _STAR_references_STAR_206077 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206078 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_206079 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206080 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__206081 = cljs.core.PersistentArrayMap.EMPTY;
var G__206082 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When we first introduced the square-root procedure, in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/1/sub/7/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.1.7"], null)], 0)),", we mentioned that this was a special case of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Newton",(function (){var G__206083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206084 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206083,G__206084) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206083,G__206084));
})(),"s method"], null)], 0)),". If \\(x\\to g(x)\\) is a differentiable function, then a solution of the equation \\(g(x) = 0\\) is a fixed point of the function \\(x\\to f(x)\\) where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206081,G__206082) : tailrecursion.hoplon.markdown.para_node.call(null,G__206081,G__206082));
})(),(function (){var G__206085 = cljs.core.PersistentArrayMap.EMPTY;
var G__206086 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$f(x)=x-\\frac{g(x)}{Dg(x)}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206085,G__206086) : tailrecursion.hoplon.markdown.para_node.call(null,G__206085,G__206086));
})(),(function (){var G__206087 = cljs.core.PersistentArrayMap.EMPTY;
var G__206088 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and \\(Dg(x)\\) is the derivative of \\(g\\) evaluated at \\(x\\). Newton",(function (){var G__206089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206090 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206089,G__206090) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206089,G__206090));
})(),"s method is the use of the tixed-point method we saw above to approximate a solute of the equation by finding a fixed point of the function \\(f\\).",(function (){var G__206091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__206092 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Elementary calculus books usually describe Newton's method in terms of the sequence of approximations \\(x_{n+1} = x_n - g(x_n)/Dg(x_n)\\). Having language for talking about processes and using the idea of fixed points simplifies the description of the method."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__206091,G__206092) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__206091,G__206092));
})()," For many functions \\(g\\) and for sufficiently good initial guesses for \\(x\\), Newton",(function (){var G__206093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206094 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206093,G__206094) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206093,G__206094));
})(),"s method converges very rapidly to a solution of \\(g(x)=0\\)",(function (){var G__206095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__206096 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Newton's method does not always converge to an answer, but it can be shown that in favorable cases each iteration doubles the number-of-digits accuracy of the approximation to the solution. In such cases, Newton's method will converge much more rapidly than the half-interval method."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__206095,G__206096) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__206095,G__206096));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206087,G__206088) : tailrecursion.hoplon.markdown.para_node.call(null,G__206087,G__206088));
})(),(function (){var G__206097 = cljs.core.PersistentArrayMap.EMPTY;
var G__206098 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In order to implement Newton",(function (){var G__206099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206100 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206099,G__206100) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206099,G__206100));
})(),"s method as a procedure, we must first express the idea of derivative. Note that ",(function (){var G__206101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__206102 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["derivative,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__206101,G__206102) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__206101,G__206102));
})()," like average damping, is something that transforms a function into another function. For instance, the derivative of the function \\(x\\to x^3\\) is the function \\(x\\to 3x^2\\). In general, if \\(g\\) is a function and \\(dx\\) is a small number, then the derivative \\(Dg\\) of \\(g\\) is the function whose value at any number \\(x\\) is given (in the limit of small \\(dx\\)) by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206097,G__206098) : tailrecursion.hoplon.markdown.para_node.call(null,G__206097,G__206098));
})(),(function (){var G__206103 = cljs.core.PersistentArrayMap.EMPTY;
var G__206104 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$Dg(x)=\\frac{g(x+dx)-g(x)}{dx}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206103,G__206104) : tailrecursion.hoplon.markdown.para_node.call(null,G__206103,G__206104));
})(),(function (){var G__206105 = cljs.core.PersistentArrayMap.EMPTY;
var G__206106 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, we can express the idea of derivative (taking \\(dx\\) to be, say, 0.00001) as the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206105,G__206106) : tailrecursion.hoplon.markdown.para_node.call(null,G__206105,G__206106));
})(),(function (){var G__206165 = (function (){var G__206166 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206167 = (function (){var G__206168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206169 = "(";
var G__206170 = (function (){var G__206196 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206197 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206196,G__206197) : tailrecursion.hoplon.span.call(null,G__206196,G__206197));
})();
var G__206171 = (function (){var G__206198 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206199 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206198,G__206199) : tailrecursion.hoplon.span.call(null,G__206198,G__206199));
})();
var G__206172 = " [";
var G__206173 = (function (){var G__206200 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206201 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206200,G__206201) : tailrecursion.hoplon.span.call(null,G__206200,G__206201));
})();
var G__206174 = "]\n  (";
var G__206175 = (function (){var G__206202 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206203 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206202,G__206203) : tailrecursion.hoplon.span.call(null,G__206202,G__206203));
})();
var G__206176 = "[";
var G__206177 = (function (){var G__206204 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206205 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206204,G__206205) : tailrecursion.hoplon.span.call(null,G__206204,G__206205));
})();
var G__206178 = "] (";
var G__206179 = (function (){var G__206206 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206207 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206206,G__206207) : tailrecursion.hoplon.span.call(null,G__206206,G__206207));
})();
var G__206180 = "(";
var G__206181 = (function (){var G__206208 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206209 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206208,G__206209) : tailrecursion.hoplon.span.call(null,G__206208,G__206209));
})();
var G__206182 = "(";
var G__206183 = (function (){var G__206210 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206211 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206210,G__206211) : tailrecursion.hoplon.span.call(null,G__206210,G__206211));
})();
var G__206184 = " (";
var G__206185 = (function (){var G__206212 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206213 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206212,G__206213) : tailrecursion.hoplon.span.call(null,G__206212,G__206213));
})();
var G__206186 = (function (){var G__206214 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206215 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206214,G__206215) : tailrecursion.hoplon.span.call(null,G__206214,G__206215));
})();
var G__206187 = " ";
var G__206188 = (function (){var G__206216 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206217 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206216,G__206217) : tailrecursion.hoplon.span.call(null,G__206216,G__206217));
})();
var G__206189 = ")) (";
var G__206190 = (function (){var G__206218 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206219 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206218,G__206219) : tailrecursion.hoplon.span.call(null,G__206218,G__206219));
})();
var G__206191 = " ";
var G__206192 = (function (){var G__206220 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206221 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206220,G__206221) : tailrecursion.hoplon.span.call(null,G__206220,G__206221));
})();
var G__206193 = ")) ";
var G__206194 = (function (){var G__206222 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206223 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206222,G__206223) : tailrecursion.hoplon.span.call(null,G__206222,G__206223));
})();
var G__206195 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__206168,G__206169,G__206170,G__206171,G__206172,G__206173,G__206174,G__206175,G__206176,G__206177,G__206178,G__206179,G__206180,G__206181,G__206182,G__206183,G__206184,G__206185,G__206186,G__206187,G__206188,G__206189,G__206190,G__206191,G__206192,G__206193,G__206194,G__206195) : tailrecursion.hoplon.pre.call(null,G__206168,G__206169,G__206170,G__206171,G__206172,G__206173,G__206174,G__206175,G__206176,G__206177,G__206178,G__206179,G__206180,G__206181,G__206182,G__206183,G__206184,G__206185,G__206186,G__206187,G__206188,G__206189,G__206190,G__206191,G__206192,G__206193,G__206194,G__206195));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206166,G__206167) : tailrecursion.hoplon.div.call(null,G__206166,G__206167));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206165) : tailrecursion.hoplon.div.call(null,G__206165));
})(),(function (){var G__206224 = cljs.core.PersistentArrayMap.EMPTY;
var G__206225 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["along with the definition"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206224,G__206225) : tailrecursion.hoplon.markdown.para_node.call(null,G__206224,G__206225));
})(),(function (){var G__206241 = (function (){var G__206242 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206243 = (function (){var G__206244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206245 = "(";
var G__206246 = (function (){var G__206251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206252 = "def ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206251,G__206252) : tailrecursion.hoplon.span.call(null,G__206251,G__206252));
})();
var G__206247 = (function (){var G__206253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206254 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206253,G__206254) : tailrecursion.hoplon.span.call(null,G__206253,G__206254));
})();
var G__206248 = " ";
var G__206249 = (function (){var G__206255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206256 = "0.00001";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206255,G__206256) : tailrecursion.hoplon.span.call(null,G__206255,G__206256));
})();
var G__206250 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$7 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$7(G__206244,G__206245,G__206246,G__206247,G__206248,G__206249,G__206250) : tailrecursion.hoplon.pre.call(null,G__206244,G__206245,G__206246,G__206247,G__206248,G__206249,G__206250));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206242,G__206243) : tailrecursion.hoplon.div.call(null,G__206242,G__206243));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206241) : tailrecursion.hoplon.div.call(null,G__206241));
})(),(function (){var G__206257 = cljs.core.PersistentArrayMap.EMPTY;
var G__206258 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Like ",(function (){var G__206259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"average-damp"], null);
var G__206260 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206259,G__206260) : tailrecursion.hoplon.markdown.code_node.call(null,G__206259,G__206260));
})(),", ",(function (){var G__206261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"deriv"], null);
var G__206262 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206261,G__206262) : tailrecursion.hoplon.markdown.code_node.call(null,G__206261,G__206262));
})()," is a procedure that takes a procedure as argument and returns a procedure as value. For example, to approximate the derivative of \\(x\\to x^3\\) at 5 (whose exact value is 75) we can evaluate"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206257,G__206258) : tailrecursion.hoplon.markdown.para_node.call(null,G__206257,G__206258));
})(),(function (){var G__206309 = (function (){var G__206310 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206311 = (function (){var G__206312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206313 = "(";
var G__206314 = (function (){var G__206334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206335 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206334,G__206335) : tailrecursion.hoplon.span.call(null,G__206334,G__206335));
})();
var G__206315 = (function (){var G__206336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206337 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206336,G__206337) : tailrecursion.hoplon.span.call(null,G__206336,G__206337));
})();
var G__206316 = " [";
var G__206317 = (function (){var G__206338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206339 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206338,G__206339) : tailrecursion.hoplon.span.call(null,G__206338,G__206339));
})();
var G__206318 = "] (";
var G__206319 = (function (){var G__206340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206341 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206340,G__206341) : tailrecursion.hoplon.span.call(null,G__206340,G__206341));
})();
var G__206320 = (function (){var G__206342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206343 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206342,G__206343) : tailrecursion.hoplon.span.call(null,G__206342,G__206343));
})();
var G__206321 = " ";
var G__206322 = (function (){var G__206344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206345 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206344,G__206345) : tailrecursion.hoplon.span.call(null,G__206344,G__206345));
})();
var G__206323 = " ";
var G__206324 = (function (){var G__206346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206347 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206346,G__206347) : tailrecursion.hoplon.span.call(null,G__206346,G__206347));
})();
var G__206325 = "))\n((";
var G__206326 = (function (){var G__206348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206349 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206348,G__206349) : tailrecursion.hoplon.span.call(null,G__206348,G__206349));
})();
var G__206327 = " ";
var G__206328 = (function (){var G__206350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206351 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206350,G__206351) : tailrecursion.hoplon.span.call(null,G__206350,G__206351));
})();
var G__206329 = ") ";
var G__206330 = (function (){var G__206352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206353 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206352,G__206353) : tailrecursion.hoplon.span.call(null,G__206352,G__206353));
})();
var G__206331 = ")\n";
var G__206332 = (function (){var G__206354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206355 = "75.00014999664018";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206354,G__206355) : tailrecursion.hoplon.span.call(null,G__206354,G__206355));
})();
var G__206333 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__206312,G__206313,G__206314,G__206315,G__206316,G__206317,G__206318,G__206319,G__206320,G__206321,G__206322,G__206323,G__206324,G__206325,G__206326,G__206327,G__206328,G__206329,G__206330,G__206331,G__206332,G__206333) : tailrecursion.hoplon.pre.call(null,G__206312,G__206313,G__206314,G__206315,G__206316,G__206317,G__206318,G__206319,G__206320,G__206321,G__206322,G__206323,G__206324,G__206325,G__206326,G__206327,G__206328,G__206329,G__206330,G__206331,G__206332,G__206333));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206310,G__206311) : tailrecursion.hoplon.div.call(null,G__206310,G__206311));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206309) : tailrecursion.hoplon.div.call(null,G__206309));
})(),(function (){var G__206356 = cljs.core.PersistentArrayMap.EMPTY;
var G__206357 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the aid of ",(function (){var G__206358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"deriv"], null);
var G__206359 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206358,G__206359) : tailrecursion.hoplon.markdown.code_node.call(null,G__206358,G__206359));
})(),", we can express Newton",(function (){var G__206360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206361 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206360,G__206361) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206360,G__206361));
})(),"s method as a fixed-point process:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206356,G__206357) : tailrecursion.hoplon.markdown.para_node.call(null,G__206356,G__206357));
})(),(function (){var G__206447 = (function (){var G__206448 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206449 = (function (){var G__206450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206451 = "(";
var G__206452 = (function (){var G__206491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206492 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206491,G__206492) : tailrecursion.hoplon.span.call(null,G__206491,G__206492));
})();
var G__206453 = (function (){var G__206493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206494 = "newton-transform";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206493,G__206494) : tailrecursion.hoplon.span.call(null,G__206493,G__206494));
})();
var G__206454 = " [";
var G__206455 = (function (){var G__206495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206496 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206495,G__206496) : tailrecursion.hoplon.span.call(null,G__206495,G__206496));
})();
var G__206456 = "]\n  (";
var G__206457 = (function (){var G__206497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206498 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206497,G__206498) : tailrecursion.hoplon.span.call(null,G__206497,G__206498));
})();
var G__206458 = "[";
var G__206459 = (function (){var G__206499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206500 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206499,G__206500) : tailrecursion.hoplon.span.call(null,G__206499,G__206500));
})();
var G__206460 = "] (";
var G__206461 = (function (){var G__206501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206502 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206501,G__206502) : tailrecursion.hoplon.span.call(null,G__206501,G__206502));
})();
var G__206462 = (function (){var G__206503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206504 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206503,G__206504) : tailrecursion.hoplon.span.call(null,G__206503,G__206504));
})();
var G__206463 = " (";
var G__206464 = (function (){var G__206505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206506 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206505,G__206506) : tailrecursion.hoplon.span.call(null,G__206505,G__206506));
})();
var G__206465 = "(";
var G__206466 = (function (){var G__206507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206508 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206507,G__206508) : tailrecursion.hoplon.span.call(null,G__206507,G__206508));
})();
var G__206467 = " ";
var G__206468 = (function (){var G__206509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206510 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206509,G__206510) : tailrecursion.hoplon.span.call(null,G__206509,G__206510));
})();
var G__206469 = ") ((";
var G__206470 = (function (){var G__206511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206512 = "deriv";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206511,G__206512) : tailrecursion.hoplon.span.call(null,G__206511,G__206512));
})();
var G__206471 = " ";
var G__206472 = (function (){var G__206513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206514 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206513,G__206514) : tailrecursion.hoplon.span.call(null,G__206513,G__206514));
})();
var G__206473 = ") ";
var G__206474 = (function (){var G__206515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206516 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206515,G__206516) : tailrecursion.hoplon.span.call(null,G__206515,G__206516));
})();
var G__206475 = ")))))\n(";
var G__206476 = (function (){var G__206517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206518 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206517,G__206518) : tailrecursion.hoplon.span.call(null,G__206517,G__206518));
})();
var G__206477 = (function (){var G__206519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206520 = "newtons-method";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206519,G__206520) : tailrecursion.hoplon.span.call(null,G__206519,G__206520));
})();
var G__206478 = " [";
var G__206479 = (function (){var G__206521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206522 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206521,G__206522) : tailrecursion.hoplon.span.call(null,G__206521,G__206522));
})();
var G__206480 = " ";
var G__206481 = (function (){var G__206523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206524 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206523,G__206524) : tailrecursion.hoplon.span.call(null,G__206523,G__206524));
})();
var G__206482 = "]\n  (";
var G__206483 = (function (){var G__206525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206526 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206525,G__206526) : tailrecursion.hoplon.span.call(null,G__206525,G__206526));
})();
var G__206484 = " (";
var G__206485 = (function (){var G__206527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206528 = "newton-transform";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206527,G__206528) : tailrecursion.hoplon.span.call(null,G__206527,G__206528));
})();
var G__206486 = " ";
var G__206487 = (function (){var G__206529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206530 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206529,G__206530) : tailrecursion.hoplon.span.call(null,G__206529,G__206530));
})();
var G__206488 = ") ";
var G__206489 = (function (){var G__206531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206532 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206531,G__206532) : tailrecursion.hoplon.span.call(null,G__206531,G__206532));
})();
var G__206490 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__206450,G__206451,G__206452,G__206453,G__206454,G__206455,G__206456,G__206457,G__206458,G__206459,G__206460,G__206461,G__206462,G__206463,G__206464,G__206465,G__206466,G__206467,G__206468,G__206469,G__206470,G__206471,G__206472,G__206473,G__206474,G__206475,G__206476,G__206477,G__206478,G__206479,G__206480,G__206481,G__206482,G__206483,G__206484,G__206485,G__206486,G__206487,G__206488,G__206489,G__206490) : tailrecursion.hoplon.pre.call(null,G__206450,G__206451,G__206452,G__206453,G__206454,G__206455,G__206456,G__206457,G__206458,G__206459,G__206460,G__206461,G__206462,G__206463,G__206464,G__206465,G__206466,G__206467,G__206468,G__206469,G__206470,G__206471,G__206472,G__206473,G__206474,G__206475,G__206476,G__206477,G__206478,G__206479,G__206480,G__206481,G__206482,G__206483,G__206484,G__206485,G__206486,G__206487,G__206488,G__206489,G__206490));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206448,G__206449) : tailrecursion.hoplon.div.call(null,G__206448,G__206449));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206447) : tailrecursion.hoplon.div.call(null,G__206447));
})(),(function (){var G__206533 = cljs.core.PersistentArrayMap.EMPTY;
var G__206534 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__206535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"newton-transform"], null);
var G__206536 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206535,G__206536) : tailrecursion.hoplon.markdown.code_node.call(null,G__206535,G__206536));
})()," procedure expresses the formula at the beginning of this section, and ",(function (){var G__206537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"newtons-method"], null);
var G__206538 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206537,G__206538) : tailrecursion.hoplon.markdown.code_node.call(null,G__206537,G__206538));
})()," is readily defined in terms of this. It takes as arguments a procedure that computes the function for which we want to find a zero, together with an initial guess. For instance, to find the square root of \\(x\\), we can use Newton",(function (){var G__206539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206540 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206539,G__206540) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206539,G__206540));
})(),"s method to find a zero of the function \\(y\\to y^2 - x\\) starting with an initial guess of 1.",(function (){var G__206541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__206542 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For finding square roots, Newton's method converges rapidly to the correct solution from any starting point."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__206541,G__206542) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__206541,G__206542));
})()," This provides yet another form of the square-root procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206533,G__206534) : tailrecursion.hoplon.markdown.para_node.call(null,G__206533,G__206534));
})(),(function (){var G__206586 = (function (){var G__206587 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206588 = (function (){var G__206589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206590 = "(";
var G__206591 = (function (){var G__206610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206611 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206610,G__206611) : tailrecursion.hoplon.span.call(null,G__206610,G__206611));
})();
var G__206592 = (function (){var G__206612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206613 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206612,G__206613) : tailrecursion.hoplon.span.call(null,G__206612,G__206613));
})();
var G__206593 = " [";
var G__206594 = (function (){var G__206614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206615 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206614,G__206615) : tailrecursion.hoplon.span.call(null,G__206614,G__206615));
})();
var G__206595 = "]\n  (";
var G__206596 = (function (){var G__206616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206617 = "newtons-method";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206616,G__206617) : tailrecursion.hoplon.span.call(null,G__206616,G__206617));
})();
var G__206597 = " ";
var G__206598 = (function (){var G__206618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206619 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206618,G__206619) : tailrecursion.hoplon.span.call(null,G__206618,G__206619));
})();
var G__206599 = "(";
var G__206600 = (function (){var G__206620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206621 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206620,G__206621) : tailrecursion.hoplon.span.call(null,G__206620,G__206621));
})();
var G__206601 = "(";
var G__206602 = (function (){var G__206622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206623 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206622,G__206623) : tailrecursion.hoplon.span.call(null,G__206622,G__206623));
})();
var G__206603 = " ";
var G__206604 = (function (){var G__206624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206625 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206624,G__206625) : tailrecursion.hoplon.span.call(null,G__206624,G__206625));
})();
var G__206605 = ") ";
var G__206606 = (function (){var G__206626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206627 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206626,G__206627) : tailrecursion.hoplon.span.call(null,G__206626,G__206627));
})();
var G__206607 = ")\n                  ";
var G__206608 = (function (){var G__206628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206629 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206628,G__206629) : tailrecursion.hoplon.span.call(null,G__206628,G__206629));
})();
var G__206609 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__206589,G__206590,G__206591,G__206592,G__206593,G__206594,G__206595,G__206596,G__206597,G__206598,G__206599,G__206600,G__206601,G__206602,G__206603,G__206604,G__206605,G__206606,G__206607,G__206608,G__206609) : tailrecursion.hoplon.pre.call(null,G__206589,G__206590,G__206591,G__206592,G__206593,G__206594,G__206595,G__206596,G__206597,G__206598,G__206599,G__206600,G__206601,G__206602,G__206603,G__206604,G__206605,G__206606,G__206607,G__206608,G__206609));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206587,G__206588) : tailrecursion.hoplon.div.call(null,G__206587,G__206588));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206586) : tailrecursion.hoplon.div.call(null,G__206586));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206080;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206079;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206078;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206077;
}})()], 0));
var G__194658 = "";
var G__194659 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Abstractions and First-class Procedures"], null),(function (){var _STAR_references_STAR_206630 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206631 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_206632 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206633 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__206634 = cljs.core.PersistentArrayMap.EMPTY;
var G__206635 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We",(function (){var G__206636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206637 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206636,G__206637) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206636,G__206637));
})(),"ve seen two ways to express the square-root computation as an instance of a more general method, once as a fixed-point search and once using Newton",(function (){var G__206638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206639 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206638,G__206639) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206638,G__206639));
})(),"s method. Since Newton",(function (){var G__206640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206641 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206640,G__206641) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206640,G__206641));
})(),"s method was itself expressed as a fixed-point process, we actually saw two ways to compute square roots as fixed points. Each method begins with a function and finds a fixed point of some transformation of the function. We can express this general idea itself as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206634,G__206635) : tailrecursion.hoplon.markdown.para_node.call(null,G__206634,G__206635));
})(),(function (){var G__206681 = (function (){var G__206682 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206683 = (function (){var G__206684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206685 = "(";
var G__206686 = (function (){var G__206703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206704 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206703,G__206704) : tailrecursion.hoplon.span.call(null,G__206703,G__206704));
})();
var G__206687 = (function (){var G__206705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206706 = "fixed-point-of-transform";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206705,G__206706) : tailrecursion.hoplon.span.call(null,G__206705,G__206706));
})();
var G__206688 = " [";
var G__206689 = (function (){var G__206707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206708 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206707,G__206708) : tailrecursion.hoplon.span.call(null,G__206707,G__206708));
})();
var G__206690 = " ";
var G__206691 = (function (){var G__206709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206710 = "transform";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206709,G__206710) : tailrecursion.hoplon.span.call(null,G__206709,G__206710));
})();
var G__206692 = " ";
var G__206693 = (function (){var G__206711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206712 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206711,G__206712) : tailrecursion.hoplon.span.call(null,G__206711,G__206712));
})();
var G__206694 = "]\n  (";
var G__206695 = (function (){var G__206713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206714 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206713,G__206714) : tailrecursion.hoplon.span.call(null,G__206713,G__206714));
})();
var G__206696 = " (";
var G__206697 = (function (){var G__206715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206716 = "transform";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206715,G__206716) : tailrecursion.hoplon.span.call(null,G__206715,G__206716));
})();
var G__206698 = " ";
var G__206699 = (function (){var G__206717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206718 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206717,G__206718) : tailrecursion.hoplon.span.call(null,G__206717,G__206718));
})();
var G__206700 = ") ";
var G__206701 = (function (){var G__206719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206720 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206719,G__206720) : tailrecursion.hoplon.span.call(null,G__206719,G__206720));
})();
var G__206702 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__206684,G__206685,G__206686,G__206687,G__206688,G__206689,G__206690,G__206691,G__206692,G__206693,G__206694,G__206695,G__206696,G__206697,G__206698,G__206699,G__206700,G__206701,G__206702) : tailrecursion.hoplon.pre.call(null,G__206684,G__206685,G__206686,G__206687,G__206688,G__206689,G__206690,G__206691,G__206692,G__206693,G__206694,G__206695,G__206696,G__206697,G__206698,G__206699,G__206700,G__206701,G__206702));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206682,G__206683) : tailrecursion.hoplon.div.call(null,G__206682,G__206683));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206681) : tailrecursion.hoplon.div.call(null,G__206681));
})(),(function (){var G__206721 = cljs.core.PersistentArrayMap.EMPTY;
var G__206722 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This very general procedure takes as its arguments a procedure ",(function (){var G__206723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"g"], null);
var G__206724 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206723,G__206724) : tailrecursion.hoplon.markdown.code_node.call(null,G__206723,G__206724));
})()," that computes some function, a procedure that transforms ",(function (){var G__206725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"g"], null);
var G__206726 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206725,G__206726) : tailrecursion.hoplon.markdown.code_node.call(null,G__206725,G__206726));
})(),", and an initial guess. The returned result is a fixed point of the transformed function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206721,G__206722) : tailrecursion.hoplon.markdown.para_node.call(null,G__206721,G__206722));
})(),(function (){var G__206727 = cljs.core.PersistentArrayMap.EMPTY;
var G__206728 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this abstraction, we can recast the first square-root computation from this section (where we look for a fixed point of the average-damped version of \\(y\\to x/y\\)) as an instance of this general method:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206727,G__206728) : tailrecursion.hoplon.markdown.para_node.call(null,G__206727,G__206728));
})(),(function (){var G__206771 = (function (){var G__206772 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206773 = (function (){var G__206774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206775 = "(";
var G__206776 = (function (){var G__206794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206795 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206794,G__206795) : tailrecursion.hoplon.span.call(null,G__206794,G__206795));
})();
var G__206777 = (function (){var G__206796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206797 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206796,G__206797) : tailrecursion.hoplon.span.call(null,G__206796,G__206797));
})();
var G__206778 = " [";
var G__206779 = (function (){var G__206798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206799 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206798,G__206799) : tailrecursion.hoplon.span.call(null,G__206798,G__206799));
})();
var G__206780 = "]\n  (";
var G__206781 = (function (){var G__206800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206801 = "fixed-point-of-transform";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206800,G__206801) : tailrecursion.hoplon.span.call(null,G__206800,G__206801));
})();
var G__206782 = " ";
var G__206783 = (function (){var G__206802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206803 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206802,G__206803) : tailrecursion.hoplon.span.call(null,G__206802,G__206803));
})();
var G__206784 = "(";
var G__206785 = (function (){var G__206804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206805 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206804,G__206805) : tailrecursion.hoplon.span.call(null,G__206804,G__206805));
})();
var G__206786 = (function (){var G__206806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206807 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206806,G__206807) : tailrecursion.hoplon.span.call(null,G__206806,G__206807));
})();
var G__206787 = " ";
var G__206788 = (function (){var G__206808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206809 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206808,G__206809) : tailrecursion.hoplon.span.call(null,G__206808,G__206809));
})();
var G__206789 = ")\n                            ";
var G__206790 = (function (){var G__206810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206811 = "average-damp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206810,G__206811) : tailrecursion.hoplon.span.call(null,G__206810,G__206811));
})();
var G__206791 = "\n                            ";
var G__206792 = (function (){var G__206812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206813 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206812,G__206813) : tailrecursion.hoplon.span.call(null,G__206812,G__206813));
})();
var G__206793 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$20(G__206774,G__206775,G__206776,G__206777,G__206778,G__206779,G__206780,G__206781,G__206782,G__206783,G__206784,G__206785,G__206786,G__206787,G__206788,G__206789,G__206790,G__206791,G__206792,G__206793) : tailrecursion.hoplon.pre.call(null,G__206774,G__206775,G__206776,G__206777,G__206778,G__206779,G__206780,G__206781,G__206782,G__206783,G__206784,G__206785,G__206786,G__206787,G__206788,G__206789,G__206790,G__206791,G__206792,G__206793));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206772,G__206773) : tailrecursion.hoplon.div.call(null,G__206772,G__206773));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206771) : tailrecursion.hoplon.div.call(null,G__206771));
})(),(function (){var G__206814 = cljs.core.PersistentArrayMap.EMPTY;
var G__206815 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Similarly, we can express the second square-root computation from this section (an instance of Newton",(function (){var G__206816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206817 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206816,G__206817) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206816,G__206817));
})(),"s method that finds a fixed point of the Newton transform of \\(y\\to y^2 - x\\)) as"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206814,G__206815) : tailrecursion.hoplon.markdown.para_node.call(null,G__206814,G__206815));
})(),(function (){var G__206865 = (function (){var G__206866 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206867 = (function (){var G__206868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__206869 = "(";
var G__206870 = (function (){var G__206891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__206892 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206891,G__206892) : tailrecursion.hoplon.span.call(null,G__206891,G__206892));
})();
var G__206871 = (function (){var G__206893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206894 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206893,G__206894) : tailrecursion.hoplon.span.call(null,G__206893,G__206894));
})();
var G__206872 = " [";
var G__206873 = (function (){var G__206895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206896 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206895,G__206896) : tailrecursion.hoplon.span.call(null,G__206895,G__206896));
})();
var G__206874 = "]\n  (";
var G__206875 = (function (){var G__206897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206898 = "fixed-point-of-transform";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206897,G__206898) : tailrecursion.hoplon.span.call(null,G__206897,G__206898));
})();
var G__206876 = " ";
var G__206877 = (function (){var G__206899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206900 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206899,G__206900) : tailrecursion.hoplon.span.call(null,G__206899,G__206900));
})();
var G__206878 = "(";
var G__206879 = (function (){var G__206901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__206902 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206901,G__206902) : tailrecursion.hoplon.span.call(null,G__206901,G__206902));
})();
var G__206880 = "(";
var G__206881 = (function (){var G__206903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__206904 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206903,G__206904) : tailrecursion.hoplon.span.call(null,G__206903,G__206904));
})();
var G__206882 = " ";
var G__206883 = (function (){var G__206905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206906 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206905,G__206906) : tailrecursion.hoplon.span.call(null,G__206905,G__206906));
})();
var G__206884 = ") ";
var G__206885 = (function (){var G__206907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206908 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206907,G__206908) : tailrecursion.hoplon.span.call(null,G__206907,G__206908));
})();
var G__206886 = ")\n                            ";
var G__206887 = (function (){var G__206909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__206910 = "newton-transform";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206909,G__206910) : tailrecursion.hoplon.span.call(null,G__206909,G__206910));
})();
var G__206888 = "\n                            ";
var G__206889 = (function (){var G__206911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__206912 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__206911,G__206912) : tailrecursion.hoplon.span.call(null,G__206911,G__206912));
})();
var G__206890 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$23(G__206868,G__206869,G__206870,G__206871,G__206872,G__206873,G__206874,G__206875,G__206876,G__206877,G__206878,G__206879,G__206880,G__206881,G__206882,G__206883,G__206884,G__206885,G__206886,G__206887,G__206888,G__206889,G__206890) : tailrecursion.hoplon.pre.call(null,G__206868,G__206869,G__206870,G__206871,G__206872,G__206873,G__206874,G__206875,G__206876,G__206877,G__206878,G__206879,G__206880,G__206881,G__206882,G__206883,G__206884,G__206885,G__206886,G__206887,G__206888,G__206889,G__206890));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206866,G__206867) : tailrecursion.hoplon.div.call(null,G__206866,G__206867));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206865) : tailrecursion.hoplon.div.call(null,G__206865));
})(),(function (){var G__206913 = cljs.core.PersistentArrayMap.EMPTY;
var G__206914 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We began ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/3/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.3"], null)], 0))," with the observation that compound procedures are a crucial abstraction mechanism, because they permit us to express general methods of computing as explicit elements in our programming language. Now we",(function (){var G__206915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206916 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206915,G__206916) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206915,G__206916));
})(),"ve seen how higher-order procedures permit us to manipulate these general methods to create further abstractions."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206913,G__206914) : tailrecursion.hoplon.markdown.para_node.call(null,G__206913,G__206914));
})(),(function (){var G__206917 = cljs.core.PersistentArrayMap.EMPTY;
var G__206918 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As programmers, we should be alert to opportunities to identify the underlying abstractions in our programs and to build upon them and generalize them to create more powerful abstractions. This is not to say that one should always write programs in the most abstract way possible; expert programmers know how to choose the level of abstraction appropriate to their task. But it is important to be able to think in terms of these abstractions, so that we can be ready to apply them in new contexts. The significance of higher-order procedures is that they enable us to represent these abstractions explicitly as elements in our programming language, so that they can be handled just like other computational elements."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206917,G__206918) : tailrecursion.hoplon.markdown.para_node.call(null,G__206917,G__206918));
})(),(function (){var G__206919 = cljs.core.PersistentArrayMap.EMPTY;
var G__206920 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, programming languages impose restrictions on the ways in which computational elements can be manipulated. Elements with the fewest restrictions are said to have ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["first-class"], null)], 0))," status. Some of the ",(function (){var G__206921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__206922 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["rights and privileges"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__206921,G__206922) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__206921,G__206922));
})()," of first-class elements are:",(function (){var G__206923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__206924 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The notion of first-class status of programming-language elements is due to the British computer scientist Christopher Strachey (1916-1975)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__206923,G__206924) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__206923,G__206924));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206919,G__206920) : tailrecursion.hoplon.markdown.para_node.call(null,G__206919,G__206920));
})(),(function (){var G__206925 = cljs.core.PersistentArrayMap.EMPTY;
var G__206926 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__206927 = cljs.core.PersistentArrayMap.EMPTY;
var G__206928 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__206929 = cljs.core.PersistentArrayMap.EMPTY;
var G__206930 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["They may be named by variables."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206929,G__206930) : tailrecursion.hoplon.markdown.para_node.call(null,G__206929,G__206930));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__206927,G__206928) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__206927,G__206928));
})(),(function (){var G__206931 = cljs.core.PersistentArrayMap.EMPTY;
var G__206932 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_206933 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206934 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__206935 = cljs.core.PersistentArrayMap.EMPTY;
var G__206936 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["They may be passed as arguments to procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206935,G__206936) : tailrecursion.hoplon.markdown.para_node.call(null,G__206935,G__206936));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206934;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206933;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__206931,G__206932) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__206931,G__206932));
})(),(function (){var G__206937 = cljs.core.PersistentArrayMap.EMPTY;
var G__206938 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_206939 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206940 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__206941 = cljs.core.PersistentArrayMap.EMPTY;
var G__206942 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["They may be returned as the results of procedures."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206941,G__206942) : tailrecursion.hoplon.markdown.para_node.call(null,G__206941,G__206942));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206940;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206939;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__206937,G__206938) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__206937,G__206938));
})(),(function (){var G__206943 = cljs.core.PersistentArrayMap.EMPTY;
var G__206944 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_206945 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206946 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__206947 = cljs.core.PersistentArrayMap.EMPTY;
var G__206948 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["They may be included in data structures.",(function (){var G__206949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__206950 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We'll see examples of this after we introduce data structures in chapter 2."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__206949,G__206950) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__206949,G__206950));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206947,G__206948) : tailrecursion.hoplon.markdown.para_node.call(null,G__206947,G__206948));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206946;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206945;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__206943,G__206944) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__206943,G__206944));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__206925,G__206926) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__206925,G__206926));
})(),(function (){var G__206951 = cljs.core.PersistentArrayMap.EMPTY;
var G__206952 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lisp, unlike other common programming languages, awards procedures full first-class status. This poses challenges for efficient implementation, but the resulting gain in expressive power is enormous.",(function (){var G__206953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__206954 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The major implementation cost of first-class procedures is that allowing procedures to be returned as values requires reserving storage for a procedure",(function (){var G__206955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206956 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206955,G__206956) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206955,G__206956));
})(),"s free variables even while the procedure is not executing. In the Scheme implementation we will study in section 4.1, these variables are stored in the procedure",(function (){var G__206957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__206958 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__206957,G__206958) : tailrecursion.hoplon.markdown.simple_node.call(null,G__206957,G__206958));
})(),"s environment."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__206953,G__206954) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__206953,G__206954));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206951,G__206952) : tailrecursion.hoplon.markdown.para_node.call(null,G__206951,G__206952));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206633;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206632;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206631;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206630;
}})()], 0));
var G__194660 = "";
var G__194661 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_206959 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206960 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_206961 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_206962 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__206963 = cljs.core.PersistentArrayMap.EMPTY;
var G__206964 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__206965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"cubic"], null);
var G__206966 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206965,G__206966) : tailrecursion.hoplon.markdown.code_node.call(null,G__206965,G__206966));
})()," that can be used together with the ",(function (){var G__206967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"newtons-method"], null);
var G__206968 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__206967,G__206968) : tailrecursion.hoplon.markdown.code_node.call(null,G__206967,G__206968));
})()," procedure in expressions of the form"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__206963,G__206964) : tailrecursion.hoplon.markdown.para_node.call(null,G__206963,G__206964));
})(),(function (){var G__206997 = (function (){var G__206998 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__206999 = (function (){var G__207000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__207001 = "(";
var G__207002 = (function (){var G__207014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207015 = "newtons-method";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207014,G__207015) : tailrecursion.hoplon.span.call(null,G__207014,G__207015));
})();
var G__207003 = " (";
var G__207004 = (function (){var G__207016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207017 = "cubic";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207016,G__207017) : tailrecursion.hoplon.span.call(null,G__207016,G__207017));
})();
var G__207005 = " ";
var G__207006 = (function (){var G__207018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207019 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207018,G__207019) : tailrecursion.hoplon.span.call(null,G__207018,G__207019));
})();
var G__207007 = " ";
var G__207008 = (function (){var G__207020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207021 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207020,G__207021) : tailrecursion.hoplon.span.call(null,G__207020,G__207021));
})();
var G__207009 = " ";
var G__207010 = (function (){var G__207022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207023 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207022,G__207023) : tailrecursion.hoplon.span.call(null,G__207022,G__207023));
})();
var G__207011 = ") ";
var G__207012 = (function (){var G__207024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207025 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207024,G__207025) : tailrecursion.hoplon.span.call(null,G__207024,G__207025));
})();
var G__207013 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__207000,G__207001,G__207002,G__207003,G__207004,G__207005,G__207006,G__207007,G__207008,G__207009,G__207010,G__207011,G__207012,G__207013) : tailrecursion.hoplon.pre.call(null,G__207000,G__207001,G__207002,G__207003,G__207004,G__207005,G__207006,G__207007,G__207008,G__207009,G__207010,G__207011,G__207012,G__207013));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__206998,G__206999) : tailrecursion.hoplon.div.call(null,G__206998,G__206999));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__206997) : tailrecursion.hoplon.div.call(null,G__206997));
})(),(function (){var G__207026 = cljs.core.PersistentArrayMap.EMPTY;
var G__207027 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to approximate zeros of the cubic \\(x^3+ax^2+bx+c\\). Use it to approximate the zeros of several cubic functions and check your answers on ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"http://www.wolframalpha.com",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Wolfram Alpha"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__207026,G__207027) : tailrecursion.hoplon.markdown.para_node.call(null,G__207026,G__207027));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206962;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206961;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_206960;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_206959;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_207028 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207029 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_207030 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207031 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__207105 = (function (){var G__207106 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__207107 = (function (){var G__207108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__207109 = "(";
var G__207110 = (function (){var G__207143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__207144 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207143,G__207144) : tailrecursion.hoplon.span.call(null,G__207143,G__207144));
})();
var G__207111 = (function (){var G__207145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207146 = "cubic";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207145,G__207146) : tailrecursion.hoplon.span.call(null,G__207145,G__207146));
})();
var G__207112 = " [";
var G__207113 = (function (){var G__207147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207148 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207147,G__207148) : tailrecursion.hoplon.span.call(null,G__207147,G__207148));
})();
var G__207114 = " ";
var G__207115 = (function (){var G__207149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207150 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207149,G__207150) : tailrecursion.hoplon.span.call(null,G__207149,G__207150));
})();
var G__207116 = " ";
var G__207117 = (function (){var G__207151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207152 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207151,G__207152) : tailrecursion.hoplon.span.call(null,G__207151,G__207152));
})();
var G__207118 = "]\n  (";
var G__207119 = (function (){var G__207153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__207154 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207153,G__207154) : tailrecursion.hoplon.span.call(null,G__207153,G__207154));
})();
var G__207120 = "[";
var G__207121 = (function (){var G__207155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207156 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207155,G__207156) : tailrecursion.hoplon.span.call(null,G__207155,G__207156));
})();
var G__207122 = "] (";
var G__207123 = (function (){var G__207157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__207158 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207157,G__207158) : tailrecursion.hoplon.span.call(null,G__207157,G__207158));
})();
var G__207124 = "(";
var G__207125 = (function (){var G__207159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207160 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207159,G__207160) : tailrecursion.hoplon.span.call(null,G__207159,G__207160));
})();
var G__207126 = " ";
var G__207127 = (function (){var G__207161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207162 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207161,G__207162) : tailrecursion.hoplon.span.call(null,G__207161,G__207162));
})();
var G__207128 = ") (";
var G__207129 = (function (){var G__207163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__207164 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207163,G__207164) : tailrecursion.hoplon.span.call(null,G__207163,G__207164));
})();
var G__207130 = (function (){var G__207165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207166 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207165,G__207166) : tailrecursion.hoplon.span.call(null,G__207165,G__207166));
})();
var G__207131 = " (";
var G__207132 = (function (){var G__207167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207168 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207167,G__207168) : tailrecursion.hoplon.span.call(null,G__207167,G__207168));
})();
var G__207133 = " ";
var G__207134 = (function (){var G__207169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207170 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207169,G__207170) : tailrecursion.hoplon.span.call(null,G__207169,G__207170));
})();
var G__207135 = ")) (";
var G__207136 = (function (){var G__207171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__207172 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207171,G__207172) : tailrecursion.hoplon.span.call(null,G__207171,G__207172));
})();
var G__207137 = (function (){var G__207173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207174 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207173,G__207174) : tailrecursion.hoplon.span.call(null,G__207173,G__207174));
})();
var G__207138 = " ";
var G__207139 = (function (){var G__207175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207176 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207175,G__207176) : tailrecursion.hoplon.span.call(null,G__207175,G__207176));
})();
var G__207140 = ") ";
var G__207141 = (function (){var G__207177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207178 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207177,G__207178) : tailrecursion.hoplon.span.call(null,G__207177,G__207178));
})();
var G__207142 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$35(G__207108,G__207109,G__207110,G__207111,G__207112,G__207113,G__207114,G__207115,G__207116,G__207117,G__207118,G__207119,G__207120,G__207121,G__207122,G__207123,G__207124,G__207125,G__207126,G__207127,G__207128,G__207129,G__207130,G__207131,G__207132,G__207133,G__207134,G__207135,G__207136,G__207137,G__207138,G__207139,G__207140,G__207141,G__207142) : tailrecursion.hoplon.pre.call(null,G__207108,G__207109,G__207110,G__207111,G__207112,G__207113,G__207114,G__207115,G__207116,G__207117,G__207118,G__207119,G__207120,G__207121,G__207122,G__207123,G__207124,G__207125,G__207126,G__207127,G__207128,G__207129,G__207130,G__207131,G__207132,G__207133,G__207134,G__207135,G__207136,G__207137,G__207138,G__207139,G__207140,G__207141,G__207142));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__207106,G__207107) : tailrecursion.hoplon.div.call(null,G__207106,G__207107));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__207105) : tailrecursion.hoplon.div.call(null,G__207105));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207031;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207030;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207029;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207028;
}})()], 0))], 0)),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_207179 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207180 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_207181 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207182 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__207183 = cljs.core.PersistentArrayMap.EMPTY;
var G__207184 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Define a procedure ",(function (){var G__207185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dubs"], null);
var G__207186 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207185,G__207186) : tailrecursion.hoplon.markdown.code_node.call(null,G__207185,G__207186));
})()," ",(function (){var G__207187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__207188 = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["we could have named it ",(function (){var G__207189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"double"], null);
var G__207190 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207189,G__207190) : tailrecursion.hoplon.markdown.code_node.call(null,G__207189,G__207190));
})()," as in the original ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["SICP"], null)], 0)),", but ",(function (){var G__207191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"double"], null);
var G__207192 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207191,G__207192) : tailrecursion.hoplon.markdown.code_node.call(null,G__207191,G__207192));
})()," is already a thing in Clojure. Since ",(function (){var G__207193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"double"], null);
var G__207194 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207193,G__207194) : tailrecursion.hoplon.markdown.code_node.call(null,G__207193,G__207194));
})()," is not a special form, you can redefine it within your environment, but you should just get a warning about it. Either way, it was not very instructive to do so at this time, so I renamed it ",(function (){var G__207195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dubs"], null);
var G__207196 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207195,G__207196) : tailrecursion.hoplon.markdown.code_node.call(null,G__207195,G__207196));
})()], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__207187,G__207188) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__207187,G__207188));
})()," that takes a procedure of one argument as argument and returns a procedure that applies the original procedure twice. For example, if ",(function (){var G__207197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"inc"], null);
var G__207198 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207197,G__207198) : tailrecursion.hoplon.markdown.code_node.call(null,G__207197,G__207198));
})()," is a procedure that adds 1 to its argument, then ",(function (){var G__207199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(dubs inc)"], null);
var G__207200 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207199,G__207200) : tailrecursion.hoplon.markdown.code_node.call(null,G__207199,G__207200));
})()," should be a procedure that adds 2. What value is returned by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__207183,G__207184) : tailrecursion.hoplon.markdown.para_node.call(null,G__207183,G__207184));
})(),(function (){var G__207225 = (function (){var G__207226 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__207227 = (function (){var G__207228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__207229 = "(((";
var G__207230 = (function (){var G__207240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207241 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207240,G__207241) : tailrecursion.hoplon.span.call(null,G__207240,G__207241));
})();
var G__207231 = " (";
var G__207232 = (function (){var G__207242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207243 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207242,G__207243) : tailrecursion.hoplon.span.call(null,G__207242,G__207243));
})();
var G__207233 = " ";
var G__207234 = (function (){var G__207244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207245 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207244,G__207245) : tailrecursion.hoplon.span.call(null,G__207244,G__207245));
})();
var G__207235 = ")) ";
var G__207236 = (function (){var G__207246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207247 = "inc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207246,G__207247) : tailrecursion.hoplon.span.call(null,G__207246,G__207247));
})();
var G__207237 = ") ";
var G__207238 = (function (){var G__207248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207249 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207248,G__207249) : tailrecursion.hoplon.span.call(null,G__207248,G__207249));
})();
var G__207239 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__207228,G__207229,G__207230,G__207231,G__207232,G__207233,G__207234,G__207235,G__207236,G__207237,G__207238,G__207239) : tailrecursion.hoplon.pre.call(null,G__207228,G__207229,G__207230,G__207231,G__207232,G__207233,G__207234,G__207235,G__207236,G__207237,G__207238,G__207239));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__207226,G__207227) : tailrecursion.hoplon.div.call(null,G__207226,G__207227));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__207225) : tailrecursion.hoplon.div.call(null,G__207225));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207182;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207181;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207180;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207179;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_207250 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207251 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_207252 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207253 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__207289 = (function (){var G__207290 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__207291 = (function (){var G__207292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__207293 = "(";
var G__207294 = (function (){var G__207309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__207310 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207309,G__207310) : tailrecursion.hoplon.span.call(null,G__207309,G__207310));
})();
var G__207295 = (function (){var G__207311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207312 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207311,G__207312) : tailrecursion.hoplon.span.call(null,G__207311,G__207312));
})();
var G__207296 = " [";
var G__207297 = (function (){var G__207313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207314 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207313,G__207314) : tailrecursion.hoplon.span.call(null,G__207313,G__207314));
})();
var G__207298 = "]\n  (";
var G__207299 = (function (){var G__207315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__207316 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207315,G__207316) : tailrecursion.hoplon.span.call(null,G__207315,G__207316));
})();
var G__207300 = "[";
var G__207301 = (function (){var G__207317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207318 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207317,G__207318) : tailrecursion.hoplon.span.call(null,G__207317,G__207318));
})();
var G__207302 = "] (";
var G__207303 = (function (){var G__207319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207320 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207319,G__207320) : tailrecursion.hoplon.span.call(null,G__207319,G__207320));
})();
var G__207304 = " (";
var G__207305 = (function (){var G__207321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207322 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207321,G__207322) : tailrecursion.hoplon.span.call(null,G__207321,G__207322));
})();
var G__207306 = " ";
var G__207307 = (function (){var G__207323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207324 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207323,G__207324) : tailrecursion.hoplon.span.call(null,G__207323,G__207324));
})();
var G__207308 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__207292,G__207293,G__207294,G__207295,G__207296,G__207297,G__207298,G__207299,G__207300,G__207301,G__207302,G__207303,G__207304,G__207305,G__207306,G__207307,G__207308) : tailrecursion.hoplon.pre.call(null,G__207292,G__207293,G__207294,G__207295,G__207296,G__207297,G__207298,G__207299,G__207300,G__207301,G__207302,G__207303,G__207304,G__207305,G__207306,G__207307,G__207308));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__207290,G__207291) : tailrecursion.hoplon.div.call(null,G__207290,G__207291));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__207289) : tailrecursion.hoplon.div.call(null,G__207289));
})(),(function (){var G__207528 = (function (){var G__207529 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__207530 = (function (){var G__207531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__207532 = "(((";
var G__207533 = (function (){var G__207630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207631 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207630,G__207631) : tailrecursion.hoplon.span.call(null,G__207630,G__207631));
})();
var G__207534 = " (";
var G__207535 = (function (){var G__207632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207633 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207632,G__207633) : tailrecursion.hoplon.span.call(null,G__207632,G__207633));
})();
var G__207536 = " ";
var G__207537 = (function (){var G__207634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207635 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207634,G__207635) : tailrecursion.hoplon.span.call(null,G__207634,G__207635));
})();
var G__207538 = ")) ";
var G__207539 = (function (){var G__207636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207637 = "inc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207636,G__207637) : tailrecursion.hoplon.span.call(null,G__207636,G__207637));
})();
var G__207540 = ") ";
var G__207541 = (function (){var G__207638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207639 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207638,G__207639) : tailrecursion.hoplon.span.call(null,G__207638,G__207639));
})();
var G__207542 = ")\n(((";
var G__207543 = (function (){var G__207640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207641 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207640,G__207641) : tailrecursion.hoplon.span.call(null,G__207640,G__207641));
})();
var G__207544 = " (";
var G__207545 = (function (){var G__207642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__207643 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207642,G__207643) : tailrecursion.hoplon.span.call(null,G__207642,G__207643));
})();
var G__207546 = "[";
var G__207547 = (function (){var G__207644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207645 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207644,G__207645) : tailrecursion.hoplon.span.call(null,G__207644,G__207645));
})();
var G__207548 = "] (";
var G__207549 = (function (){var G__207646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207647 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207646,G__207647) : tailrecursion.hoplon.span.call(null,G__207646,G__207647));
})();
var G__207550 = " (";
var G__207551 = (function (){var G__207648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207649 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207648,G__207649) : tailrecursion.hoplon.span.call(null,G__207648,G__207649));
})();
var G__207552 = " ";
var G__207553 = (function (){var G__207650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207651 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207650,G__207651) : tailrecursion.hoplon.span.call(null,G__207650,G__207651));
})();
var G__207554 = ")))) ";
var G__207555 = (function (){var G__207652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207653 = "inc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207652,G__207653) : tailrecursion.hoplon.span.call(null,G__207652,G__207653));
})();
var G__207556 = ") ";
var G__207557 = (function (){var G__207654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207655 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207654,G__207655) : tailrecursion.hoplon.span.call(null,G__207654,G__207655));
})();
var G__207558 = ")\n(((";
var G__207559 = (function (){var G__207656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__207657 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207656,G__207657) : tailrecursion.hoplon.span.call(null,G__207656,G__207657));
})();
var G__207560 = "[";
var G__207561 = (function (){var G__207658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207659 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207658,G__207659) : tailrecursion.hoplon.span.call(null,G__207658,G__207659));
})();
var G__207562 = "] (";
var G__207563 = (function (){var G__207660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207661 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207660,G__207661) : tailrecursion.hoplon.span.call(null,G__207660,G__207661));
})();
var G__207564 = " (";
var G__207565 = (function (){var G__207662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207663 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207662,G__207663) : tailrecursion.hoplon.span.call(null,G__207662,G__207663));
})();
var G__207566 = " (";
var G__207567 = (function (){var G__207664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207665 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207664,G__207665) : tailrecursion.hoplon.span.call(null,G__207664,G__207665));
})();
var G__207568 = " ";
var G__207569 = (function (){var G__207666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207667 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207666,G__207667) : tailrecursion.hoplon.span.call(null,G__207666,G__207667));
})();
var G__207570 = ")))) ";
var G__207571 = (function (){var G__207668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207669 = "inc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207668,G__207669) : tailrecursion.hoplon.span.call(null,G__207668,G__207669));
})();
var G__207572 = ") ";
var G__207573 = (function (){var G__207670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207671 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207670,G__207671) : tailrecursion.hoplon.span.call(null,G__207670,G__207671));
})();
var G__207574 = ")\n((";
var G__207575 = (function (){var G__207672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207673 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207672,G__207673) : tailrecursion.hoplon.span.call(null,G__207672,G__207673));
})();
var G__207576 = " (";
var G__207577 = (function (){var G__207674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207675 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207674,G__207675) : tailrecursion.hoplon.span.call(null,G__207674,G__207675));
})();
var G__207578 = " (";
var G__207579 = (function (){var G__207676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207677 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207676,G__207677) : tailrecursion.hoplon.span.call(null,G__207676,G__207677));
})();
var G__207580 = " ";
var G__207581 = (function (){var G__207678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207679 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207678,G__207679) : tailrecursion.hoplon.span.call(null,G__207678,G__207679));
})();
var G__207582 = "(";
var G__207583 = (function (){var G__207680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__207681 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207680,G__207681) : tailrecursion.hoplon.span.call(null,G__207680,G__207681));
})();
var G__207584 = (function (){var G__207682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207683 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207682,G__207683) : tailrecursion.hoplon.span.call(null,G__207682,G__207683));
})();
var G__207585 = " ";
var G__207586 = (function (){var G__207684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207685 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207684,G__207685) : tailrecursion.hoplon.span.call(null,G__207684,G__207685));
})();
var G__207587 = ")))) ";
var G__207588 = (function (){var G__207686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207687 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207686,G__207687) : tailrecursion.hoplon.span.call(null,G__207686,G__207687));
})();
var G__207589 = ")\n((";
var G__207590 = (function (){var G__207688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207689 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207688,G__207689) : tailrecursion.hoplon.span.call(null,G__207688,G__207689));
})();
var G__207591 = " (";
var G__207592 = (function (){var G__207690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207691 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207690,G__207691) : tailrecursion.hoplon.span.call(null,G__207690,G__207691));
})();
var G__207593 = " ";
var G__207594 = (function (){var G__207692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207693 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207692,G__207693) : tailrecursion.hoplon.span.call(null,G__207692,G__207693));
})();
var G__207595 = "(";
var G__207596 = (function (){var G__207694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__207695 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207694,G__207695) : tailrecursion.hoplon.span.call(null,G__207694,G__207695));
})();
var G__207597 = (function (){var G__207696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207697 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207696,G__207697) : tailrecursion.hoplon.span.call(null,G__207696,G__207697));
})();
var G__207598 = " ";
var G__207599 = (function (){var G__207698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207699 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207698,G__207699) : tailrecursion.hoplon.span.call(null,G__207698,G__207699));
})();
var G__207600 = "))) ";
var G__207601 = (function (){var G__207700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207701 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207700,G__207701) : tailrecursion.hoplon.span.call(null,G__207700,G__207701));
})();
var G__207602 = ")\n((";
var G__207603 = (function (){var G__207702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207703 = "dubs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207702,G__207703) : tailrecursion.hoplon.span.call(null,G__207702,G__207703));
})();
var G__207604 = " ";
var G__207605 = (function (){var G__207704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207705 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207704,G__207705) : tailrecursion.hoplon.span.call(null,G__207704,G__207705));
})();
var G__207606 = "(";
var G__207607 = (function (){var G__207706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__207707 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207706,G__207707) : tailrecursion.hoplon.span.call(null,G__207706,G__207707));
})();
var G__207608 = (function (){var G__207708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207709 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207708,G__207709) : tailrecursion.hoplon.span.call(null,G__207708,G__207709));
})();
var G__207609 = " ";
var G__207610 = (function (){var G__207710 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207711 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207710,G__207711) : tailrecursion.hoplon.span.call(null,G__207710,G__207711));
})();
var G__207611 = ")) ";
var G__207612 = (function (){var G__207712 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207713 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207712,G__207713) : tailrecursion.hoplon.span.call(null,G__207712,G__207713));
})();
var G__207613 = ")\n(";
var G__207614 = (function (){var G__207714 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207715 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207714,G__207715) : tailrecursion.hoplon.span.call(null,G__207714,G__207715));
})();
var G__207615 = "(";
var G__207616 = (function (){var G__207716 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__207717 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207716,G__207717) : tailrecursion.hoplon.span.call(null,G__207716,G__207717));
})();
var G__207617 = (function (){var G__207718 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207719 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207718,G__207719) : tailrecursion.hoplon.span.call(null,G__207718,G__207719));
})();
var G__207618 = " ";
var G__207619 = (function (){var G__207720 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207721 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207720,G__207721) : tailrecursion.hoplon.span.call(null,G__207720,G__207721));
})();
var G__207620 = ") ";
var G__207621 = (function (){var G__207722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207723 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207722,G__207723) : tailrecursion.hoplon.span.call(null,G__207722,G__207723));
})();
var G__207622 = ")\n(";
var G__207623 = (function (){var G__207724 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__207725 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207724,G__207725) : tailrecursion.hoplon.span.call(null,G__207724,G__207725));
})();
var G__207624 = (function (){var G__207726 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207727 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207726,G__207727) : tailrecursion.hoplon.span.call(null,G__207726,G__207727));
})();
var G__207625 = " ";
var G__207626 = (function (){var G__207728 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207729 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207728,G__207729) : tailrecursion.hoplon.span.call(null,G__207728,G__207729));
})();
var G__207627 = ")\n";
var G__207628 = (function (){var G__207730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207731 = "21";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207730,G__207731) : tailrecursion.hoplon.span.call(null,G__207730,G__207731));
})();
var G__207629 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$99 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$99(G__207531,G__207532,G__207533,G__207534,G__207535,G__207536,G__207537,G__207538,G__207539,G__207540,G__207541,G__207542,G__207543,G__207544,G__207545,G__207546,G__207547,G__207548,G__207549,G__207550,G__207551,G__207552,G__207553,G__207554,G__207555,G__207556,G__207557,G__207558,G__207559,G__207560,G__207561,G__207562,G__207563,G__207564,G__207565,G__207566,G__207567,G__207568,G__207569,G__207570,G__207571,G__207572,G__207573,G__207574,G__207575,G__207576,G__207577,G__207578,G__207579,G__207580,G__207581,G__207582,G__207583,G__207584,G__207585,G__207586,G__207587,G__207588,G__207589,G__207590,G__207591,G__207592,G__207593,G__207594,G__207595,G__207596,G__207597,G__207598,G__207599,G__207600,G__207601,G__207602,G__207603,G__207604,G__207605,G__207606,G__207607,G__207608,G__207609,G__207610,G__207611,G__207612,G__207613,G__207614,G__207615,G__207616,G__207617,G__207618,G__207619,G__207620,G__207621,G__207622,G__207623,G__207624,G__207625,G__207626,G__207627,G__207628,G__207629) : tailrecursion.hoplon.pre.call(null,G__207531,G__207532,G__207533,G__207534,G__207535,G__207536,G__207537,G__207538,G__207539,G__207540,G__207541,G__207542,G__207543,G__207544,G__207545,G__207546,G__207547,G__207548,G__207549,G__207550,G__207551,G__207552,G__207553,G__207554,G__207555,G__207556,G__207557,G__207558,G__207559,G__207560,G__207561,G__207562,G__207563,G__207564,G__207565,G__207566,G__207567,G__207568,G__207569,G__207570,G__207571,G__207572,G__207573,G__207574,G__207575,G__207576,G__207577,G__207578,G__207579,G__207580,G__207581,G__207582,G__207583,G__207584,G__207585,G__207586,G__207587,G__207588,G__207589,G__207590,G__207591,G__207592,G__207593,G__207594,G__207595,G__207596,G__207597,G__207598,G__207599,G__207600,G__207601,G__207602,G__207603,G__207604,G__207605,G__207606,G__207607,G__207608,G__207609,G__207610,G__207611,G__207612,G__207613,G__207614,G__207615,G__207616,G__207617,G__207618,G__207619,G__207620,G__207621,G__207622,G__207623,G__207624,G__207625,G__207626,G__207627,G__207628,G__207629));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__207529,G__207530) : tailrecursion.hoplon.div.call(null,G__207529,G__207530));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__207528) : tailrecursion.hoplon.div.call(null,G__207528));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207253;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207252;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207251;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207250;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_207732 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207733 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_207734 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207735 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__207736 = cljs.core.PersistentArrayMap.EMPTY;
var G__207737 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let \\(f\\) and \\(g\\) be two one-argument functions. The composition \\(f\\) after \\(g\\) is defined to be the function \\(x\\to f(g(x))\\). Define a procedure ",(function (){var G__207738 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"compose"], null);
var G__207739 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207738,G__207739) : tailrecursion.hoplon.markdown.code_node.call(null,G__207738,G__207739));
})()," that implements composition. For example, if ",(function (){var G__207740 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"inc"], null);
var G__207741 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207740,G__207741) : tailrecursion.hoplon.markdown.code_node.call(null,G__207740,G__207741));
})()," is a procedure that adds 1 to its argument,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__207736,G__207737) : tailrecursion.hoplon.markdown.para_node.call(null,G__207736,G__207737));
})(),(function (){var G__207766 = (function (){var G__207767 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__207768 = (function (){var G__207769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__207770 = "((";
var G__207771 = (function (){var G__207781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207782 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207781,G__207782) : tailrecursion.hoplon.span.call(null,G__207781,G__207782));
})();
var G__207772 = " ";
var G__207773 = (function (){var G__207783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207784 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207783,G__207784) : tailrecursion.hoplon.span.call(null,G__207783,G__207784));
})();
var G__207774 = " ";
var G__207775 = (function (){var G__207785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207786 = "inc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207785,G__207786) : tailrecursion.hoplon.span.call(null,G__207785,G__207786));
})();
var G__207776 = ") ";
var G__207777 = (function (){var G__207787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207788 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207787,G__207788) : tailrecursion.hoplon.span.call(null,G__207787,G__207788));
})();
var G__207778 = ")\n";
var G__207779 = (function (){var G__207789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207790 = "49";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207789,G__207790) : tailrecursion.hoplon.span.call(null,G__207789,G__207790));
})();
var G__207780 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__207769,G__207770,G__207771,G__207772,G__207773,G__207774,G__207775,G__207776,G__207777,G__207778,G__207779,G__207780) : tailrecursion.hoplon.pre.call(null,G__207769,G__207770,G__207771,G__207772,G__207773,G__207774,G__207775,G__207776,G__207777,G__207778,G__207779,G__207780));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__207767,G__207768) : tailrecursion.hoplon.div.call(null,G__207767,G__207768));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__207766) : tailrecursion.hoplon.div.call(null,G__207766));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207735;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207734;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207733;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207732;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_207791 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207792 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_207793 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207794 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__207834 = (function (){var G__207835 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__207836 = (function (){var G__207837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__207838 = "(";
var G__207839 = (function (){var G__207856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__207857 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207856,G__207857) : tailrecursion.hoplon.span.call(null,G__207856,G__207857));
})();
var G__207840 = (function (){var G__207858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207859 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207858,G__207859) : tailrecursion.hoplon.span.call(null,G__207858,G__207859));
})();
var G__207841 = " [";
var G__207842 = (function (){var G__207860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207861 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207860,G__207861) : tailrecursion.hoplon.span.call(null,G__207860,G__207861));
})();
var G__207843 = " ";
var G__207844 = (function (){var G__207862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207863 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207862,G__207863) : tailrecursion.hoplon.span.call(null,G__207862,G__207863));
})();
var G__207845 = "]\n  (";
var G__207846 = (function (){var G__207864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__207865 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207864,G__207865) : tailrecursion.hoplon.span.call(null,G__207864,G__207865));
})();
var G__207847 = "[";
var G__207848 = (function (){var G__207866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207867 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207866,G__207867) : tailrecursion.hoplon.span.call(null,G__207866,G__207867));
})();
var G__207849 = "] (";
var G__207850 = (function (){var G__207868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207869 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207868,G__207869) : tailrecursion.hoplon.span.call(null,G__207868,G__207869));
})();
var G__207851 = " (";
var G__207852 = (function (){var G__207870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207871 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207870,G__207871) : tailrecursion.hoplon.span.call(null,G__207870,G__207871));
})();
var G__207853 = " ";
var G__207854 = (function (){var G__207872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207873 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207872,G__207873) : tailrecursion.hoplon.span.call(null,G__207872,G__207873));
})();
var G__207855 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$19(G__207837,G__207838,G__207839,G__207840,G__207841,G__207842,G__207843,G__207844,G__207845,G__207846,G__207847,G__207848,G__207849,G__207850,G__207851,G__207852,G__207853,G__207854,G__207855) : tailrecursion.hoplon.pre.call(null,G__207837,G__207838,G__207839,G__207840,G__207841,G__207842,G__207843,G__207844,G__207845,G__207846,G__207847,G__207848,G__207849,G__207850,G__207851,G__207852,G__207853,G__207854,G__207855));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__207835,G__207836) : tailrecursion.hoplon.div.call(null,G__207835,G__207836));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__207834) : tailrecursion.hoplon.div.call(null,G__207834));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207794;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207793;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207792;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207791;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_207874 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207875 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_207876 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207877 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__207878 = cljs.core.PersistentArrayMap.EMPTY;
var G__207879 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(f\\) is a numerical function and \\(n\\) is a positive integer, then we can form the \\(n\\)th repeated application of \\(f\\), which is defined to be the function whose value at \\(x\\) is \\(f(f(",(function (){var G__207880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__207881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__207880,G__207881) : tailrecursion.hoplon.markdown.simple_node.call(null,G__207880,G__207881));
})(),"(f(x))",(function (){var G__207882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__207883 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__207882,G__207883) : tailrecursion.hoplon.markdown.simple_node.call(null,G__207882,G__207883));
})(),"))\\). For example, if \\(f\\) is the function \\(x\\to x + 1\\), then the \\(n\\)th repeated application of \\(f\\) is the function \\(x\\to x + n\\). If \\(f\\) is the operation of squaring a number, then the \\(n\\)th repeated application of \\(f\\) is the function that raises its argument to the \\(2^n\\)th power. Write a procedure that takes as inputs a procedure that computes \\(f\\) and a positive integer \\(n\\) and returns the procedure that computes the \\(n\\)th repeated application of \\(f\\). Your procedure should be able to be used as follows:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__207878,G__207879) : tailrecursion.hoplon.markdown.para_node.call(null,G__207878,G__207879));
})(),(function (){var G__207908 = (function (){var G__207909 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__207910 = (function (){var G__207911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__207912 = "((";
var G__207913 = (function (){var G__207923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__207924 = "repeated";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207923,G__207924) : tailrecursion.hoplon.span.call(null,G__207923,G__207924));
})();
var G__207914 = " ";
var G__207915 = (function (){var G__207925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__207926 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207925,G__207926) : tailrecursion.hoplon.span.call(null,G__207925,G__207926));
})();
var G__207916 = " ";
var G__207917 = (function (){var G__207927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207928 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207927,G__207928) : tailrecursion.hoplon.span.call(null,G__207927,G__207928));
})();
var G__207918 = ") ";
var G__207919 = (function (){var G__207929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207930 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207929,G__207930) : tailrecursion.hoplon.span.call(null,G__207929,G__207930));
})();
var G__207920 = ")\n";
var G__207921 = (function (){var G__207931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__207932 = "625";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__207931,G__207932) : tailrecursion.hoplon.span.call(null,G__207931,G__207932));
})();
var G__207922 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$12(G__207911,G__207912,G__207913,G__207914,G__207915,G__207916,G__207917,G__207918,G__207919,G__207920,G__207921,G__207922) : tailrecursion.hoplon.pre.call(null,G__207911,G__207912,G__207913,G__207914,G__207915,G__207916,G__207917,G__207918,G__207919,G__207920,G__207921,G__207922));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__207909,G__207910) : tailrecursion.hoplon.div.call(null,G__207909,G__207910));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__207908) : tailrecursion.hoplon.div.call(null,G__207908));
})(),(function (){var G__207933 = cljs.core.PersistentArrayMap.EMPTY;
var G__207934 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Hint: You may find it convenient to use ",(function (){var G__207935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"compose"], null);
var G__207936 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__207935,G__207936) : tailrecursion.hoplon.markdown.code_node.call(null,G__207935,G__207936));
})()," from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/42/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.42"], null)], 0))], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__207933,G__207934) : tailrecursion.hoplon.markdown.para_node.call(null,G__207933,G__207934));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207877;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207876;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207875;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207874;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_207937 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207938 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_207939 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_207940 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__208022 = (function (){var G__208023 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__208024 = (function (){var G__208025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__208026 = "(";
var G__208027 = (function (){var G__208064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208065 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208064,G__208065) : tailrecursion.hoplon.span.call(null,G__208064,G__208065));
})();
var G__208028 = (function (){var G__208066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208067 = "repeated";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208066,G__208067) : tailrecursion.hoplon.span.call(null,G__208066,G__208067));
})();
var G__208029 = " [";
var G__208030 = (function (){var G__208068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208069 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208068,G__208069) : tailrecursion.hoplon.span.call(null,G__208068,G__208069));
})();
var G__208031 = " ";
var G__208032 = (function (){var G__208070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208071 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208070,G__208071) : tailrecursion.hoplon.span.call(null,G__208070,G__208071));
})();
var G__208033 = "]\n  (";
var G__208034 = (function (){var G__208072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208073 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208072,G__208073) : tailrecursion.hoplon.span.call(null,G__208072,G__208073));
})();
var G__208035 = "[";
var G__208036 = (function (){var G__208074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208075 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208074,G__208075) : tailrecursion.hoplon.span.call(null,G__208074,G__208075));
})();
var G__208037 = "   ";
var G__208038 = (function (){var G__208076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208077 = "identity";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208076,G__208077) : tailrecursion.hoplon.span.call(null,G__208076,G__208077));
})();
var G__208039 = "\n         ";
var G__208040 = (function (){var G__208078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208079 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208078,G__208079) : tailrecursion.hoplon.span.call(null,G__208078,G__208079));
})();
var G__208041 = " ";
var G__208042 = (function (){var G__208080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208081 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208080,G__208081) : tailrecursion.hoplon.span.call(null,G__208080,G__208081));
})();
var G__208043 = "]\n    (";
var G__208044 = (function (){var G__208082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208083 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208082,G__208083) : tailrecursion.hoplon.span.call(null,G__208082,G__208083));
})();
var G__208045 = "(";
var G__208046 = (function (){var G__208084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208085 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208084,G__208085) : tailrecursion.hoplon.span.call(null,G__208084,G__208085));
})();
var G__208047 = (function (){var G__208086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208087 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208086,G__208087) : tailrecursion.hoplon.span.call(null,G__208086,G__208087));
})();
var G__208048 = " ";
var G__208049 = (function (){var G__208088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208089 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208088,G__208089) : tailrecursion.hoplon.span.call(null,G__208088,G__208089));
})();
var G__208050 = ")\n        ";
var G__208051 = (function (){var G__208090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208091 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208090,G__208091) : tailrecursion.hoplon.span.call(null,G__208090,G__208091));
})();
var G__208052 = "\n        (";
var G__208053 = (function (){var G__208092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208093 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208092,G__208093) : tailrecursion.hoplon.span.call(null,G__208092,G__208093));
})();
var G__208054 = " (";
var G__208055 = (function (){var G__208094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208095 = "compose";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208094,G__208095) : tailrecursion.hoplon.span.call(null,G__208094,G__208095));
})();
var G__208056 = " ";
var G__208057 = (function (){var G__208096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208097 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208096,G__208097) : tailrecursion.hoplon.span.call(null,G__208096,G__208097));
})();
var G__208058 = " ";
var G__208059 = (function (){var G__208098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208099 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208098,G__208099) : tailrecursion.hoplon.span.call(null,G__208098,G__208099));
})();
var G__208060 = ") (";
var G__208061 = (function (){var G__208100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208101 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208100,G__208101) : tailrecursion.hoplon.span.call(null,G__208100,G__208101));
})();
var G__208062 = (function (){var G__208102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208103 = "number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208102,G__208103) : tailrecursion.hoplon.span.call(null,G__208102,G__208103));
})();
var G__208063 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__208025,G__208026,G__208027,G__208028,G__208029,G__208030,G__208031,G__208032,G__208033,G__208034,G__208035,G__208036,G__208037,G__208038,G__208039,G__208040,G__208041,G__208042,G__208043,G__208044,G__208045,G__208046,G__208047,G__208048,G__208049,G__208050,G__208051,G__208052,G__208053,G__208054,G__208055,G__208056,G__208057,G__208058,G__208059,G__208060,G__208061,G__208062,G__208063) : tailrecursion.hoplon.pre.call(null,G__208025,G__208026,G__208027,G__208028,G__208029,G__208030,G__208031,G__208032,G__208033,G__208034,G__208035,G__208036,G__208037,G__208038,G__208039,G__208040,G__208041,G__208042,G__208043,G__208044,G__208045,G__208046,G__208047,G__208048,G__208049,G__208050,G__208051,G__208052,G__208053,G__208054,G__208055,G__208056,G__208057,G__208058,G__208059,G__208060,G__208061,G__208062,G__208063));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__208023,G__208024) : tailrecursion.hoplon.div.call(null,G__208023,G__208024));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__208022) : tailrecursion.hoplon.div.call(null,G__208022));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207940;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207939;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_207938;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_207937;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_208104 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208105 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_208106 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208107 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__208108 = cljs.core.PersistentArrayMap.EMPTY;
var G__208109 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["smoothing"], null)], 0))," a function is an important concept in signal processing. If \\(f\\) is a function and \\(dx\\) is some small number, then the smoothed version of \\(f\\) is the function whose value at a point \\(x\\) is the average of \\(f(x - dx)\\), \\(f(x)\\), and \\(f(x + dx)\\). Write a procedure ",(function (){var G__208110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smooth"], null);
var G__208111 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__208110,G__208111) : tailrecursion.hoplon.markdown.code_node.call(null,G__208110,G__208111));
})()," that takes as input a procedure that computes \\(f\\) and returns a procedure that computes the smoothed \\(f\\). It is sometimes valuable to repeatedly smooth a function (that is, smooth the smoothed function, and so on) to obtained the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n-fold smoothed function"], null)], 0)),". Show how to generate the \\(n\\)-fold smoothed function of any given function using ",(function (){var G__208112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smooth"], null);
var G__208113 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__208112,G__208113) : tailrecursion.hoplon.markdown.code_node.call(null,G__208112,G__208113));
})()," and ",(function (){var G__208114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"repeated"], null);
var G__208115 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__208114,G__208115) : tailrecursion.hoplon.markdown.code_node.call(null,G__208114,G__208115));
})()," from ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/43/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.43"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__208108,G__208109) : tailrecursion.hoplon.markdown.para_node.call(null,G__208108,G__208109));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208107;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208106;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208105;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208104;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_208116 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208117 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_208118 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208119 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__208166 = (function (){var G__208167 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__208168 = (function (){var G__208169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__208170 = "(";
var G__208171 = (function (){var G__208191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208192 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208191,G__208192) : tailrecursion.hoplon.span.call(null,G__208191,G__208192));
})();
var G__208172 = (function (){var G__208193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208194 = "average-of-3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208193,G__208194) : tailrecursion.hoplon.span.call(null,G__208193,G__208194));
})();
var G__208173 = " [";
var G__208174 = (function (){var G__208195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208196 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208195,G__208196) : tailrecursion.hoplon.span.call(null,G__208195,G__208196));
})();
var G__208175 = " ";
var G__208176 = (function (){var G__208197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208198 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208197,G__208198) : tailrecursion.hoplon.span.call(null,G__208197,G__208198));
})();
var G__208177 = " ";
var G__208178 = (function (){var G__208199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208200 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208199,G__208200) : tailrecursion.hoplon.span.call(null,G__208199,G__208200));
})();
var G__208179 = "]\n  (";
var G__208180 = (function (){var G__208201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208202 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208201,G__208202) : tailrecursion.hoplon.span.call(null,G__208201,G__208202));
})();
var G__208181 = "(";
var G__208182 = (function (){var G__208203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208204 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208203,G__208204) : tailrecursion.hoplon.span.call(null,G__208203,G__208204));
})();
var G__208183 = (function (){var G__208205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208206 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208205,G__208206) : tailrecursion.hoplon.span.call(null,G__208205,G__208206));
})();
var G__208184 = " ";
var G__208185 = (function (){var G__208207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208208 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208207,G__208208) : tailrecursion.hoplon.span.call(null,G__208207,G__208208));
})();
var G__208186 = " ";
var G__208187 = (function (){var G__208209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208210 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208209,G__208210) : tailrecursion.hoplon.span.call(null,G__208209,G__208210));
})();
var G__208188 = ") ";
var G__208189 = (function (){var G__208211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208212 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208211,G__208212) : tailrecursion.hoplon.span.call(null,G__208211,G__208212));
})();
var G__208190 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$22(G__208169,G__208170,G__208171,G__208172,G__208173,G__208174,G__208175,G__208176,G__208177,G__208178,G__208179,G__208180,G__208181,G__208182,G__208183,G__208184,G__208185,G__208186,G__208187,G__208188,G__208189,G__208190) : tailrecursion.hoplon.pre.call(null,G__208169,G__208170,G__208171,G__208172,G__208173,G__208174,G__208175,G__208176,G__208177,G__208178,G__208179,G__208180,G__208181,G__208182,G__208183,G__208184,G__208185,G__208186,G__208187,G__208188,G__208189,G__208190));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__208167,G__208168) : tailrecursion.hoplon.div.call(null,G__208167,G__208168));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__208166) : tailrecursion.hoplon.div.call(null,G__208166));
})(),(function (){var G__208290 = (function (){var G__208291 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__208292 = (function (){var G__208293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__208294 = "(";
var G__208295 = (function (){var G__208330 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208331 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208330,G__208331) : tailrecursion.hoplon.span.call(null,G__208330,G__208331));
})();
var G__208296 = (function (){var G__208332 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208333 = "smooth";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208332,G__208333) : tailrecursion.hoplon.span.call(null,G__208332,G__208333));
})();
var G__208297 = " [";
var G__208298 = (function (){var G__208334 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208335 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208334,G__208335) : tailrecursion.hoplon.span.call(null,G__208334,G__208335));
})();
var G__208299 = "]\n  (";
var G__208300 = (function (){var G__208336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208337 = "let ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208336,G__208337) : tailrecursion.hoplon.span.call(null,G__208336,G__208337));
})();
var G__208301 = "[";
var G__208302 = (function (){var G__208338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208339 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208338,G__208339) : tailrecursion.hoplon.span.call(null,G__208338,G__208339));
})();
var G__208303 = " ";
var G__208304 = (function (){var G__208340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208341 = "0.00001";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208340,G__208341) : tailrecursion.hoplon.span.call(null,G__208340,G__208341));
})();
var G__208305 = "]\n    (";
var G__208306 = (function (){var G__208342 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208343 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208342,G__208343) : tailrecursion.hoplon.span.call(null,G__208342,G__208343));
})();
var G__208307 = "[";
var G__208308 = (function (){var G__208344 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208345 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208344,G__208345) : tailrecursion.hoplon.span.call(null,G__208344,G__208345));
})();
var G__208309 = "] (";
var G__208310 = (function (){var G__208346 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208347 = "average-of-3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208346,G__208347) : tailrecursion.hoplon.span.call(null,G__208346,G__208347));
})();
var G__208311 = " (";
var G__208312 = (function (){var G__208348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208349 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208348,G__208349) : tailrecursion.hoplon.span.call(null,G__208348,G__208349));
})();
var G__208313 = " (";
var G__208314 = (function (){var G__208350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208351 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208350,G__208351) : tailrecursion.hoplon.span.call(null,G__208350,G__208351));
})();
var G__208315 = (function (){var G__208352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208353 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208352,G__208353) : tailrecursion.hoplon.span.call(null,G__208352,G__208353));
})();
var G__208316 = " ";
var G__208317 = (function (){var G__208354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208355 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208354,G__208355) : tailrecursion.hoplon.span.call(null,G__208354,G__208355));
})();
var G__208318 = ")) (";
var G__208319 = (function (){var G__208356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208357 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208356,G__208357) : tailrecursion.hoplon.span.call(null,G__208356,G__208357));
})();
var G__208320 = " ";
var G__208321 = (function (){var G__208358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208359 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208358,G__208359) : tailrecursion.hoplon.span.call(null,G__208358,G__208359));
})();
var G__208322 = ") (";
var G__208323 = (function (){var G__208360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208361 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208360,G__208361) : tailrecursion.hoplon.span.call(null,G__208360,G__208361));
})();
var G__208324 = " (";
var G__208325 = (function (){var G__208362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208363 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208362,G__208363) : tailrecursion.hoplon.span.call(null,G__208362,G__208363));
})();
var G__208326 = (function (){var G__208364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208365 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208364,G__208365) : tailrecursion.hoplon.span.call(null,G__208364,G__208365));
})();
var G__208327 = " ";
var G__208328 = (function (){var G__208366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208367 = "dx";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208366,G__208367) : tailrecursion.hoplon.span.call(null,G__208366,G__208367));
})();
var G__208329 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$37 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$37(G__208293,G__208294,G__208295,G__208296,G__208297,G__208298,G__208299,G__208300,G__208301,G__208302,G__208303,G__208304,G__208305,G__208306,G__208307,G__208308,G__208309,G__208310,G__208311,G__208312,G__208313,G__208314,G__208315,G__208316,G__208317,G__208318,G__208319,G__208320,G__208321,G__208322,G__208323,G__208324,G__208325,G__208326,G__208327,G__208328,G__208329) : tailrecursion.hoplon.pre.call(null,G__208293,G__208294,G__208295,G__208296,G__208297,G__208298,G__208299,G__208300,G__208301,G__208302,G__208303,G__208304,G__208305,G__208306,G__208307,G__208308,G__208309,G__208310,G__208311,G__208312,G__208313,G__208314,G__208315,G__208316,G__208317,G__208318,G__208319,G__208320,G__208321,G__208322,G__208323,G__208324,G__208325,G__208326,G__208327,G__208328,G__208329));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__208291,G__208292) : tailrecursion.hoplon.div.call(null,G__208291,G__208292));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__208290) : tailrecursion.hoplon.div.call(null,G__208290));
})(),(function (){var G__208403 = (function (){var G__208404 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__208405 = (function (){var G__208406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__208407 = "(";
var G__208408 = (function (){var G__208423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208424 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208423,G__208424) : tailrecursion.hoplon.span.call(null,G__208423,G__208424));
})();
var G__208409 = (function (){var G__208425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208426 = "n-fold-smooth";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208425,G__208426) : tailrecursion.hoplon.span.call(null,G__208425,G__208426));
})();
var G__208410 = " [";
var G__208411 = (function (){var G__208427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208428 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208427,G__208428) : tailrecursion.hoplon.span.call(null,G__208427,G__208428));
})();
var G__208412 = " ";
var G__208413 = (function (){var G__208429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208430 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208429,G__208430) : tailrecursion.hoplon.span.call(null,G__208429,G__208430));
})();
var G__208414 = "]\n  ((";
var G__208415 = (function (){var G__208431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208432 = "repeated";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208431,G__208432) : tailrecursion.hoplon.span.call(null,G__208431,G__208432));
})();
var G__208416 = " ";
var G__208417 = (function (){var G__208433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208434 = "smooth";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208433,G__208434) : tailrecursion.hoplon.span.call(null,G__208433,G__208434));
})();
var G__208418 = " ";
var G__208419 = (function (){var G__208435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208436 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208435,G__208436) : tailrecursion.hoplon.span.call(null,G__208435,G__208436));
})();
var G__208420 = ") ";
var G__208421 = (function (){var G__208437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208438 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208437,G__208438) : tailrecursion.hoplon.span.call(null,G__208437,G__208438));
})();
var G__208422 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__208406,G__208407,G__208408,G__208409,G__208410,G__208411,G__208412,G__208413,G__208414,G__208415,G__208416,G__208417,G__208418,G__208419,G__208420,G__208421,G__208422) : tailrecursion.hoplon.pre.call(null,G__208406,G__208407,G__208408,G__208409,G__208410,G__208411,G__208412,G__208413,G__208414,G__208415,G__208416,G__208417,G__208418,G__208419,G__208420,G__208421,G__208422));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__208404,G__208405) : tailrecursion.hoplon.div.call(null,G__208404,G__208405));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__208403) : tailrecursion.hoplon.div.call(null,G__208403));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208119;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208118;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208117;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208116;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_208439 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208440 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_208441 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208442 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__208443 = cljs.core.PersistentArrayMap.EMPTY;
var G__208444 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We saw in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/3/sub/3/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.3.3"], null)], 0))," that attempting to compute square roots by naively finding a fixed point of \\(y\\to x/y\\) does not converge, and that this can be fixed by average damping. The same method works for finding cube roots as fixed points of the average-damped \\(y\\to x/y^2\\). Unfortunately, the process does not work for fourth roots ",(function (){var G__208445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__208446 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__208445,G__208446) : tailrecursion.hoplon.markdown.simple_node.call(null,G__208445,G__208446));
})()," a single average damp is not enough to make a fixed-point search for \\(y\\to x/y^3\\) converge. On the other hand, if we average damp twice (i.e., use the average damp of the average damp of ((y\\to x/y^3\\)) the fixed-point search does converge. Do some experiments to determine how many average damps are required to compute \\(n\\)th roots as a fixed-point search based upon repeated average damping of \\(y\\to x/y^{n-1}\\). Use this to implement a simple procedure for computing \\(n\\)th roots using fixed-point, average-damp, and the repeated procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/43/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.43"], null)], 0)),". Assume that any arithmetic operations you need are available as primitives (you can see which ones are available at ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"http://www.clojure.org/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["clojure.org"], null)], 0)),")."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__208443,G__208444) : tailrecursion.hoplon.markdown.para_node.call(null,G__208443,G__208444));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208442;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208441;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208440;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208439;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_208447 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208448 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_208449 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208450 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__208451 = cljs.core.PersistentArrayMap.EMPTY;
var G__208452 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By trial and error, we can deduce that every time we double the argument (the exponent), the number of dampings increases by one (give or take). That would suggest that the number of dampings needed is \\(\\log_2(n)\\). I will find a proof of this later and put it here for those of you who are interested. In the mean time, here is the procedure (we",(function (){var G__208453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__208454 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__208453,G__208454) : tailrecursion.hoplon.markdown.simple_node.call(null,G__208453,G__208454));
})(),"re using the identity \\(\\log_b(x)=\\log_a(x)\\cdot\\log_b(a)\\))"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__208451,G__208452) : tailrecursion.hoplon.markdown.para_node.call(null,G__208451,G__208452));
})(),(function (){var G__208563 = (function (){var G__208564 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__208565 = (function (){var G__208566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__208567 = "(";
var G__208568 = (function (){var G__208618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208619 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208618,G__208619) : tailrecursion.hoplon.span.call(null,G__208618,G__208619));
})();
var G__208569 = (function (){var G__208620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208621 = "log-base-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208620,G__208621) : tailrecursion.hoplon.span.call(null,G__208620,G__208621));
})();
var G__208570 = " [";
var G__208571 = (function (){var G__208622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208623 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208622,G__208623) : tailrecursion.hoplon.span.call(null,G__208622,G__208623));
})();
var G__208572 = "] (";
var G__208573 = (function (){var G__208624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208625 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208624,G__208625) : tailrecursion.hoplon.span.call(null,G__208624,G__208625));
})();
var G__208574 = "(";
var G__208575 = (function (){var G__208626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208627 = "Math/log";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208626,G__208627) : tailrecursion.hoplon.span.call(null,G__208626,G__208627));
})();
var G__208576 = " ";
var G__208577 = (function (){var G__208628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208629 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208628,G__208629) : tailrecursion.hoplon.span.call(null,G__208628,G__208629));
})();
var G__208578 = ") (";
var G__208579 = (function (){var G__208630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208631 = "Math/log";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208630,G__208631) : tailrecursion.hoplon.span.call(null,G__208630,G__208631));
})();
var G__208580 = " ";
var G__208581 = (function (){var G__208632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208633 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208632,G__208633) : tailrecursion.hoplon.span.call(null,G__208632,G__208633));
})();
var G__208582 = ")))\n(";
var G__208583 = (function (){var G__208634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208635 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208634,G__208635) : tailrecursion.hoplon.span.call(null,G__208634,G__208635));
})();
var G__208584 = (function (){var G__208636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208637 = "nth-root";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208636,G__208637) : tailrecursion.hoplon.span.call(null,G__208636,G__208637));
})();
var G__208585 = " [";
var G__208586 = (function (){var G__208638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208639 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208638,G__208639) : tailrecursion.hoplon.span.call(null,G__208638,G__208639));
})();
var G__208587 = " ";
var G__208588 = (function (){var G__208640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208641 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208640,G__208641) : tailrecursion.hoplon.span.call(null,G__208640,G__208641));
})();
var G__208589 = "]\n  (";
var G__208590 = (function (){var G__208642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208643 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208642,G__208643) : tailrecursion.hoplon.span.call(null,G__208642,G__208643));
})();
var G__208591 = " ((";
var G__208592 = (function (){var G__208644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208645 = "repeated";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208644,G__208645) : tailrecursion.hoplon.span.call(null,G__208644,G__208645));
})();
var G__208593 = " ";
var G__208594 = (function (){var G__208646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208647 = "average-damp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208646,G__208647) : tailrecursion.hoplon.span.call(null,G__208646,G__208647));
})();
var G__208595 = " (";
var G__208596 = (function (){var G__208648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208649 = "Math/floor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208648,G__208649) : tailrecursion.hoplon.span.call(null,G__208648,G__208649));
})();
var G__208597 = " (";
var G__208598 = (function (){var G__208650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208651 = "log-base-2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208650,G__208651) : tailrecursion.hoplon.span.call(null,G__208650,G__208651));
})();
var G__208599 = " ";
var G__208600 = (function (){var G__208652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208653 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208652,G__208653) : tailrecursion.hoplon.span.call(null,G__208652,G__208653));
})();
var G__208601 = ")))\n                ";
var G__208602 = (function (){var G__208654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208655 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208654,G__208655) : tailrecursion.hoplon.span.call(null,G__208654,G__208655));
})();
var G__208603 = "(";
var G__208604 = (function (){var G__208656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208657 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208656,G__208657) : tailrecursion.hoplon.span.call(null,G__208656,G__208657));
})();
var G__208605 = (function (){var G__208658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208659 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208658,G__208659) : tailrecursion.hoplon.span.call(null,G__208658,G__208659));
})();
var G__208606 = " (";
var G__208607 = (function (){var G__208660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208661 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208660,G__208661) : tailrecursion.hoplon.span.call(null,G__208660,G__208661));
})();
var G__208608 = " ";
var G__208609 = (function (){var G__208662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208663 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208662,G__208663) : tailrecursion.hoplon.span.call(null,G__208662,G__208663));
})();
var G__208610 = " (";
var G__208611 = (function (){var G__208664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208665 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208664,G__208665) : tailrecursion.hoplon.span.call(null,G__208664,G__208665));
})();
var G__208612 = (function (){var G__208666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208667 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208666,G__208667) : tailrecursion.hoplon.span.call(null,G__208666,G__208667));
})();
var G__208613 = " ";
var G__208614 = (function (){var G__208668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208669 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208668,G__208669) : tailrecursion.hoplon.span.call(null,G__208668,G__208669));
})();
var G__208615 = "))))\n               ";
var G__208616 = (function (){var G__208670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208671 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208670,G__208671) : tailrecursion.hoplon.span.call(null,G__208670,G__208671));
})();
var G__208617 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$52(G__208566,G__208567,G__208568,G__208569,G__208570,G__208571,G__208572,G__208573,G__208574,G__208575,G__208576,G__208577,G__208578,G__208579,G__208580,G__208581,G__208582,G__208583,G__208584,G__208585,G__208586,G__208587,G__208588,G__208589,G__208590,G__208591,G__208592,G__208593,G__208594,G__208595,G__208596,G__208597,G__208598,G__208599,G__208600,G__208601,G__208602,G__208603,G__208604,G__208605,G__208606,G__208607,G__208608,G__208609,G__208610,G__208611,G__208612,G__208613,G__208614,G__208615,G__208616,G__208617) : tailrecursion.hoplon.pre.call(null,G__208566,G__208567,G__208568,G__208569,G__208570,G__208571,G__208572,G__208573,G__208574,G__208575,G__208576,G__208577,G__208578,G__208579,G__208580,G__208581,G__208582,G__208583,G__208584,G__208585,G__208586,G__208587,G__208588,G__208589,G__208590,G__208591,G__208592,G__208593,G__208594,G__208595,G__208596,G__208597,G__208598,G__208599,G__208600,G__208601,G__208602,G__208603,G__208604,G__208605,G__208606,G__208607,G__208608,G__208609,G__208610,G__208611,G__208612,G__208613,G__208614,G__208615,G__208616,G__208617));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__208564,G__208565) : tailrecursion.hoplon.div.call(null,G__208564,G__208565));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__208563) : tailrecursion.hoplon.div.call(null,G__208563));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208450;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208449;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208448;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208447;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_208672 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208673 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_208674 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208675 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__208676 = cljs.core.PersistentArrayMap.EMPTY;
var G__208677 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Several of the numerical methods described in this chapter are instances of an extremely general computational strategy known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["iterative improvement"], null)], 0)),". Iterative improvement says that, to compute something, we start with an initial guess for the answer, test if the guess is good enough, and otherwise improve the guess and continue the process using the improved guess as the new guess. Write a procedure ",(function (){var G__208678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"iterative-improve"], null);
var G__208679 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__208678,G__208679) : tailrecursion.hoplon.markdown.code_node.call(null,G__208678,G__208679));
})()," that takes two procedures as arguments: a method for telling whether a guess is good enough and a method for improving a guess. ",(function (){var G__208680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"Iterative-improve"], null);
var G__208681 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__208680,G__208681) : tailrecursion.hoplon.markdown.code_node.call(null,G__208680,G__208681));
})()," should return as its value a procedure that takes a guess as argument and keeps improving the guess until it is good enough. Rewrite the sqrt procedure of section 1.1.7 and the fixed-point procedure of section 1.3.3 in terms of iterative-improve."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__208676,G__208677) : tailrecursion.hoplon.markdown.para_node.call(null,G__208676,G__208677));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208675;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208674;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208673;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208672;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_208682 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208683 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_208684 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_208685 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__208753 = (function (){var G__208754 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__208755 = (function (){var G__208756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__208757 = "(";
var G__208758 = (function (){var G__208789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208790 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208789,G__208790) : tailrecursion.hoplon.span.call(null,G__208789,G__208790));
})();
var G__208759 = (function (){var G__208791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208792 = "iterative-improve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208791,G__208792) : tailrecursion.hoplon.span.call(null,G__208791,G__208792));
})();
var G__208760 = " [";
var G__208761 = (function (){var G__208793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208794 = "good-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208793,G__208794) : tailrecursion.hoplon.span.call(null,G__208793,G__208794));
})();
var G__208762 = " ";
var G__208763 = (function (){var G__208795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208796 = "improve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208795,G__208796) : tailrecursion.hoplon.span.call(null,G__208795,G__208796));
})();
var G__208764 = "]\n  (";
var G__208765 = (function (){var G__208797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208798 = "fn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208797,G__208798) : tailrecursion.hoplon.span.call(null,G__208797,G__208798));
})();
var G__208766 = "[";
var G__208767 = (function (){var G__208799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208800 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208799,G__208800) : tailrecursion.hoplon.span.call(null,G__208799,G__208800));
})();
var G__208768 = "] \n    (";
var G__208769 = (function (){var G__208801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208802 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208801,G__208802) : tailrecursion.hoplon.span.call(null,G__208801,G__208802));
})();
var G__208770 = "[";
var G__208771 = (function (){var G__208803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208804 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208803,G__208804) : tailrecursion.hoplon.span.call(null,G__208803,G__208804));
})();
var G__208772 = " ";
var G__208773 = (function (){var G__208805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208806 = "initial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208805,G__208806) : tailrecursion.hoplon.span.call(null,G__208805,G__208806));
})();
var G__208774 = "]\n      (";
var G__208775 = (function (){var G__208807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208808 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208807,G__208808) : tailrecursion.hoplon.span.call(null,G__208807,G__208808));
})();
var G__208776 = "(";
var G__208777 = (function (){var G__208809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208810 = "good-enough?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208809,G__208810) : tailrecursion.hoplon.span.call(null,G__208809,G__208810));
})();
var G__208778 = " ";
var G__208779 = (function (){var G__208811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208812 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208811,G__208812) : tailrecursion.hoplon.span.call(null,G__208811,G__208812));
})();
var G__208780 = ")\n          ";
var G__208781 = (function (){var G__208813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208814 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208813,G__208814) : tailrecursion.hoplon.span.call(null,G__208813,G__208814));
})();
var G__208782 = "\n          (";
var G__208783 = (function (){var G__208815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208816 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208815,G__208816) : tailrecursion.hoplon.span.call(null,G__208815,G__208816));
})();
var G__208784 = " (";
var G__208785 = (function (){var G__208817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208818 = "improve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208817,G__208818) : tailrecursion.hoplon.span.call(null,G__208817,G__208818));
})();
var G__208786 = " ";
var G__208787 = (function (){var G__208819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208820 = "guess";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208819,G__208820) : tailrecursion.hoplon.span.call(null,G__208819,G__208820));
})();
var G__208788 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$33(G__208756,G__208757,G__208758,G__208759,G__208760,G__208761,G__208762,G__208763,G__208764,G__208765,G__208766,G__208767,G__208768,G__208769,G__208770,G__208771,G__208772,G__208773,G__208774,G__208775,G__208776,G__208777,G__208778,G__208779,G__208780,G__208781,G__208782,G__208783,G__208784,G__208785,G__208786,G__208787,G__208788) : tailrecursion.hoplon.pre.call(null,G__208756,G__208757,G__208758,G__208759,G__208760,G__208761,G__208762,G__208763,G__208764,G__208765,G__208766,G__208767,G__208768,G__208769,G__208770,G__208771,G__208772,G__208773,G__208774,G__208775,G__208776,G__208777,G__208778,G__208779,G__208780,G__208781,G__208782,G__208783,G__208784,G__208785,G__208786,G__208787,G__208788));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__208754,G__208755) : tailrecursion.hoplon.div.call(null,G__208754,G__208755));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__208753) : tailrecursion.hoplon.div.call(null,G__208753));
})(),(function (){var G__208899 = (function (){var G__208900 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__208901 = (function (){var G__208902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__208903 = "(";
var G__208904 = (function (){var G__208940 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__208941 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208940,G__208941) : tailrecursion.hoplon.span.call(null,G__208940,G__208941));
})();
var G__208905 = (function (){var G__208942 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208943 = "sqrt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208942,G__208943) : tailrecursion.hoplon.span.call(null,G__208942,G__208943));
})();
var G__208906 = " [";
var G__208907 = (function (){var G__208944 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208945 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208944,G__208945) : tailrecursion.hoplon.span.call(null,G__208944,G__208945));
})();
var G__208908 = "]\n  ((";
var G__208909 = (function (){var G__208946 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208947 = "iterative-improve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208946,G__208947) : tailrecursion.hoplon.span.call(null,G__208946,G__208947));
})();
var G__208910 = " ";
var G__208911 = (function (){var G__208948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208949 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208948,G__208949) : tailrecursion.hoplon.span.call(null,G__208948,G__208949));
})();
var G__208912 = "(";
var G__208913 = (function (){var G__208950 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208951 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208950,G__208951) : tailrecursion.hoplon.span.call(null,G__208950,G__208951));
})();
var G__208914 = "(";
var G__208915 = (function (){var G__208952 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208953 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208952,G__208953) : tailrecursion.hoplon.span.call(null,G__208952,G__208953));
})();
var G__208916 = " (";
var G__208917 = (function (){var G__208954 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208955 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208954,G__208955) : tailrecursion.hoplon.span.call(null,G__208954,G__208955));
})();
var G__208918 = "(";
var G__208919 = (function (){var G__208956 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208957 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208956,G__208957) : tailrecursion.hoplon.span.call(null,G__208956,G__208957));
})();
var G__208920 = " ";
var G__208921 = (function (){var G__208958 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208959 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208958,G__208959) : tailrecursion.hoplon.span.call(null,G__208958,G__208959));
})();
var G__208922 = ") ";
var G__208923 = (function (){var G__208960 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208961 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208960,G__208961) : tailrecursion.hoplon.span.call(null,G__208960,G__208961));
})();
var G__208924 = ")) ";
var G__208925 = (function (){var G__208962 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208963 = "tolerance";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208962,G__208963) : tailrecursion.hoplon.span.call(null,G__208962,G__208963));
})();
var G__208926 = ")\n                      ";
var G__208927 = (function (){var G__208964 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208965 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208964,G__208965) : tailrecursion.hoplon.span.call(null,G__208964,G__208965));
})();
var G__208928 = "(";
var G__208929 = (function (){var G__208966 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__208967 = "average";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208966,G__208967) : tailrecursion.hoplon.span.call(null,G__208966,G__208967));
})();
var G__208930 = " ";
var G__208931 = (function (){var G__208968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208969 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208968,G__208969) : tailrecursion.hoplon.span.call(null,G__208968,G__208969));
})();
var G__208932 = " (";
var G__208933 = (function (){var G__208970 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__208971 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208970,G__208971) : tailrecursion.hoplon.span.call(null,G__208970,G__208971));
})();
var G__208934 = (function (){var G__208972 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208973 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208972,G__208973) : tailrecursion.hoplon.span.call(null,G__208972,G__208973));
})();
var G__208935 = " ";
var G__208936 = (function (){var G__208974 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__208975 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208974,G__208975) : tailrecursion.hoplon.span.call(null,G__208974,G__208975));
})();
var G__208937 = "))) \n    ";
var G__208938 = (function (){var G__208976 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__208977 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__208976,G__208977) : tailrecursion.hoplon.span.call(null,G__208976,G__208977));
})();
var G__208939 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$38(G__208902,G__208903,G__208904,G__208905,G__208906,G__208907,G__208908,G__208909,G__208910,G__208911,G__208912,G__208913,G__208914,G__208915,G__208916,G__208917,G__208918,G__208919,G__208920,G__208921,G__208922,G__208923,G__208924,G__208925,G__208926,G__208927,G__208928,G__208929,G__208930,G__208931,G__208932,G__208933,G__208934,G__208935,G__208936,G__208937,G__208938,G__208939) : tailrecursion.hoplon.pre.call(null,G__208902,G__208903,G__208904,G__208905,G__208906,G__208907,G__208908,G__208909,G__208910,G__208911,G__208912,G__208913,G__208914,G__208915,G__208916,G__208917,G__208918,G__208919,G__208920,G__208921,G__208922,G__208923,G__208924,G__208925,G__208926,G__208927,G__208928,G__208929,G__208930,G__208931,G__208932,G__208933,G__208934,G__208935,G__208936,G__208937,G__208938,G__208939));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__208900,G__208901) : tailrecursion.hoplon.div.call(null,G__208900,G__208901));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__208899) : tailrecursion.hoplon.div.call(null,G__208899));
})(),(function (){var G__209037 = (function (){var G__209038 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__209039 = (function (){var G__209040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__209041 = "(";
var G__209042 = (function (){var G__209069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__209070 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209069,G__209070) : tailrecursion.hoplon.span.call(null,G__209069,G__209070));
})();
var G__209043 = (function (){var G__209071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__209072 = "fixed-point";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209071,G__209072) : tailrecursion.hoplon.span.call(null,G__209071,G__209072));
})();
var G__209044 = " [";
var G__209045 = (function (){var G__209073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__209074 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209073,G__209074) : tailrecursion.hoplon.span.call(null,G__209073,G__209074));
})();
var G__209046 = "]\n  ((";
var G__209047 = (function (){var G__209075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__209076 = "iterative-improve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209075,G__209076) : tailrecursion.hoplon.span.call(null,G__209075,G__209076));
})();
var G__209048 = " \n    ";
var G__209049 = (function (){var G__209077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__209078 = "#";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209077,G__209078) : tailrecursion.hoplon.span.call(null,G__209077,G__209078));
})();
var G__209050 = "(";
var G__209051 = (function (){var G__209079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__209080 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209079,G__209080) : tailrecursion.hoplon.span.call(null,G__209079,G__209080));
})();
var G__209052 = "(";
var G__209053 = (function (){var G__209081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__209082 = "Math/abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209081,G__209082) : tailrecursion.hoplon.span.call(null,G__209081,G__209082));
})();
var G__209054 = " (";
var G__209055 = (function (){var G__209083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__209084 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209083,G__209084) : tailrecursion.hoplon.span.call(null,G__209083,G__209084));
})();
var G__209056 = "(";
var G__209057 = (function (){var G__209085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__209086 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209085,G__209086) : tailrecursion.hoplon.span.call(null,G__209085,G__209086));
})();
var G__209058 = " ";
var G__209059 = (function (){var G__209087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__209088 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209087,G__209088) : tailrecursion.hoplon.span.call(null,G__209087,G__209088));
})();
var G__209060 = ") ";
var G__209061 = (function (){var G__209089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__209090 = "%";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209089,G__209090) : tailrecursion.hoplon.span.call(null,G__209089,G__209090));
})();
var G__209062 = ")) ";
var G__209063 = (function (){var G__209091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__209092 = "tolerance";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209091,G__209092) : tailrecursion.hoplon.span.call(null,G__209091,G__209092));
})();
var G__209064 = ")\n    ";
var G__209065 = (function (){var G__209093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__209094 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209093,G__209094) : tailrecursion.hoplon.span.call(null,G__209093,G__209094));
})();
var G__209066 = ")\n   ";
var G__209067 = (function (){var G__209095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__209096 = "1.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__209095,G__209096) : tailrecursion.hoplon.span.call(null,G__209095,G__209096));
})();
var G__209068 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__209040,G__209041,G__209042,G__209043,G__209044,G__209045,G__209046,G__209047,G__209048,G__209049,G__209050,G__209051,G__209052,G__209053,G__209054,G__209055,G__209056,G__209057,G__209058,G__209059,G__209060,G__209061,G__209062,G__209063,G__209064,G__209065,G__209066,G__209067,G__209068) : tailrecursion.hoplon.pre.call(null,G__209040,G__209041,G__209042,G__209043,G__209044,G__209045,G__209046,G__209047,G__209048,G__209049,G__209050,G__209051,G__209052,G__209053,G__209054,G__209055,G__209056,G__209057,G__209058,G__209059,G__209060,G__209061,G__209062,G__209063,G__209064,G__209065,G__209066,G__209067,G__209068));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__209038,G__209039) : tailrecursion.hoplon.div.call(null,G__209038,G__209039));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__209037) : tailrecursion.hoplon.div.call(null,G__209037));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208685;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208684;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_208683;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_208682;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$28(G__194634,G__194635,G__194636,G__194637,G__194638,G__194639,G__194640,G__194641,G__194642,G__194643,G__194644,G__194645,G__194646,G__194647,G__194648,G__194649,G__194650,G__194651,G__194652,G__194653,G__194654,G__194655,G__194656,G__194657,G__194658,G__194659,G__194660,G__194661) : tailrecursion.hoplon.div.call(null,G__194634,G__194635,G__194636,G__194637,G__194638,G__194639,G__194640,G__194641,G__194642,G__194643,G__194644,G__194645,G__194646,G__194647,G__194648,G__194649,G__194650,G__194651,G__194652,G__194653,G__194654,G__194655,G__194656,G__194657,G__194658,G__194659,G__194660,G__194661));
};
var book$sicp$texts$ch1sect3$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__209097__i = 0, G__209097__a = new Array(arguments.length -  0);
while (G__209097__i < G__209097__a.length) {G__209097__a[G__209097__i] = arguments[G__209097__i + 0]; ++G__209097__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__209097__a,0);
} 
return book$sicp$texts$ch1sect3$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch1sect3$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch1sect3$content.cljs$lang$applyTo = (function (arglist__209098){
var args__8262__auto__ = cljs.core.seq(arglist__209098);
return book$sicp$texts$ch1sect3$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch1sect3$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch1sect3$content__delegate;
return book$sicp$texts$ch1sect3$content;
})()
;

// Compiled by ClojureScript 1.7.48 {:static-fns true, :optimize-constants true}
goog.provide('book.sicp.texts.ch1sect2');
goog.require('cljs.core');
goog.require('tailrecursion.hoplon.markdown');
goog.require('book.sicp.book_data');
goog.require('tailrecursion.hoplon');
goog.require('tailrecursion.javelin');
/**
 * @param {...*} var_args
 */
book.sicp.texts.ch1sect2.content = (function() { 
var book$sicp$texts$ch1sect2$content__delegate = function (args__8262__auto__){
var vec__238144 = tailrecursion.hoplon.parse_args(args__8262__auto__);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__238144,(0),null);
var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__238144,(1),null);
var G__238145 = cljs.core.PersistentArrayMap.EMPTY;
var G__238146 = book.sicp.book_data.sect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Procedures and the Processes They Generate"], null),(function (){var _STAR_references_STAR_238176 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238177 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_238178 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238179 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__238180 = cljs.core.PersistentArrayMap.EMPTY;
var G__238181 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We have now considered the elements of programming: We have used primitive arithmetic operations, we have combined these operations, and we have abstracted these composite operations by defining them as compound procedures. But that is not enough to enable us to say that we know how to program. Our situation is analogous to that of someone who has learned the rules for how the pieces move in chess but knows nothing of typical openings, tactics, or strategy. Like the novice chess player, we don",(function (){var G__238182 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__238183 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__238182,G__238183) : tailrecursion.hoplon.markdown.simple_node.call(null,G__238182,G__238183));
})(),"t yet know the common patterns of usage in the domain. We lack the knowledge of which moves are worth making (which procedures are worth defining). We lack the experience to predict the consequences of making a move (executing a procedure)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238180,G__238181) : tailrecursion.hoplon.markdown.para_node.call(null,G__238180,G__238181));
})(),(function (){var G__238184 = cljs.core.PersistentArrayMap.EMPTY;
var G__238185 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ability to visualize the consequences of the actions under consideration is crucial to becoming an expert programmer, just as it is in any synthetic, creative activity. In becoming an expert photographer, for example, one must learn how to look at a scene and know how dark each region will appear on a print for each possible choice of exposure and development conditions. Only then can one reason backward, planning framing, lighting, exposure, and development to obtain the desired effects. So it is with programming, where we are planning the course of action to be taken by a process and where we control the process by means of a program. To become experts, we must learn to visualize the processes generated by various types of procedures. Only after we have developed such a skill can we learn to reliably construct programs that exhibit the desired behavior."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238184,G__238185) : tailrecursion.hoplon.markdown.para_node.call(null,G__238184,G__238185));
})(),(function (){var G__238186 = cljs.core.PersistentArrayMap.EMPTY;
var G__238187 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A procedure is a pattern for the local evolution of a computational process. It specifies how each stage of the process is built upon the previous stage. We would like to be able to make statements about the overall, or global, behavior of a process whose local evolution has been specified by a procedure. This is very difficult to do in general, but we can at least try to describe some typical patterns of process evolution."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238186,G__238187) : tailrecursion.hoplon.markdown.para_node.call(null,G__238186,G__238187));
})(),(function (){var G__238188 = cljs.core.PersistentArrayMap.EMPTY;
var G__238189 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In this section we will examine some common ",(function (){var G__238190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__238191 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238190,G__238191) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238190,G__238191));
})()," for processes generated by simple procedures. We will also investigate the rates at which these processes consume the important computational resources of time and space. The procedures we will consider are very simple. Their role is like that played by test patterns in photography: as oversimplified prototypical patterns, rather than practical examples in their own right."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238188,G__238189) : tailrecursion.hoplon.markdown.para_node.call(null,G__238188,G__238189));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238179;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238178;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238177;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238176;
}})()], 0));
var G__238147 = "";
var G__238148 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Linear Recursion and Iteration"], null),book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"A linear recursive process for computing 6!."], null)], 0)),(function (){var _STAR_references_STAR_238192 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238193 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_238194 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238195 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__238196 = cljs.core.PersistentArrayMap.EMPTY;
var G__238197 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We begin by considering the factorial function, defined by"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238196,G__238197) : tailrecursion.hoplon.markdown.para_node.call(null,G__238196,G__238197));
})(),(function (){var G__238198 = cljs.core.PersistentArrayMap.EMPTY;
var G__238199 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238198,G__238199) : tailrecursion.hoplon.markdown.para_node.call(null,G__238198,G__238199));
})(),(function (){var G__238200 = cljs.core.PersistentArrayMap.EMPTY;
var G__238201 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There are many ways to compute factorials. One way is to make use of the observation that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n!"], null)], 0))," is equal to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," times ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)!"], null)], 0))," for any positive integer ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238200,G__238201) : tailrecursion.hoplon.markdown.para_node.call(null,G__238200,G__238201));
})(),(function (){var G__238202 = cljs.core.PersistentArrayMap.EMPTY;
var G__238203 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$n!=n\\cdot\\left",tailrecursion.hoplon.markdown.ref_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$separator_DASH_space,null,cljs.core.cst$kw$reference_DASH_key,null], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)\\cdot(n-2)\\cdot\\cdot\\cdot3\\cdot2\\cdot1\\right"], null)], 0)),"=n\\cdot(n-1)!$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238202,G__238203) : tailrecursion.hoplon.markdown.para_node.call(null,G__238202,G__238203));
})(),(function (){var G__238204 = cljs.core.PersistentArrayMap.EMPTY;
var G__238205 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus we can compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(n-1)"], null)], 0)),"! and multiplying the result by ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". If we add the stipulation that 1! is equal to 1, this observation translates directly into a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238204,G__238205) : tailrecursion.hoplon.markdown.para_node.call(null,G__238204,G__238205));
})(),(function (){var G__238262 = (function (){var G__238263 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__238264 = (function (){var G__238265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__238266 = "(";
var G__238267 = (function (){var G__238291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238292 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238291,G__238292) : tailrecursion.hoplon.span.call(null,G__238291,G__238292));
})();
var G__238268 = (function (){var G__238293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238294 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238293,G__238294) : tailrecursion.hoplon.span.call(null,G__238293,G__238294));
})();
var G__238269 = " [";
var G__238270 = (function (){var G__238295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238296 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238295,G__238296) : tailrecursion.hoplon.span.call(null,G__238295,G__238296));
})();
var G__238271 = "]\n  (";
var G__238272 = (function (){var G__238297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238298 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238297,G__238298) : tailrecursion.hoplon.span.call(null,G__238297,G__238298));
})();
var G__238273 = "(";
var G__238274 = (function (){var G__238299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238300 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238299,G__238300) : tailrecursion.hoplon.span.call(null,G__238299,G__238300));
})();
var G__238275 = (function (){var G__238301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238302 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238301,G__238302) : tailrecursion.hoplon.span.call(null,G__238301,G__238302));
})();
var G__238276 = " ";
var G__238277 = (function (){var G__238303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__238304 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238303,G__238304) : tailrecursion.hoplon.span.call(null,G__238303,G__238304));
})();
var G__238278 = ")\n      ";
var G__238279 = (function (){var G__238305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__238306 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238305,G__238306) : tailrecursion.hoplon.span.call(null,G__238305,G__238306));
})();
var G__238280 = "\n      (";
var G__238281 = (function (){var G__238307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238308 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238307,G__238308) : tailrecursion.hoplon.span.call(null,G__238307,G__238308));
})();
var G__238282 = (function (){var G__238309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238310 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238309,G__238310) : tailrecursion.hoplon.span.call(null,G__238309,G__238310));
})();
var G__238283 = " (";
var G__238284 = (function (){var G__238311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__238312 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238311,G__238312) : tailrecursion.hoplon.span.call(null,G__238311,G__238312));
})();
var G__238285 = " (";
var G__238286 = (function (){var G__238313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238314 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238313,G__238314) : tailrecursion.hoplon.span.call(null,G__238313,G__238314));
})();
var G__238287 = (function (){var G__238315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238316 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238315,G__238316) : tailrecursion.hoplon.span.call(null,G__238315,G__238316));
})();
var G__238288 = " ";
var G__238289 = (function (){var G__238317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__238318 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238317,G__238318) : tailrecursion.hoplon.span.call(null,G__238317,G__238318));
})();
var G__238290 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__238265,G__238266,G__238267,G__238268,G__238269,G__238270,G__238271,G__238272,G__238273,G__238274,G__238275,G__238276,G__238277,G__238278,G__238279,G__238280,G__238281,G__238282,G__238283,G__238284,G__238285,G__238286,G__238287,G__238288,G__238289,G__238290) : tailrecursion.hoplon.pre.call(null,G__238265,G__238266,G__238267,G__238268,G__238269,G__238270,G__238271,G__238272,G__238273,G__238274,G__238275,G__238276,G__238277,G__238278,G__238279,G__238280,G__238281,G__238282,G__238283,G__238284,G__238285,G__238286,G__238287,G__238288,G__238289,G__238290));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__238263,G__238264) : tailrecursion.hoplon.div.call(null,G__238263,G__238264));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__238262) : tailrecursion.hoplon.div.call(null,G__238262));
})(),(function (){var G__238319 = cljs.core.PersistentArrayMap.EMPTY;
var G__238320 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use the substitution model of section ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/1/sub/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1.1.5"], null)], 0))," to watch this procedure in action computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure1-3",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238319,G__238320) : tailrecursion.hoplon.markdown.para_node.call(null,G__238319,G__238320));
})(),(function (){var G__238321 = cljs.core.PersistentArrayMap.EMPTY;
var G__238322 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now let",(function (){var G__238323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__238324 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__238323,G__238324) : tailrecursion.hoplon.markdown.simple_node.call(null,G__238323,G__238324));
})(),"s take a different perspective on computing factorials. We could describe a rule for computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! by specifying that we first multiply 1 by 2, then multiply the result by 3, then by 4, and so on until we reach ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More formally, we maintain a running product, together with a counter that counts from 1 up to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". We can describe the computation by saying that the counter and the product simultaneously change from one step to the next according to the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238321,G__238322) : tailrecursion.hoplon.markdown.para_node.call(null,G__238321,G__238322));
})(),(function (){var G__238325 = cljs.core.PersistentArrayMap.EMPTY;
var G__238326 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\text{product }\\rightarrow\\text{counter }\\cdot\\text{product}$$ $$\\text{counter }\\rightarrow\\text{ counter }+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238325,G__238326) : tailrecursion.hoplon.markdown.para_node.call(null,G__238325,G__238326));
})(),(function (){var G__238327 = cljs.core.PersistentArrayMap.EMPTY;
var G__238328 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and stipulating that ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"! is the value of the product when the counter exceeds ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238327,G__238328) : tailrecursion.hoplon.markdown.para_node.call(null,G__238327,G__238328));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238195;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238194;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238193;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238192;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"A linear iterative process for computing 6!"], null)], 0)),"",(function (){var _STAR_references_STAR_238329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_238331 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238332 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__238333 = cljs.core.PersistentArrayMap.EMPTY;
var G__238334 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Once again, we can recast our description as a procedure for computing factorials:",(function (){var G__238335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__238336 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In a real program we would hide the definition of ",(function (){var G__238337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fact-iter"], null);
var G__238338 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238337,G__238338) : tailrecursion.hoplon.markdown.code_node.call(null,G__238337,G__238338));
})()," using what",(function (){var G__238339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__238340 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__238339,G__238340) : tailrecursion.hoplon.markdown.simple_node.call(null,G__238339,G__238340));
})(),"s called a ",(function (){var G__238341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"let"], null);
var G__238342 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238341,G__238342) : tailrecursion.hoplon.markdown.code_node.call(null,G__238341,G__238342));
})()," binding, but we",(function (){var G__238343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__238344 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__238343,G__238344) : tailrecursion.hoplon.markdown.simple_node.call(null,G__238343,G__238344));
})(),"ll learn more about that later on."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238335,G__238336) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238335,G__238336));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238333,G__238334) : tailrecursion.hoplon.markdown.para_node.call(null,G__238333,G__238334));
})(),(function (){var G__238444 = (function (){var G__238445 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__238446 = (function (){var G__238447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__238448 = "(";
var G__238449 = (function (){var G__238494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238495 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238494,G__238495) : tailrecursion.hoplon.span.call(null,G__238494,G__238495));
})();
var G__238450 = (function (){var G__238496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238497 = "factorial";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238496,G__238497) : tailrecursion.hoplon.span.call(null,G__238496,G__238497));
})();
var G__238451 = " [";
var G__238452 = (function (){var G__238498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238499 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238498,G__238499) : tailrecursion.hoplon.span.call(null,G__238498,G__238499));
})();
var G__238453 = "]\n  (";
var G__238454 = (function (){var G__238500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__238501 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238500,G__238501) : tailrecursion.hoplon.span.call(null,G__238500,G__238501));
})();
var G__238455 = " ";
var G__238456 = (function (){var G__238502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__238503 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238502,G__238503) : tailrecursion.hoplon.span.call(null,G__238502,G__238503));
})();
var G__238457 = " ";
var G__238458 = (function (){var G__238504 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__238505 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238504,G__238505) : tailrecursion.hoplon.span.call(null,G__238504,G__238505));
})();
var G__238459 = " ";
var G__238460 = (function (){var G__238506 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238507 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238506,G__238507) : tailrecursion.hoplon.span.call(null,G__238506,G__238507));
})();
var G__238461 = "))\n(";
var G__238462 = (function (){var G__238508 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238509 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238508,G__238509) : tailrecursion.hoplon.span.call(null,G__238508,G__238509));
})();
var G__238463 = (function (){var G__238510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238511 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238510,G__238511) : tailrecursion.hoplon.span.call(null,G__238510,G__238511));
})();
var G__238464 = " [";
var G__238465 = (function (){var G__238512 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238513 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238512,G__238513) : tailrecursion.hoplon.span.call(null,G__238512,G__238513));
})();
var G__238466 = " ";
var G__238467 = (function (){var G__238514 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238515 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238514,G__238515) : tailrecursion.hoplon.span.call(null,G__238514,G__238515));
})();
var G__238468 = " ";
var G__238469 = (function (){var G__238516 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238517 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238516,G__238517) : tailrecursion.hoplon.span.call(null,G__238516,G__238517));
})();
var G__238470 = "]\n  (";
var G__238471 = (function (){var G__238518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238519 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238518,G__238519) : tailrecursion.hoplon.span.call(null,G__238518,G__238519));
})();
var G__238472 = "(";
var G__238473 = (function (){var G__238520 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238521 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238520,G__238521) : tailrecursion.hoplon.span.call(null,G__238520,G__238521));
})();
var G__238474 = (function (){var G__238522 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238523 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238522,G__238523) : tailrecursion.hoplon.span.call(null,G__238522,G__238523));
})();
var G__238475 = " ";
var G__238476 = (function (){var G__238524 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238525 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238524,G__238525) : tailrecursion.hoplon.span.call(null,G__238524,G__238525));
})();
var G__238477 = ")\n      ";
var G__238478 = (function (){var G__238526 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238527 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238526,G__238527) : tailrecursion.hoplon.span.call(null,G__238526,G__238527));
})();
var G__238479 = "\n      (";
var G__238480 = (function (){var G__238528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__238529 = "fact-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238528,G__238529) : tailrecursion.hoplon.span.call(null,G__238528,G__238529));
})();
var G__238481 = " (";
var G__238482 = (function (){var G__238530 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238531 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238530,G__238531) : tailrecursion.hoplon.span.call(null,G__238530,G__238531));
})();
var G__238483 = (function (){var G__238532 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238533 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238532,G__238533) : tailrecursion.hoplon.span.call(null,G__238532,G__238533));
})();
var G__238484 = " ";
var G__238485 = (function (){var G__238534 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238535 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238534,G__238535) : tailrecursion.hoplon.span.call(null,G__238534,G__238535));
})();
var G__238486 = ")\n                 (";
var G__238487 = (function (){var G__238536 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238537 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238536,G__238537) : tailrecursion.hoplon.span.call(null,G__238536,G__238537));
})();
var G__238488 = (function (){var G__238538 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238539 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238538,G__238539) : tailrecursion.hoplon.span.call(null,G__238538,G__238539));
})();
var G__238489 = " ";
var G__238490 = (function (){var G__238540 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__238541 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238540,G__238541) : tailrecursion.hoplon.span.call(null,G__238540,G__238541));
})();
var G__238491 = ")\n                 ";
var G__238492 = (function (){var G__238542 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238543 = "max-count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238542,G__238543) : tailrecursion.hoplon.span.call(null,G__238542,G__238543));
})();
var G__238493 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$47(G__238447,G__238448,G__238449,G__238450,G__238451,G__238452,G__238453,G__238454,G__238455,G__238456,G__238457,G__238458,G__238459,G__238460,G__238461,G__238462,G__238463,G__238464,G__238465,G__238466,G__238467,G__238468,G__238469,G__238470,G__238471,G__238472,G__238473,G__238474,G__238475,G__238476,G__238477,G__238478,G__238479,G__238480,G__238481,G__238482,G__238483,G__238484,G__238485,G__238486,G__238487,G__238488,G__238489,G__238490,G__238491,G__238492,G__238493) : tailrecursion.hoplon.pre.call(null,G__238447,G__238448,G__238449,G__238450,G__238451,G__238452,G__238453,G__238454,G__238455,G__238456,G__238457,G__238458,G__238459,G__238460,G__238461,G__238462,G__238463,G__238464,G__238465,G__238466,G__238467,G__238468,G__238469,G__238470,G__238471,G__238472,G__238473,G__238474,G__238475,G__238476,G__238477,G__238478,G__238479,G__238480,G__238481,G__238482,G__238483,G__238484,G__238485,G__238486,G__238487,G__238488,G__238489,G__238490,G__238491,G__238492,G__238493));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__238445,G__238446) : tailrecursion.hoplon.div.call(null,G__238445,G__238446));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__238444) : tailrecursion.hoplon.div.call(null,G__238444));
})(),(function (){var G__238544 = cljs.core.PersistentArrayMap.EMPTY;
var G__238545 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As before, we can use the substitution model to visualize the process of computing 6!, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-4",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.4"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238544,G__238545) : tailrecursion.hoplon.markdown.para_node.call(null,G__238544,G__238545));
})(),(function (){var G__238546 = cljs.core.PersistentArrayMap.EMPTY;
var G__238547 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Compare the two processes. From one point of view, they seem hardly different at all. Both compute the sam emathematical function on the same domain, and each reauires a number of steps proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," to compute ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!. Indeed, both processes even carry out the same sequence of multiplications, obtaining the same sequence of partial products. On the other hand, when we consider the ",(function (){var G__238548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__238549 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["shapes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238548,G__238549) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238548,G__238549));
})()," of the two processes, we find that they evolve quite differently."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238546,G__238547) : tailrecursion.hoplon.markdown.para_node.call(null,G__238546,G__238547));
})(),(function (){var G__238550 = cljs.core.PersistentArrayMap.EMPTY;
var G__238551 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the first process. The substitution model reveals a shape of expansion followed by contraction, indicated by the arrow in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-3",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.3"], null)], 0)),". The expansion occurs as the process builds up a chain of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["deferred operations"], null)], 0))," (in this case, a chain of multiplications). The contraction occurs as the operations are actually performed. This type of process, characterized by a chain of deferred operations, is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["recursive process"], null)], 0)),". Carrying out this process requires that the interpreter keep track of the operations to be performed later on. In the computation of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the length of the chain of deffered multiplications, and hence the amount of information needed to keep track of it, grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0))," (is proportional to ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"), just like the number of steps. Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear recursive process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238550,G__238551) : tailrecursion.hoplon.markdown.para_node.call(null,G__238550,G__238551));
})(),(function (){var G__238552 = cljs.core.PersistentArrayMap.EMPTY;
var G__238553 = new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By contrast, the second process does not grow and shrink. At each step, all we need to keep track of, for any ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),", are the current values of the variables ",(function (){var G__238554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"product"], null);
var G__238555 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238554,G__238555) : tailrecursion.hoplon.markdown.code_node.call(null,G__238554,G__238555));
})(),", ",(function (){var G__238556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"counter"], null);
var G__238557 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238556,G__238557) : tailrecursion.hoplon.markdown.code_node.call(null,G__238556,G__238557));
})(),", and ",(function (){var G__238558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"max-count"], null);
var G__238559 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238558,G__238559) : tailrecursion.hoplon.markdown.code_node.call(null,G__238558,G__238559));
})(),". We call this an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["iterative process"], null)], 0)),". In general, an iterative process is one whose state can be summarized by a fixed number of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["state variables"], null)], 0)),", together with a fixed rule that describes how the state variables should be updated as the process moves from state to state and an (optional) end test that specifies conditions under which the process should terminate. In computing ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),"!, the number of steps required grows linearly with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". Such a process is called a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["linear iterative process"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238552,G__238553) : tailrecursion.hoplon.markdown.para_node.call(null,G__238552,G__238553));
})(),(function (){var G__238560 = cljs.core.PersistentArrayMap.EMPTY;
var G__238561 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The contrast between the two processes can be seen in another way. In the iterative case, the program variables provide a complete description of the state of the process at any point. If we stopped the computation between steps, all we would need to do to resume the computation is to supply the interpreter with the values of the three program variables. Not so with the recursive process. In this case there is some additional ",(function (){var G__238562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__238563 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["hidden"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238562,G__238563) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238562,G__238563));
})()," information, maintained by the interpreter and not contained in the program variables, which indicates ",(function (){var G__238564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__238565 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where the process is"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238564,G__238565) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238564,G__238565));
})()," in negotiating the chain of deferred operations. The longer the chain, the more information must be maintained.",(function (){var G__238566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__238567 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["When we discuss the implementation of procedures on register machines in chapter 5, we will see that any iterative process can be realized ",(function (){var G__238568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__238569 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["in hardware"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238568,G__238569) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238568,G__238569));
})()," as a machine that has a fixed set of registers and no auxiliary memory. In contrast, realizing a recursive process requires a machine that uses an auxiliary data structure known as a ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["stack"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238566,G__238567) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238566,G__238567));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238560,G__238561) : tailrecursion.hoplon.markdown.para_node.call(null,G__238560,G__238561));
})(),(function (){var G__238570 = cljs.core.PersistentArrayMap.EMPTY;
var G__238571 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In contrasting iteration and recursion, we must be careful not to confuse the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["process"], null)], 0))," and the notion of a recursive ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["procedure"], null)], 0)),". When we describe a procedure as recursive, we are referring to the syntactic fact that the procedure definition refers (either directly or indirectly) to the procedure itself. But when we describe a process as following a pattern that is, say, linearly recursive, we are speaking about how the process evolves, not about the syntax of how a procedure is written. It may seem disturbing that we refer to a recursive procedure such as ",(function (){var G__238572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fact-iter"], null);
var G__238573 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238572,G__238573) : tailrecursion.hoplon.markdown.code_node.call(null,G__238572,G__238573));
})()," as generating an iterative process. However, the process really is iterative: Its state is captured completely by its three state variables, and an interpreter need keep track of only three variables in order to execute the process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238570,G__238571) : tailrecursion.hoplon.markdown.para_node.call(null,G__238570,G__238571));
})(),(function (){var G__238574 = cljs.core.PersistentArrayMap.EMPTY;
var G__238575 = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One reason that the distinction between process and procedure may be confusing is that most implementations of common languages (including Ada, Pascal, and C) are designed in such a way that the interpretation of any recursive procedure consumes an amount of memory that grows with the number of procedure calls, even when the process described is, in principle, iterative. As a consequence, these languages can describe iterative processes only by resorting to special-purpose ",(function (){var G__238576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__238577 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["looping constructs"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238576,G__238577) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238576,G__238577));
})()," such as ",(function (){var G__238578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"do"], null);
var G__238579 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238578,G__238579) : tailrecursion.hoplon.markdown.code_node.call(null,G__238578,G__238579));
})(),", ",(function (){var G__238580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"repeat"], null);
var G__238581 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238580,G__238581) : tailrecursion.hoplon.markdown.code_node.call(null,G__238580,G__238581));
})(),", ",(function (){var G__238582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"until"], null);
var G__238583 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238582,G__238583) : tailrecursion.hoplon.markdown.code_node.call(null,G__238582,G__238583));
})(),", ",(function (){var G__238584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"for"], null);
var G__238585 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238584,G__238585) : tailrecursion.hoplon.markdown.code_node.call(null,G__238584,G__238585));
})(),", and ",(function (){var G__238586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"while"], null);
var G__238587 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238586,G__238587) : tailrecursion.hoplon.markdown.code_node.call(null,G__238586,G__238587));
})(),". The implemenation of Scheme we shall consider in chapter 5 does not share this defect. It will execute an iterative process in constant space, even if the iterative process is described by a recursive procedure. An implementation with this property is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tail-recursive"], null)], 0)),". With a tail-recursive implementation, iteration can be expressed using the ordinary procedure call mechanism, so that special iteration constructs are useful only as syntactic sugar.",(function (){var G__238588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__238589 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Tail recursion has long been known as a compiler optimization trick. A coherent semantic basis for tail recursion was provided by Carl Hewitt (1977), who explained it in terms of the ",(function (){var G__238590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__238591 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["message-passing"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238590,G__238591) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238590,G__238591));
})()," model of computation that we shall discuss in chapter 3. Inspired by this, Gerald Jay Sussman and Guy Lewis Steele Jr. (see Steele 1975) constructed a tail-recursive interpreter for Scheme. Steele later showed how tail recursion is a consequence of the natural way to compile procedure calls (Steele 1977). The IEEE standard for Scheme requires that Scheme implementations be tail-recursive."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__238588,G__238589) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__238588,G__238589));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238574,G__238575) : tailrecursion.hoplon.markdown.para_node.call(null,G__238574,G__238575));
})(),(function (){var G__238592 = cljs.core.PersistentArrayMap.EMPTY;
var G__238593 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__238594 = cljs.core.PersistentArrayMap.EMPTY;
var G__238595 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is worthwhile to note at this point that Clojure is not tail-recursive."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238594,G__238595) : tailrecursion.hoplon.markdown.para_node.call(null,G__238594,G__238595));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__238592,G__238593) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__238592,G__238593));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238332;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238331;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238329;
}})()], 0));
var G__238149 = "";
var G__238150 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"9-10"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(9)], null),(function (){var _STAR_references_STAR_238596 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238597 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_238598 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238599 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__238600 = cljs.core.PersistentArrayMap.EMPTY;
var G__238601 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Each of the following two procedures defines a method for adding two positive integers in terms of the procedures ",(function (){var G__238602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"inc"], null);
var G__238603 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238602,G__238603) : tailrecursion.hoplon.markdown.code_node.call(null,G__238602,G__238603));
})(),", which increments its arguments by 1, and ",(function (){var G__238604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"dec"], null);
var G__238605 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238604,G__238605) : tailrecursion.hoplon.markdown.code_node.call(null,G__238604,G__238605));
})(),", which decrements its arguments by 1."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238600,G__238601) : tailrecursion.hoplon.markdown.para_node.call(null,G__238600,G__238601));
})(),(function (){var G__238663 = (function (){var G__238664 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__238665 = (function (){var G__238666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__238667 = "(";
var G__238668 = (function (){var G__238693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238694 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238693,G__238694) : tailrecursion.hoplon.span.call(null,G__238693,G__238694));
})();
var G__238669 = (function (){var G__238695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238696 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238695,G__238696) : tailrecursion.hoplon.span.call(null,G__238695,G__238696));
})();
var G__238670 = "[";
var G__238671 = (function (){var G__238697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238698 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238697,G__238698) : tailrecursion.hoplon.span.call(null,G__238697,G__238698));
})();
var G__238672 = " ";
var G__238673 = (function (){var G__238699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238700 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238699,G__238700) : tailrecursion.hoplon.span.call(null,G__238699,G__238700));
})();
var G__238674 = "]\n  (";
var G__238675 = (function (){var G__238701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238702 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238701,G__238702) : tailrecursion.hoplon.span.call(null,G__238701,G__238702));
})();
var G__238676 = "(";
var G__238677 = (function (){var G__238703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238704 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238703,G__238704) : tailrecursion.hoplon.span.call(null,G__238703,G__238704));
})();
var G__238678 = (function (){var G__238705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238706 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238705,G__238706) : tailrecursion.hoplon.span.call(null,G__238705,G__238706));
})();
var G__238679 = " ";
var G__238680 = (function (){var G__238707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__238708 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238707,G__238708) : tailrecursion.hoplon.span.call(null,G__238707,G__238708));
})();
var G__238681 = ")\n      ";
var G__238682 = (function (){var G__238709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238710 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238709,G__238710) : tailrecursion.hoplon.span.call(null,G__238709,G__238710));
})();
var G__238683 = "\n      (";
var G__238684 = (function (){var G__238711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238712 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238711,G__238712) : tailrecursion.hoplon.span.call(null,G__238711,G__238712));
})();
var G__238685 = "(";
var G__238686 = (function (){var G__238713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238714 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238713,G__238714) : tailrecursion.hoplon.span.call(null,G__238713,G__238714));
})();
var G__238687 = "(";
var G__238688 = (function (){var G__238715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238716 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238715,G__238716) : tailrecursion.hoplon.span.call(null,G__238715,G__238716));
})();
var G__238689 = (function (){var G__238717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238718 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238717,G__238718) : tailrecursion.hoplon.span.call(null,G__238717,G__238718));
})();
var G__238690 = ") ";
var G__238691 = (function (){var G__238719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238720 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238719,G__238720) : tailrecursion.hoplon.span.call(null,G__238719,G__238720));
})();
var G__238692 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__238666,G__238667,G__238668,G__238669,G__238670,G__238671,G__238672,G__238673,G__238674,G__238675,G__238676,G__238677,G__238678,G__238679,G__238680,G__238681,G__238682,G__238683,G__238684,G__238685,G__238686,G__238687,G__238688,G__238689,G__238690,G__238691,G__238692) : tailrecursion.hoplon.pre.call(null,G__238666,G__238667,G__238668,G__238669,G__238670,G__238671,G__238672,G__238673,G__238674,G__238675,G__238676,G__238677,G__238678,G__238679,G__238680,G__238681,G__238682,G__238683,G__238684,G__238685,G__238686,G__238687,G__238688,G__238689,G__238690,G__238691,G__238692));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__238664,G__238665) : tailrecursion.hoplon.div.call(null,G__238664,G__238665));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__238663) : tailrecursion.hoplon.div.call(null,G__238663));
})(),(function (){var G__238777 = (function (){var G__238778 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__238779 = (function (){var G__238780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__238781 = "(";
var G__238782 = (function (){var G__238806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238807 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238806,G__238807) : tailrecursion.hoplon.span.call(null,G__238806,G__238807));
})();
var G__238783 = (function (){var G__238808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238809 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238808,G__238809) : tailrecursion.hoplon.span.call(null,G__238808,G__238809));
})();
var G__238784 = "[";
var G__238785 = (function (){var G__238810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238811 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238810,G__238811) : tailrecursion.hoplon.span.call(null,G__238810,G__238811));
})();
var G__238786 = " ";
var G__238787 = (function (){var G__238812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238813 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238812,G__238813) : tailrecursion.hoplon.span.call(null,G__238812,G__238813));
})();
var G__238788 = "]\n  (";
var G__238789 = (function (){var G__238814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__238815 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238814,G__238815) : tailrecursion.hoplon.span.call(null,G__238814,G__238815));
})();
var G__238790 = "(";
var G__238791 = (function (){var G__238816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238817 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238816,G__238817) : tailrecursion.hoplon.span.call(null,G__238816,G__238817));
})();
var G__238792 = (function (){var G__238818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238819 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238818,G__238819) : tailrecursion.hoplon.span.call(null,G__238818,G__238819));
})();
var G__238793 = " ";
var G__238794 = (function (){var G__238820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__238821 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238820,G__238821) : tailrecursion.hoplon.span.call(null,G__238820,G__238821));
})();
var G__238795 = ")\n      ";
var G__238796 = (function (){var G__238822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238823 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238822,G__238823) : tailrecursion.hoplon.span.call(null,G__238822,G__238823));
})();
var G__238797 = "\n      (";
var G__238798 = (function (){var G__238824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238825 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238824,G__238825) : tailrecursion.hoplon.span.call(null,G__238824,G__238825));
})();
var G__238799 = "(";
var G__238800 = (function (){var G__238826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238827 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238826,G__238827) : tailrecursion.hoplon.span.call(null,G__238826,G__238827));
})();
var G__238801 = (function (){var G__238828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238829 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238828,G__238829) : tailrecursion.hoplon.span.call(null,G__238828,G__238829));
})();
var G__238802 = ") (";
var G__238803 = (function (){var G__238830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__238831 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238830,G__238831) : tailrecursion.hoplon.span.call(null,G__238830,G__238831));
})();
var G__238804 = (function (){var G__238832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__238833 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__238832,G__238833) : tailrecursion.hoplon.span.call(null,G__238832,G__238833));
})();
var G__238805 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$26(G__238780,G__238781,G__238782,G__238783,G__238784,G__238785,G__238786,G__238787,G__238788,G__238789,G__238790,G__238791,G__238792,G__238793,G__238794,G__238795,G__238796,G__238797,G__238798,G__238799,G__238800,G__238801,G__238802,G__238803,G__238804,G__238805) : tailrecursion.hoplon.pre.call(null,G__238780,G__238781,G__238782,G__238783,G__238784,G__238785,G__238786,G__238787,G__238788,G__238789,G__238790,G__238791,G__238792,G__238793,G__238794,G__238795,G__238796,G__238797,G__238798,G__238799,G__238800,G__238801,G__238802,G__238803,G__238804,G__238805));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__238778,G__238779) : tailrecursion.hoplon.div.call(null,G__238778,G__238779));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__238777) : tailrecursion.hoplon.div.call(null,G__238777));
})(),(function (){var G__238834 = cljs.core.PersistentArrayMap.EMPTY;
var G__238835 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the substitution model, illustrate the process generated by each procedure in evaluating ",(function (){var G__238836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ 4 5)"], null);
var G__238837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__238836,G__238837) : tailrecursion.hoplon.markdown.code_node.call(null,G__238836,G__238837));
})(),". Are these processes iterative or recursive?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238834,G__238835) : tailrecursion.hoplon.markdown.para_node.call(null,G__238834,G__238835));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238599;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238598;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238597;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238596;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_238838 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238839 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_238840 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_238841 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__238842 = cljs.core.PersistentArrayMap.EMPTY;
var G__238843 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The first is recursive, and the second is iterative. Let",(function (){var G__238844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__238845 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__238844,G__238845) : tailrecursion.hoplon.markdown.simple_node.call(null,G__238844,G__238845));
})(),"s see why",(function (){var G__238846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__238847 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__238846,G__238847) : tailrecursion.hoplon.markdown.simple_node.call(null,G__238846,G__238847));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238842,G__238843) : tailrecursion.hoplon.markdown.para_node.call(null,G__238842,G__238843));
})(),(function (){var G__238848 = cljs.core.PersistentArrayMap.EMPTY;
var G__238849 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the first definition,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__238848,G__238849) : tailrecursion.hoplon.markdown.para_node.call(null,G__238848,G__238849));
})(),(function (){var G__239105 = (function (){var G__239106 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__239107 = (function (){var G__239108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__239109 = "(";
var G__239110 = (function (){var G__239229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239230 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239229,G__239230) : tailrecursion.hoplon.span.call(null,G__239229,G__239230));
})();
var G__239111 = (function (){var G__239231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239232 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239231,G__239232) : tailrecursion.hoplon.span.call(null,G__239231,G__239232));
})();
var G__239112 = " ";
var G__239113 = (function (){var G__239233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239234 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239233,G__239234) : tailrecursion.hoplon.span.call(null,G__239233,G__239234));
})();
var G__239114 = ")\n(";
var G__239115 = (function (){var G__239235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239236 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239235,G__239236) : tailrecursion.hoplon.span.call(null,G__239235,G__239236));
})();
var G__239116 = "(";
var G__239117 = (function (){var G__239237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239238 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239237,G__239238) : tailrecursion.hoplon.span.call(null,G__239237,G__239238));
})();
var G__239118 = "(";
var G__239119 = (function (){var G__239239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239240 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239239,G__239240) : tailrecursion.hoplon.span.call(null,G__239239,G__239240));
})();
var G__239120 = (function (){var G__239241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239242 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239241,G__239242) : tailrecursion.hoplon.span.call(null,G__239241,G__239242));
})();
var G__239121 = ") ";
var G__239122 = (function (){var G__239243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239244 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239243,G__239244) : tailrecursion.hoplon.span.call(null,G__239243,G__239244));
})();
var G__239123 = "))\n(";
var G__239124 = (function (){var G__239245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239246 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239245,G__239246) : tailrecursion.hoplon.span.call(null,G__239245,G__239246));
})();
var G__239125 = "(";
var G__239126 = (function (){var G__239247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239248 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239247,G__239248) : tailrecursion.hoplon.span.call(null,G__239247,G__239248));
})();
var G__239127 = (function (){var G__239249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239250 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239249,G__239250) : tailrecursion.hoplon.span.call(null,G__239249,G__239250));
})();
var G__239128 = " ";
var G__239129 = (function (){var G__239251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239252 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239251,G__239252) : tailrecursion.hoplon.span.call(null,G__239251,G__239252));
})();
var G__239130 = "))\n(";
var G__239131 = (function (){var G__239253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239254 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239253,G__239254) : tailrecursion.hoplon.span.call(null,G__239253,G__239254));
})();
var G__239132 = "(";
var G__239133 = (function (){var G__239255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239256 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239255,G__239256) : tailrecursion.hoplon.span.call(null,G__239255,G__239256));
})();
var G__239134 = "(";
var G__239135 = (function (){var G__239257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239258 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239257,G__239258) : tailrecursion.hoplon.span.call(null,G__239257,G__239258));
})();
var G__239136 = "(";
var G__239137 = (function (){var G__239259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239260 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239259,G__239260) : tailrecursion.hoplon.span.call(null,G__239259,G__239260));
})();
var G__239138 = (function (){var G__239261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239262 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239261,G__239262) : tailrecursion.hoplon.span.call(null,G__239261,G__239262));
})();
var G__239139 = ") ";
var G__239140 = (function (){var G__239263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239264 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239263,G__239264) : tailrecursion.hoplon.span.call(null,G__239263,G__239264));
})();
var G__239141 = ")))\n(";
var G__239142 = (function (){var G__239265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239266 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239265,G__239266) : tailrecursion.hoplon.span.call(null,G__239265,G__239266));
})();
var G__239143 = "(";
var G__239144 = (function (){var G__239267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239268 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239267,G__239268) : tailrecursion.hoplon.span.call(null,G__239267,G__239268));
})();
var G__239145 = "(";
var G__239146 = (function (){var G__239269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239270 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239269,G__239270) : tailrecursion.hoplon.span.call(null,G__239269,G__239270));
})();
var G__239147 = (function (){var G__239271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239272 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239271,G__239272) : tailrecursion.hoplon.span.call(null,G__239271,G__239272));
})();
var G__239148 = " ";
var G__239149 = (function (){var G__239273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239274 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239273,G__239274) : tailrecursion.hoplon.span.call(null,G__239273,G__239274));
})();
var G__239150 = ")))\n(";
var G__239151 = (function (){var G__239275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239276 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239275,G__239276) : tailrecursion.hoplon.span.call(null,G__239275,G__239276));
})();
var G__239152 = "(";
var G__239153 = (function (){var G__239277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239278 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239277,G__239278) : tailrecursion.hoplon.span.call(null,G__239277,G__239278));
})();
var G__239154 = "(";
var G__239155 = (function (){var G__239279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239280 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239279,G__239280) : tailrecursion.hoplon.span.call(null,G__239279,G__239280));
})();
var G__239156 = "(";
var G__239157 = (function (){var G__239281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239282 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239281,G__239282) : tailrecursion.hoplon.span.call(null,G__239281,G__239282));
})();
var G__239158 = "(";
var G__239159 = (function (){var G__239283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239284 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239283,G__239284) : tailrecursion.hoplon.span.call(null,G__239283,G__239284));
})();
var G__239160 = (function (){var G__239285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239286 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239285,G__239286) : tailrecursion.hoplon.span.call(null,G__239285,G__239286));
})();
var G__239161 = ") ";
var G__239162 = (function (){var G__239287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239288 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239287,G__239288) : tailrecursion.hoplon.span.call(null,G__239287,G__239288));
})();
var G__239163 = "))))\n(";
var G__239164 = (function (){var G__239289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239290 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239289,G__239290) : tailrecursion.hoplon.span.call(null,G__239289,G__239290));
})();
var G__239165 = "(";
var G__239166 = (function (){var G__239291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239292 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239291,G__239292) : tailrecursion.hoplon.span.call(null,G__239291,G__239292));
})();
var G__239167 = "(";
var G__239168 = (function (){var G__239293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239294 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239293,G__239294) : tailrecursion.hoplon.span.call(null,G__239293,G__239294));
})();
var G__239169 = "(";
var G__239170 = (function (){var G__239295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239296 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239295,G__239296) : tailrecursion.hoplon.span.call(null,G__239295,G__239296));
})();
var G__239171 = (function (){var G__239297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239298 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239297,G__239298) : tailrecursion.hoplon.span.call(null,G__239297,G__239298));
})();
var G__239172 = " ";
var G__239173 = (function (){var G__239299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239300 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239299,G__239300) : tailrecursion.hoplon.span.call(null,G__239299,G__239300));
})();
var G__239174 = "))))\n(";
var G__239175 = (function (){var G__239301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239302 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239301,G__239302) : tailrecursion.hoplon.span.call(null,G__239301,G__239302));
})();
var G__239176 = "(";
var G__239177 = (function (){var G__239303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239304 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239303,G__239304) : tailrecursion.hoplon.span.call(null,G__239303,G__239304));
})();
var G__239178 = "(";
var G__239179 = (function (){var G__239305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239306 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239305,G__239306) : tailrecursion.hoplon.span.call(null,G__239305,G__239306));
})();
var G__239180 = "(";
var G__239181 = (function (){var G__239307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239308 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239307,G__239308) : tailrecursion.hoplon.span.call(null,G__239307,G__239308));
})();
var G__239182 = "(";
var G__239183 = (function (){var G__239309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239310 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239309,G__239310) : tailrecursion.hoplon.span.call(null,G__239309,G__239310));
})();
var G__239184 = "(";
var G__239185 = (function (){var G__239311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239312 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239311,G__239312) : tailrecursion.hoplon.span.call(null,G__239311,G__239312));
})();
var G__239186 = (function (){var G__239313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239314 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239313,G__239314) : tailrecursion.hoplon.span.call(null,G__239313,G__239314));
})();
var G__239187 = ") ";
var G__239188 = (function (){var G__239315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239316 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239315,G__239316) : tailrecursion.hoplon.span.call(null,G__239315,G__239316));
})();
var G__239189 = ")))))\n(";
var G__239190 = (function (){var G__239317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239318 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239317,G__239318) : tailrecursion.hoplon.span.call(null,G__239317,G__239318));
})();
var G__239191 = "(";
var G__239192 = (function (){var G__239319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239320 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239319,G__239320) : tailrecursion.hoplon.span.call(null,G__239319,G__239320));
})();
var G__239193 = "(";
var G__239194 = (function (){var G__239321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239322 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239321,G__239322) : tailrecursion.hoplon.span.call(null,G__239321,G__239322));
})();
var G__239195 = "(";
var G__239196 = (function (){var G__239323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239324 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239323,G__239324) : tailrecursion.hoplon.span.call(null,G__239323,G__239324));
})();
var G__239197 = "(";
var G__239198 = (function (){var G__239325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239326 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239325,G__239326) : tailrecursion.hoplon.span.call(null,G__239325,G__239326));
})();
var G__239199 = (function (){var G__239327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239328 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239327,G__239328) : tailrecursion.hoplon.span.call(null,G__239327,G__239328));
})();
var G__239200 = " ";
var G__239201 = (function (){var G__239329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239330 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239329,G__239330) : tailrecursion.hoplon.span.call(null,G__239329,G__239330));
})();
var G__239202 = ")))))\n(";
var G__239203 = (function (){var G__239331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239332 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239331,G__239332) : tailrecursion.hoplon.span.call(null,G__239331,G__239332));
})();
var G__239204 = "(";
var G__239205 = (function (){var G__239333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239334 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239333,G__239334) : tailrecursion.hoplon.span.call(null,G__239333,G__239334));
})();
var G__239206 = "(";
var G__239207 = (function (){var G__239335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239336 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239335,G__239336) : tailrecursion.hoplon.span.call(null,G__239335,G__239336));
})();
var G__239208 = "(";
var G__239209 = (function (){var G__239337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239338 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239337,G__239338) : tailrecursion.hoplon.span.call(null,G__239337,G__239338));
})();
var G__239210 = (function (){var G__239339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239340 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239339,G__239340) : tailrecursion.hoplon.span.call(null,G__239339,G__239340));
})();
var G__239211 = "))))\n(";
var G__239212 = (function (){var G__239341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239342 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239341,G__239342) : tailrecursion.hoplon.span.call(null,G__239341,G__239342));
})();
var G__239213 = "(";
var G__239214 = (function (){var G__239343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239344 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239343,G__239344) : tailrecursion.hoplon.span.call(null,G__239343,G__239344));
})();
var G__239215 = "(";
var G__239216 = (function (){var G__239345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239346 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239345,G__239346) : tailrecursion.hoplon.span.call(null,G__239345,G__239346));
})();
var G__239217 = (function (){var G__239347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239348 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239347,G__239348) : tailrecursion.hoplon.span.call(null,G__239347,G__239348));
})();
var G__239218 = ")))\n(";
var G__239219 = (function (){var G__239349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239350 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239349,G__239350) : tailrecursion.hoplon.span.call(null,G__239349,G__239350));
})();
var G__239220 = "(";
var G__239221 = (function (){var G__239351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239352 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239351,G__239352) : tailrecursion.hoplon.span.call(null,G__239351,G__239352));
})();
var G__239222 = (function (){var G__239353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239354 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239353,G__239354) : tailrecursion.hoplon.span.call(null,G__239353,G__239354));
})();
var G__239223 = "))\n(";
var G__239224 = (function (){var G__239355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239356 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239355,G__239356) : tailrecursion.hoplon.span.call(null,G__239355,G__239356));
})();
var G__239225 = (function (){var G__239357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239358 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239357,G__239358) : tailrecursion.hoplon.span.call(null,G__239357,G__239358));
})();
var G__239226 = ")\n";
var G__239227 = (function (){var G__239359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239360 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239359,G__239360) : tailrecursion.hoplon.span.call(null,G__239359,G__239360));
})();
var G__239228 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$121(G__239108,G__239109,G__239110,G__239111,G__239112,G__239113,G__239114,G__239115,G__239116,G__239117,G__239118,G__239119,G__239120,G__239121,G__239122,G__239123,G__239124,G__239125,G__239126,G__239127,G__239128,G__239129,G__239130,G__239131,G__239132,G__239133,G__239134,G__239135,G__239136,G__239137,G__239138,G__239139,G__239140,G__239141,G__239142,G__239143,G__239144,G__239145,G__239146,G__239147,G__239148,G__239149,G__239150,G__239151,G__239152,G__239153,G__239154,G__239155,G__239156,G__239157,G__239158,G__239159,G__239160,G__239161,G__239162,G__239163,G__239164,G__239165,G__239166,G__239167,G__239168,G__239169,G__239170,G__239171,G__239172,G__239173,G__239174,G__239175,G__239176,G__239177,G__239178,G__239179,G__239180,G__239181,G__239182,G__239183,G__239184,G__239185,G__239186,G__239187,G__239188,G__239189,G__239190,G__239191,G__239192,G__239193,G__239194,G__239195,G__239196,G__239197,G__239198,G__239199,G__239200,G__239201,G__239202,G__239203,G__239204,G__239205,G__239206,G__239207,G__239208,G__239209,G__239210,G__239211,G__239212,G__239213,G__239214,G__239215,G__239216,G__239217,G__239218,G__239219,G__239220,G__239221,G__239222,G__239223,G__239224,G__239225,G__239226,G__239227,G__239228) : tailrecursion.hoplon.pre.call(null,G__239108,G__239109,G__239110,G__239111,G__239112,G__239113,G__239114,G__239115,G__239116,G__239117,G__239118,G__239119,G__239120,G__239121,G__239122,G__239123,G__239124,G__239125,G__239126,G__239127,G__239128,G__239129,G__239130,G__239131,G__239132,G__239133,G__239134,G__239135,G__239136,G__239137,G__239138,G__239139,G__239140,G__239141,G__239142,G__239143,G__239144,G__239145,G__239146,G__239147,G__239148,G__239149,G__239150,G__239151,G__239152,G__239153,G__239154,G__239155,G__239156,G__239157,G__239158,G__239159,G__239160,G__239161,G__239162,G__239163,G__239164,G__239165,G__239166,G__239167,G__239168,G__239169,G__239170,G__239171,G__239172,G__239173,G__239174,G__239175,G__239176,G__239177,G__239178,G__239179,G__239180,G__239181,G__239182,G__239183,G__239184,G__239185,G__239186,G__239187,G__239188,G__239189,G__239190,G__239191,G__239192,G__239193,G__239194,G__239195,G__239196,G__239197,G__239198,G__239199,G__239200,G__239201,G__239202,G__239203,G__239204,G__239205,G__239206,G__239207,G__239208,G__239209,G__239210,G__239211,G__239212,G__239213,G__239214,G__239215,G__239216,G__239217,G__239218,G__239219,G__239220,G__239221,G__239222,G__239223,G__239224,G__239225,G__239226,G__239227,G__239228));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__239106,G__239107) : tailrecursion.hoplon.div.call(null,G__239106,G__239107));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__239105) : tailrecursion.hoplon.div.call(null,G__239105));
})(),(function (){var G__239361 = cljs.core.PersistentArrayMap.EMPTY;
var G__239362 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clearly recursive in the way it grows."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__239361,G__239362) : tailrecursion.hoplon.markdown.para_node.call(null,G__239361,G__239362));
})(),(function (){var G__239363 = cljs.core.PersistentArrayMap.EMPTY;
var G__239364 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["With the second, however,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__239363,G__239364) : tailrecursion.hoplon.markdown.para_node.call(null,G__239363,G__239364));
})(),(function (){var G__239500 = (function (){var G__239501 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__239502 = (function (){var G__239503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__239504 = "(";
var G__239505 = (function (){var G__239564 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239565 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239564,G__239565) : tailrecursion.hoplon.span.call(null,G__239564,G__239565));
})();
var G__239506 = (function (){var G__239566 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239567 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239566,G__239567) : tailrecursion.hoplon.span.call(null,G__239566,G__239567));
})();
var G__239507 = " ";
var G__239508 = (function (){var G__239568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239569 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239568,G__239569) : tailrecursion.hoplon.span.call(null,G__239568,G__239569));
})();
var G__239509 = ")\n(";
var G__239510 = (function (){var G__239570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239571 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239570,G__239571) : tailrecursion.hoplon.span.call(null,G__239570,G__239571));
})();
var G__239511 = "(";
var G__239512 = (function (){var G__239572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239573 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239572,G__239573) : tailrecursion.hoplon.span.call(null,G__239572,G__239573));
})();
var G__239513 = (function (){var G__239574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239575 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239574,G__239575) : tailrecursion.hoplon.span.call(null,G__239574,G__239575));
})();
var G__239514 = ") (";
var G__239515 = (function (){var G__239576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239577 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239576,G__239577) : tailrecursion.hoplon.span.call(null,G__239576,G__239577));
})();
var G__239516 = (function (){var G__239578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239579 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239578,G__239579) : tailrecursion.hoplon.span.call(null,G__239578,G__239579));
})();
var G__239517 = "))\n(";
var G__239518 = (function (){var G__239580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239581 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239580,G__239581) : tailrecursion.hoplon.span.call(null,G__239580,G__239581));
})();
var G__239519 = (function (){var G__239582 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239583 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239582,G__239583) : tailrecursion.hoplon.span.call(null,G__239582,G__239583));
})();
var G__239520 = " ";
var G__239521 = (function (){var G__239584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239585 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239584,G__239585) : tailrecursion.hoplon.span.call(null,G__239584,G__239585));
})();
var G__239522 = ")\n(";
var G__239523 = (function (){var G__239586 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239587 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239586,G__239587) : tailrecursion.hoplon.span.call(null,G__239586,G__239587));
})();
var G__239524 = "(";
var G__239525 = (function (){var G__239588 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239589 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239588,G__239589) : tailrecursion.hoplon.span.call(null,G__239588,G__239589));
})();
var G__239526 = (function (){var G__239590 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239591 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239590,G__239591) : tailrecursion.hoplon.span.call(null,G__239590,G__239591));
})();
var G__239527 = ") (";
var G__239528 = (function (){var G__239592 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239593 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239592,G__239593) : tailrecursion.hoplon.span.call(null,G__239592,G__239593));
})();
var G__239529 = (function (){var G__239594 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239595 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239594,G__239595) : tailrecursion.hoplon.span.call(null,G__239594,G__239595));
})();
var G__239530 = "))\n(";
var G__239531 = (function (){var G__239596 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239597 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239596,G__239597) : tailrecursion.hoplon.span.call(null,G__239596,G__239597));
})();
var G__239532 = (function (){var G__239598 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239599 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239598,G__239599) : tailrecursion.hoplon.span.call(null,G__239598,G__239599));
})();
var G__239533 = " ";
var G__239534 = (function (){var G__239600 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239601 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239600,G__239601) : tailrecursion.hoplon.span.call(null,G__239600,G__239601));
})();
var G__239535 = ")\n(";
var G__239536 = (function (){var G__239602 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239603 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239602,G__239603) : tailrecursion.hoplon.span.call(null,G__239602,G__239603));
})();
var G__239537 = "(";
var G__239538 = (function (){var G__239604 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239605 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239604,G__239605) : tailrecursion.hoplon.span.call(null,G__239604,G__239605));
})();
var G__239539 = (function (){var G__239606 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239607 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239606,G__239607) : tailrecursion.hoplon.span.call(null,G__239606,G__239607));
})();
var G__239540 = ") (";
var G__239541 = (function (){var G__239608 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239609 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239608,G__239609) : tailrecursion.hoplon.span.call(null,G__239608,G__239609));
})();
var G__239542 = (function (){var G__239610 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239611 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239610,G__239611) : tailrecursion.hoplon.span.call(null,G__239610,G__239611));
})();
var G__239543 = "))\n(";
var G__239544 = (function (){var G__239612 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239613 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239612,G__239613) : tailrecursion.hoplon.span.call(null,G__239612,G__239613));
})();
var G__239545 = (function (){var G__239614 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239615 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239614,G__239615) : tailrecursion.hoplon.span.call(null,G__239614,G__239615));
})();
var G__239546 = " ";
var G__239547 = (function (){var G__239616 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239617 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239616,G__239617) : tailrecursion.hoplon.span.call(null,G__239616,G__239617));
})();
var G__239548 = ")\n(";
var G__239549 = (function (){var G__239618 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239619 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239618,G__239619) : tailrecursion.hoplon.span.call(null,G__239618,G__239619));
})();
var G__239550 = "(";
var G__239551 = (function (){var G__239620 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239621 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239620,G__239621) : tailrecursion.hoplon.span.call(null,G__239620,G__239621));
})();
var G__239552 = (function (){var G__239622 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239623 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239622,G__239623) : tailrecursion.hoplon.span.call(null,G__239622,G__239623));
})();
var G__239553 = ") (";
var G__239554 = (function (){var G__239624 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239625 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239624,G__239625) : tailrecursion.hoplon.span.call(null,G__239624,G__239625));
})();
var G__239555 = (function (){var G__239626 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239627 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239626,G__239627) : tailrecursion.hoplon.span.call(null,G__239626,G__239627));
})();
var G__239556 = "))\n(";
var G__239557 = (function (){var G__239628 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239629 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239628,G__239629) : tailrecursion.hoplon.span.call(null,G__239628,G__239629));
})();
var G__239558 = (function (){var G__239630 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239631 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239630,G__239631) : tailrecursion.hoplon.span.call(null,G__239630,G__239631));
})();
var G__239559 = " ";
var G__239560 = (function (){var G__239632 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239633 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239632,G__239633) : tailrecursion.hoplon.span.call(null,G__239632,G__239633));
})();
var G__239561 = ")\n";
var G__239562 = (function (){var G__239634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239635 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239634,G__239635) : tailrecursion.hoplon.span.call(null,G__239634,G__239635));
})();
var G__239563 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__239503,G__239504,G__239505,G__239506,G__239507,G__239508,G__239509,G__239510,G__239511,G__239512,G__239513,G__239514,G__239515,G__239516,G__239517,G__239518,G__239519,G__239520,G__239521,G__239522,G__239523,G__239524,G__239525,G__239526,G__239527,G__239528,G__239529,G__239530,G__239531,G__239532,G__239533,G__239534,G__239535,G__239536,G__239537,G__239538,G__239539,G__239540,G__239541,G__239542,G__239543,G__239544,G__239545,G__239546,G__239547,G__239548,G__239549,G__239550,G__239551,G__239552,G__239553,G__239554,G__239555,G__239556,G__239557,G__239558,G__239559,G__239560,G__239561,G__239562,G__239563) : tailrecursion.hoplon.pre.call(null,G__239503,G__239504,G__239505,G__239506,G__239507,G__239508,G__239509,G__239510,G__239511,G__239512,G__239513,G__239514,G__239515,G__239516,G__239517,G__239518,G__239519,G__239520,G__239521,G__239522,G__239523,G__239524,G__239525,G__239526,G__239527,G__239528,G__239529,G__239530,G__239531,G__239532,G__239533,G__239534,G__239535,G__239536,G__239537,G__239538,G__239539,G__239540,G__239541,G__239542,G__239543,G__239544,G__239545,G__239546,G__239547,G__239548,G__239549,G__239550,G__239551,G__239552,G__239553,G__239554,G__239555,G__239556,G__239557,G__239558,G__239559,G__239560,G__239561,G__239562,G__239563));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__239501,G__239502) : tailrecursion.hoplon.div.call(null,G__239501,G__239502));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__239500) : tailrecursion.hoplon.div.call(null,G__239500));
})(),(function (){var G__239636 = cljs.core.PersistentArrayMap.EMPTY;
var G__239637 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You see the space needed to compute the second was significantly less than that of the first."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__239636,G__239637) : tailrecursion.hoplon.markdown.para_node.call(null,G__239636,G__239637));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238841;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238840;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_238839;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_238838;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(10)], null),(function (){var _STAR_references_STAR_239638 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_239639 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_239640 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_239641 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__239642 = cljs.core.PersistentArrayMap.EMPTY;
var G__239643 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure computes a mathematical function called Ackermann",(function (){var G__239644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__239645 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__239644,G__239645) : tailrecursion.hoplon.markdown.simple_node.call(null,G__239644,G__239645));
})(),"s function."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__239642,G__239643) : tailrecursion.hoplon.markdown.para_node.call(null,G__239642,G__239643));
})(),(function (){var G__239759 = (function (){var G__239760 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__239761 = (function (){var G__239762 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__239763 = "(";
var G__239764 = (function (){var G__239815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__239816 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239815,G__239816) : tailrecursion.hoplon.span.call(null,G__239815,G__239816));
})();
var G__239765 = (function (){var G__239817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239818 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239817,G__239818) : tailrecursion.hoplon.span.call(null,G__239817,G__239818));
})();
var G__239766 = " [";
var G__239767 = (function (){var G__239819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239820 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239819,G__239820) : tailrecursion.hoplon.span.call(null,G__239819,G__239820));
})();
var G__239768 = " ";
var G__239769 = (function (){var G__239821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239822 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239821,G__239822) : tailrecursion.hoplon.span.call(null,G__239821,G__239822));
})();
var G__239770 = "]\n  (";
var G__239771 = (function (){var G__239823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239824 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239823,G__239824) : tailrecursion.hoplon.span.call(null,G__239823,G__239824));
})();
var G__239772 = "(";
var G__239773 = (function (){var G__239825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239826 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239825,G__239826) : tailrecursion.hoplon.span.call(null,G__239825,G__239826));
})();
var G__239774 = (function (){var G__239827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239828 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239827,G__239828) : tailrecursion.hoplon.span.call(null,G__239827,G__239828));
})();
var G__239775 = " ";
var G__239776 = (function (){var G__239829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239830 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239829,G__239830) : tailrecursion.hoplon.span.call(null,G__239829,G__239830));
})();
var G__239777 = ") ";
var G__239778 = (function (){var G__239831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239832 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239831,G__239832) : tailrecursion.hoplon.span.call(null,G__239831,G__239832));
})();
var G__239779 = "\n        (";
var G__239780 = (function (){var G__239833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239834 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239833,G__239834) : tailrecursion.hoplon.span.call(null,G__239833,G__239834));
})();
var G__239781 = (function (){var G__239835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239836 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239835,G__239836) : tailrecursion.hoplon.span.call(null,G__239835,G__239836));
})();
var G__239782 = " ";
var G__239783 = (function (){var G__239837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239838 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239837,G__239838) : tailrecursion.hoplon.span.call(null,G__239837,G__239838));
})();
var G__239784 = ") (";
var G__239785 = (function (){var G__239839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239840 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239839,G__239840) : tailrecursion.hoplon.span.call(null,G__239839,G__239840));
})();
var G__239786 = (function (){var G__239841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239842 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239841,G__239842) : tailrecursion.hoplon.span.call(null,G__239841,G__239842));
})();
var G__239787 = " ";
var G__239788 = (function (){var G__239843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239844 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239843,G__239844) : tailrecursion.hoplon.span.call(null,G__239843,G__239844));
})();
var G__239789 = ")\n        (";
var G__239790 = (function (){var G__239845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239846 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239845,G__239846) : tailrecursion.hoplon.span.call(null,G__239845,G__239846));
})();
var G__239791 = (function (){var G__239847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239848 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239847,G__239848) : tailrecursion.hoplon.span.call(null,G__239847,G__239848));
})();
var G__239792 = " ";
var G__239793 = (function (){var G__239849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239850 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239849,G__239850) : tailrecursion.hoplon.span.call(null,G__239849,G__239850));
})();
var G__239794 = ") ";
var G__239795 = (function (){var G__239851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239852 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239851,G__239852) : tailrecursion.hoplon.span.call(null,G__239851,G__239852));
})();
var G__239796 = "\n        ";
var G__239797 = (function (){var G__239853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239854 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239853,G__239854) : tailrecursion.hoplon.span.call(null,G__239853,G__239854));
})();
var G__239798 = " (";
var G__239799 = (function (){var G__239855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__239856 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239855,G__239856) : tailrecursion.hoplon.span.call(null,G__239855,G__239856));
})();
var G__239800 = " (";
var G__239801 = (function (){var G__239857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239858 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239857,G__239858) : tailrecursion.hoplon.span.call(null,G__239857,G__239858));
})();
var G__239802 = (function (){var G__239859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239860 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239859,G__239860) : tailrecursion.hoplon.span.call(null,G__239859,G__239860));
})();
var G__239803 = " ";
var G__239804 = (function (){var G__239861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239862 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239861,G__239862) : tailrecursion.hoplon.span.call(null,G__239861,G__239862));
})();
var G__239805 = ")\n                 (";
var G__239806 = (function (){var G__239863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__239864 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239863,G__239864) : tailrecursion.hoplon.span.call(null,G__239863,G__239864));
})();
var G__239807 = " ";
var G__239808 = (function (){var G__239865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239866 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239865,G__239866) : tailrecursion.hoplon.span.call(null,G__239865,G__239866));
})();
var G__239809 = " (";
var G__239810 = (function (){var G__239867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__239868 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239867,G__239868) : tailrecursion.hoplon.span.call(null,G__239867,G__239868));
})();
var G__239811 = (function (){var G__239869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__239870 = "y";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239869,G__239870) : tailrecursion.hoplon.span.call(null,G__239869,G__239870));
})();
var G__239812 = " ";
var G__239813 = (function (){var G__239871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239872 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239871,G__239872) : tailrecursion.hoplon.span.call(null,G__239871,G__239872));
})();
var G__239814 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$53(G__239762,G__239763,G__239764,G__239765,G__239766,G__239767,G__239768,G__239769,G__239770,G__239771,G__239772,G__239773,G__239774,G__239775,G__239776,G__239777,G__239778,G__239779,G__239780,G__239781,G__239782,G__239783,G__239784,G__239785,G__239786,G__239787,G__239788,G__239789,G__239790,G__239791,G__239792,G__239793,G__239794,G__239795,G__239796,G__239797,G__239798,G__239799,G__239800,G__239801,G__239802,G__239803,G__239804,G__239805,G__239806,G__239807,G__239808,G__239809,G__239810,G__239811,G__239812,G__239813,G__239814) : tailrecursion.hoplon.pre.call(null,G__239762,G__239763,G__239764,G__239765,G__239766,G__239767,G__239768,G__239769,G__239770,G__239771,G__239772,G__239773,G__239774,G__239775,G__239776,G__239777,G__239778,G__239779,G__239780,G__239781,G__239782,G__239783,G__239784,G__239785,G__239786,G__239787,G__239788,G__239789,G__239790,G__239791,G__239792,G__239793,G__239794,G__239795,G__239796,G__239797,G__239798,G__239799,G__239800,G__239801,G__239802,G__239803,G__239804,G__239805,G__239806,G__239807,G__239808,G__239809,G__239810,G__239811,G__239812,G__239813,G__239814));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__239760,G__239761) : tailrecursion.hoplon.div.call(null,G__239760,G__239761));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__239759) : tailrecursion.hoplon.div.call(null,G__239759));
})(),(function (){var G__239873 = cljs.core.PersistentArrayMap.EMPTY;
var G__239874 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What are the values of the following expressions?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__239873,G__239874) : tailrecursion.hoplon.markdown.para_node.call(null,G__239873,G__239874));
})(),(function (){var G__239891 = (function (){var G__239892 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__239893 = (function (){var G__239894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__239895 = "(";
var G__239896 = (function (){var G__239902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__239903 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239902,G__239903) : tailrecursion.hoplon.span.call(null,G__239902,G__239903));
})();
var G__239897 = " ";
var G__239898 = (function (){var G__239904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239905 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239904,G__239905) : tailrecursion.hoplon.span.call(null,G__239904,G__239905));
})();
var G__239899 = " ";
var G__239900 = (function (){var G__239906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__239907 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__239906,G__239907) : tailrecursion.hoplon.span.call(null,G__239906,G__239907));
})();
var G__239901 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__239894,G__239895,G__239896,G__239897,G__239898,G__239899,G__239900,G__239901) : tailrecursion.hoplon.pre.call(null,G__239894,G__239895,G__239896,G__239897,G__239898,G__239899,G__239900,G__239901));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__239892,G__239893) : tailrecursion.hoplon.div.call(null,G__239892,G__239893));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__239891) : tailrecursion.hoplon.div.call(null,G__239891));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_239641;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_239640;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_239639;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_239638;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_239908 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_239909 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_239910 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_239911 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__240952 = (function (){var G__240953 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__240954 = (function (){var G__240955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__240956 = "(";
var G__240957 = (function (){var G__241469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241470 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241469,G__241470) : tailrecursion.hoplon.span.call(null,G__241469,G__241470));
})();
var G__240958 = " ";
var G__240959 = (function (){var G__241471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241472 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241471,G__241472) : tailrecursion.hoplon.span.call(null,G__241471,G__241472));
})();
var G__240960 = " ";
var G__240961 = (function (){var G__241473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241474 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241473,G__241474) : tailrecursion.hoplon.span.call(null,G__241473,G__241474));
})();
var G__240962 = ")\n(";
var G__240963 = (function (){var G__241475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241476 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241475,G__241476) : tailrecursion.hoplon.span.call(null,G__241475,G__241476));
})();
var G__240964 = " (";
var G__240965 = (function (){var G__241477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241478 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241477,G__241478) : tailrecursion.hoplon.span.call(null,G__241477,G__241478));
})();
var G__240966 = (function (){var G__241479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241480 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241479,G__241480) : tailrecursion.hoplon.span.call(null,G__241479,G__241480));
})();
var G__240967 = " ";
var G__240968 = (function (){var G__241481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241482 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241481,G__241482) : tailrecursion.hoplon.span.call(null,G__241481,G__241482));
})();
var G__240969 = ") (";
var G__240970 = (function (){var G__241483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241484 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241483,G__241484) : tailrecursion.hoplon.span.call(null,G__241483,G__241484));
})();
var G__240971 = " ";
var G__240972 = (function (){var G__241485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241486 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241485,G__241486) : tailrecursion.hoplon.span.call(null,G__241485,G__241486));
})();
var G__240973 = " (";
var G__240974 = (function (){var G__241487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241488 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241487,G__241488) : tailrecursion.hoplon.span.call(null,G__241487,G__241488));
})();
var G__240975 = (function (){var G__241489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241490 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241489,G__241490) : tailrecursion.hoplon.span.call(null,G__241489,G__241490));
})();
var G__240976 = " ";
var G__240977 = (function (){var G__241491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241492 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241491,G__241492) : tailrecursion.hoplon.span.call(null,G__241491,G__241492));
})();
var G__240978 = ")))\n(";
var G__240979 = (function (){var G__241493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241494 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241493,G__241494) : tailrecursion.hoplon.span.call(null,G__241493,G__241494));
})();
var G__240980 = " ";
var G__240981 = (function (){var G__241495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241496 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241495,G__241496) : tailrecursion.hoplon.span.call(null,G__241495,G__241496));
})();
var G__240982 = " (";
var G__240983 = (function (){var G__241497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241498 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241497,G__241498) : tailrecursion.hoplon.span.call(null,G__241497,G__241498));
})();
var G__240984 = " ";
var G__240985 = (function (){var G__241499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241500 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241499,G__241500) : tailrecursion.hoplon.span.call(null,G__241499,G__241500));
})();
var G__240986 = " ";
var G__240987 = (function (){var G__241501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241502 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241501,G__241502) : tailrecursion.hoplon.span.call(null,G__241501,G__241502));
})();
var G__240988 = "))\n(";
var G__240989 = (function (){var G__241503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241504 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241503,G__241504) : tailrecursion.hoplon.span.call(null,G__241503,G__241504));
})();
var G__240990 = " ";
var G__240991 = (function (){var G__241505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241506 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241505,G__241506) : tailrecursion.hoplon.span.call(null,G__241505,G__241506));
})();
var G__240992 = " (";
var G__240993 = (function (){var G__241507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241508 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241507,G__241508) : tailrecursion.hoplon.span.call(null,G__241507,G__241508));
})();
var G__240994 = " ";
var G__240995 = (function (){var G__241509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241510 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241509,G__241510) : tailrecursion.hoplon.span.call(null,G__241509,G__241510));
})();
var G__240996 = " (";
var G__240997 = (function (){var G__241511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241512 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241511,G__241512) : tailrecursion.hoplon.span.call(null,G__241511,G__241512));
})();
var G__240998 = " ";
var G__240999 = (function (){var G__241513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241514 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241513,G__241514) : tailrecursion.hoplon.span.call(null,G__241513,G__241514));
})();
var G__241000 = " (";
var G__241001 = (function (){var G__241515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241516 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241515,G__241516) : tailrecursion.hoplon.span.call(null,G__241515,G__241516));
})();
var G__241002 = (function (){var G__241517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241518 = "9";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241517,G__241518) : tailrecursion.hoplon.span.call(null,G__241517,G__241518));
})();
var G__241003 = " ";
var G__241004 = (function (){var G__241519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241520 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241519,G__241520) : tailrecursion.hoplon.span.call(null,G__241519,G__241520));
})();
var G__241005 = "))))\n(";
var G__241006 = (function (){var G__241521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241522 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241521,G__241522) : tailrecursion.hoplon.span.call(null,G__241521,G__241522));
})();
var G__241007 = " ";
var G__241008 = (function (){var G__241523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241524 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241523,G__241524) : tailrecursion.hoplon.span.call(null,G__241523,G__241524));
})();
var G__241009 = " (";
var G__241010 = (function (){var G__241525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241526 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241525,G__241526) : tailrecursion.hoplon.span.call(null,G__241525,G__241526));
})();
var G__241011 = " ";
var G__241012 = (function (){var G__241527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241528 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241527,G__241528) : tailrecursion.hoplon.span.call(null,G__241527,G__241528));
})();
var G__241013 = " (";
var G__241014 = (function (){var G__241529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241530 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241529,G__241530) : tailrecursion.hoplon.span.call(null,G__241529,G__241530));
})();
var G__241015 = " ";
var G__241016 = (function (){var G__241531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241532 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241531,G__241532) : tailrecursion.hoplon.span.call(null,G__241531,G__241532));
})();
var G__241017 = " ";
var G__241018 = (function (){var G__241533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241534 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241533,G__241534) : tailrecursion.hoplon.span.call(null,G__241533,G__241534));
})();
var G__241019 = ")))\n(";
var G__241020 = (function (){var G__241535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241536 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241535,G__241536) : tailrecursion.hoplon.span.call(null,G__241535,G__241536));
})();
var G__241021 = " ";
var G__241022 = (function (){var G__241537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241538 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241537,G__241538) : tailrecursion.hoplon.span.call(null,G__241537,G__241538));
})();
var G__241023 = " (";
var G__241024 = (function (){var G__241539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241540 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241539,G__241540) : tailrecursion.hoplon.span.call(null,G__241539,G__241540));
})();
var G__241025 = " ";
var G__241026 = (function (){var G__241541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241542 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241541,G__241542) : tailrecursion.hoplon.span.call(null,G__241541,G__241542));
})();
var G__241027 = " (";
var G__241028 = (function (){var G__241543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241544 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241543,G__241544) : tailrecursion.hoplon.span.call(null,G__241543,G__241544));
})();
var G__241029 = " ";
var G__241030 = (function (){var G__241545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241546 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241545,G__241546) : tailrecursion.hoplon.span.call(null,G__241545,G__241546));
})();
var G__241031 = " (";
var G__241032 = (function (){var G__241547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241548 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241547,G__241548) : tailrecursion.hoplon.span.call(null,G__241547,G__241548));
})();
var G__241033 = " ";
var G__241034 = (function (){var G__241549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241550 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241549,G__241550) : tailrecursion.hoplon.span.call(null,G__241549,G__241550));
})();
var G__241035 = " (";
var G__241036 = (function (){var G__241551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241552 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241551,G__241552) : tailrecursion.hoplon.span.call(null,G__241551,G__241552));
})();
var G__241037 = (function (){var G__241553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241554 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241553,G__241554) : tailrecursion.hoplon.span.call(null,G__241553,G__241554));
})();
var G__241038 = " ";
var G__241039 = (function (){var G__241555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241556 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241555,G__241556) : tailrecursion.hoplon.span.call(null,G__241555,G__241556));
})();
var G__241040 = ")))))\n(";
var G__241041 = (function (){var G__241557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241558 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241557,G__241558) : tailrecursion.hoplon.span.call(null,G__241557,G__241558));
})();
var G__241042 = " ";
var G__241043 = (function (){var G__241559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241560 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241559,G__241560) : tailrecursion.hoplon.span.call(null,G__241559,G__241560));
})();
var G__241044 = " (";
var G__241045 = (function (){var G__241561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241562 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241561,G__241562) : tailrecursion.hoplon.span.call(null,G__241561,G__241562));
})();
var G__241046 = " ";
var G__241047 = (function (){var G__241563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241564 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241563,G__241564) : tailrecursion.hoplon.span.call(null,G__241563,G__241564));
})();
var G__241048 = " (";
var G__241049 = (function (){var G__241565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241566 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241565,G__241566) : tailrecursion.hoplon.span.call(null,G__241565,G__241566));
})();
var G__241050 = " ";
var G__241051 = (function (){var G__241567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241568 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241567,G__241568) : tailrecursion.hoplon.span.call(null,G__241567,G__241568));
})();
var G__241052 = " (";
var G__241053 = (function (){var G__241569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241570 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241569,G__241570) : tailrecursion.hoplon.span.call(null,G__241569,G__241570));
})();
var G__241054 = " ";
var G__241055 = (function (){var G__241571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241572 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241571,G__241572) : tailrecursion.hoplon.span.call(null,G__241571,G__241572));
})();
var G__241056 = " (";
var G__241057 = (function (){var G__241573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241574 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241573,G__241574) : tailrecursion.hoplon.span.call(null,G__241573,G__241574));
})();
var G__241058 = " ";
var G__241059 = (function (){var G__241575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241576 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241575,G__241576) : tailrecursion.hoplon.span.call(null,G__241575,G__241576));
})();
var G__241060 = " (";
var G__241061 = (function (){var G__241577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241578 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241577,G__241578) : tailrecursion.hoplon.span.call(null,G__241577,G__241578));
})();
var G__241062 = (function (){var G__241579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241580 = "7";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241579,G__241580) : tailrecursion.hoplon.span.call(null,G__241579,G__241580));
})();
var G__241063 = " ";
var G__241064 = (function (){var G__241581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241582 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241581,G__241582) : tailrecursion.hoplon.span.call(null,G__241581,G__241582));
})();
var G__241065 = "))))))\n(";
var G__241066 = (function (){var G__241583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241584 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241583,G__241584) : tailrecursion.hoplon.span.call(null,G__241583,G__241584));
})();
var G__241067 = " ";
var G__241068 = (function (){var G__241585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241586 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241585,G__241586) : tailrecursion.hoplon.span.call(null,G__241585,G__241586));
})();
var G__241069 = " (";
var G__241070 = (function (){var G__241587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241588 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241587,G__241588) : tailrecursion.hoplon.span.call(null,G__241587,G__241588));
})();
var G__241071 = " ";
var G__241072 = (function (){var G__241589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241590 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241589,G__241590) : tailrecursion.hoplon.span.call(null,G__241589,G__241590));
})();
var G__241073 = " (";
var G__241074 = (function (){var G__241591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241592 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241591,G__241592) : tailrecursion.hoplon.span.call(null,G__241591,G__241592));
})();
var G__241075 = " ";
var G__241076 = (function (){var G__241593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241594 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241593,G__241594) : tailrecursion.hoplon.span.call(null,G__241593,G__241594));
})();
var G__241077 = " (";
var G__241078 = (function (){var G__241595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241596 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241595,G__241596) : tailrecursion.hoplon.span.call(null,G__241595,G__241596));
})();
var G__241079 = " ";
var G__241080 = (function (){var G__241597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241598 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241597,G__241598) : tailrecursion.hoplon.span.call(null,G__241597,G__241598));
})();
var G__241081 = " (";
var G__241082 = (function (){var G__241599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241600 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241599,G__241600) : tailrecursion.hoplon.span.call(null,G__241599,G__241600));
})();
var G__241083 = " ";
var G__241084 = (function (){var G__241601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241602 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241601,G__241602) : tailrecursion.hoplon.span.call(null,G__241601,G__241602));
})();
var G__241085 = " (";
var G__241086 = (function (){var G__241603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241604 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241603,G__241604) : tailrecursion.hoplon.span.call(null,G__241603,G__241604));
})();
var G__241087 = " ";
var G__241088 = (function (){var G__241605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241606 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241605,G__241606) : tailrecursion.hoplon.span.call(null,G__241605,G__241606));
})();
var G__241089 = " (";
var G__241090 = (function (){var G__241607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241608 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241607,G__241608) : tailrecursion.hoplon.span.call(null,G__241607,G__241608));
})();
var G__241091 = (function (){var G__241609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241610 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241609,G__241610) : tailrecursion.hoplon.span.call(null,G__241609,G__241610));
})();
var G__241092 = " ";
var G__241093 = (function (){var G__241611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241612 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241611,G__241612) : tailrecursion.hoplon.span.call(null,G__241611,G__241612));
})();
var G__241094 = ")))))))\n(";
var G__241095 = (function (){var G__241613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241614 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241613,G__241614) : tailrecursion.hoplon.span.call(null,G__241613,G__241614));
})();
var G__241096 = " ";
var G__241097 = (function (){var G__241615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241616 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241615,G__241616) : tailrecursion.hoplon.span.call(null,G__241615,G__241616));
})();
var G__241098 = " (";
var G__241099 = (function (){var G__241617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241618 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241617,G__241618) : tailrecursion.hoplon.span.call(null,G__241617,G__241618));
})();
var G__241100 = " ";
var G__241101 = (function (){var G__241619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241620 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241619,G__241620) : tailrecursion.hoplon.span.call(null,G__241619,G__241620));
})();
var G__241102 = " (";
var G__241103 = (function (){var G__241621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241622 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241621,G__241622) : tailrecursion.hoplon.span.call(null,G__241621,G__241622));
})();
var G__241104 = " ";
var G__241105 = (function (){var G__241623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241624 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241623,G__241624) : tailrecursion.hoplon.span.call(null,G__241623,G__241624));
})();
var G__241106 = " (";
var G__241107 = (function (){var G__241625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241626 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241625,G__241626) : tailrecursion.hoplon.span.call(null,G__241625,G__241626));
})();
var G__241108 = " ";
var G__241109 = (function (){var G__241627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241628 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241627,G__241628) : tailrecursion.hoplon.span.call(null,G__241627,G__241628));
})();
var G__241110 = " (";
var G__241111 = (function (){var G__241629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241630 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241629,G__241630) : tailrecursion.hoplon.span.call(null,G__241629,G__241630));
})();
var G__241112 = " ";
var G__241113 = (function (){var G__241631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241632 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241631,G__241632) : tailrecursion.hoplon.span.call(null,G__241631,G__241632));
})();
var G__241114 = " (";
var G__241115 = (function (){var G__241633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241634 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241633,G__241634) : tailrecursion.hoplon.span.call(null,G__241633,G__241634));
})();
var G__241116 = " ";
var G__241117 = (function (){var G__241635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241636 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241635,G__241636) : tailrecursion.hoplon.span.call(null,G__241635,G__241636));
})();
var G__241118 = " (";
var G__241119 = (function (){var G__241637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241638 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241637,G__241638) : tailrecursion.hoplon.span.call(null,G__241637,G__241638));
})();
var G__241120 = " ";
var G__241121 = (function (){var G__241639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241640 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241639,G__241640) : tailrecursion.hoplon.span.call(null,G__241639,G__241640));
})();
var G__241122 = " (";
var G__241123 = (function (){var G__241641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241642 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241641,G__241642) : tailrecursion.hoplon.span.call(null,G__241641,G__241642));
})();
var G__241124 = (function (){var G__241643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241644 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241643,G__241644) : tailrecursion.hoplon.span.call(null,G__241643,G__241644));
})();
var G__241125 = " ";
var G__241126 = (function (){var G__241645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241646 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241645,G__241646) : tailrecursion.hoplon.span.call(null,G__241645,G__241646));
})();
var G__241127 = "))))))))\n(";
var G__241128 = (function (){var G__241647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241648 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241647,G__241648) : tailrecursion.hoplon.span.call(null,G__241647,G__241648));
})();
var G__241129 = " ";
var G__241130 = (function (){var G__241649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241650 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241649,G__241650) : tailrecursion.hoplon.span.call(null,G__241649,G__241650));
})();
var G__241131 = " (";
var G__241132 = (function (){var G__241651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241652 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241651,G__241652) : tailrecursion.hoplon.span.call(null,G__241651,G__241652));
})();
var G__241133 = " ";
var G__241134 = (function (){var G__241653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241654 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241653,G__241654) : tailrecursion.hoplon.span.call(null,G__241653,G__241654));
})();
var G__241135 = " (";
var G__241136 = (function (){var G__241655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241656 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241655,G__241656) : tailrecursion.hoplon.span.call(null,G__241655,G__241656));
})();
var G__241137 = " ";
var G__241138 = (function (){var G__241657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241658 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241657,G__241658) : tailrecursion.hoplon.span.call(null,G__241657,G__241658));
})();
var G__241139 = " (";
var G__241140 = (function (){var G__241659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241660 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241659,G__241660) : tailrecursion.hoplon.span.call(null,G__241659,G__241660));
})();
var G__241141 = " ";
var G__241142 = (function (){var G__241661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241662 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241661,G__241662) : tailrecursion.hoplon.span.call(null,G__241661,G__241662));
})();
var G__241143 = " (";
var G__241144 = (function (){var G__241663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241664 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241663,G__241664) : tailrecursion.hoplon.span.call(null,G__241663,G__241664));
})();
var G__241145 = " ";
var G__241146 = (function (){var G__241665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241666 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241665,G__241666) : tailrecursion.hoplon.span.call(null,G__241665,G__241666));
})();
var G__241147 = " (";
var G__241148 = (function (){var G__241667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241668 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241667,G__241668) : tailrecursion.hoplon.span.call(null,G__241667,G__241668));
})();
var G__241149 = " ";
var G__241150 = (function (){var G__241669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241670 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241669,G__241670) : tailrecursion.hoplon.span.call(null,G__241669,G__241670));
})();
var G__241151 = " (";
var G__241152 = (function (){var G__241671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241672 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241671,G__241672) : tailrecursion.hoplon.span.call(null,G__241671,G__241672));
})();
var G__241153 = " ";
var G__241154 = (function (){var G__241673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241674 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241673,G__241674) : tailrecursion.hoplon.span.call(null,G__241673,G__241674));
})();
var G__241155 = " (";
var G__241156 = (function (){var G__241675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241676 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241675,G__241676) : tailrecursion.hoplon.span.call(null,G__241675,G__241676));
})();
var G__241157 = " ";
var G__241158 = (function (){var G__241677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241678 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241677,G__241678) : tailrecursion.hoplon.span.call(null,G__241677,G__241678));
})();
var G__241159 = " (";
var G__241160 = (function (){var G__241679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241680 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241679,G__241680) : tailrecursion.hoplon.span.call(null,G__241679,G__241680));
})();
var G__241161 = (function (){var G__241681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241682 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241681,G__241682) : tailrecursion.hoplon.span.call(null,G__241681,G__241682));
})();
var G__241162 = " ";
var G__241163 = (function (){var G__241683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241684 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241683,G__241684) : tailrecursion.hoplon.span.call(null,G__241683,G__241684));
})();
var G__241164 = ")))))))))\n(";
var G__241165 = (function (){var G__241685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241686 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241685,G__241686) : tailrecursion.hoplon.span.call(null,G__241685,G__241686));
})();
var G__241166 = " ";
var G__241167 = (function (){var G__241687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241688 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241687,G__241688) : tailrecursion.hoplon.span.call(null,G__241687,G__241688));
})();
var G__241168 = " (";
var G__241169 = (function (){var G__241689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241690 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241689,G__241690) : tailrecursion.hoplon.span.call(null,G__241689,G__241690));
})();
var G__241170 = " ";
var G__241171 = (function (){var G__241691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241692 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241691,G__241692) : tailrecursion.hoplon.span.call(null,G__241691,G__241692));
})();
var G__241172 = " (";
var G__241173 = (function (){var G__241693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241694 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241693,G__241694) : tailrecursion.hoplon.span.call(null,G__241693,G__241694));
})();
var G__241174 = " ";
var G__241175 = (function (){var G__241695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241696 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241695,G__241696) : tailrecursion.hoplon.span.call(null,G__241695,G__241696));
})();
var G__241176 = " (";
var G__241177 = (function (){var G__241697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241698 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241697,G__241698) : tailrecursion.hoplon.span.call(null,G__241697,G__241698));
})();
var G__241178 = " ";
var G__241179 = (function (){var G__241699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241700 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241699,G__241700) : tailrecursion.hoplon.span.call(null,G__241699,G__241700));
})();
var G__241180 = " (";
var G__241181 = (function (){var G__241701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241702 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241701,G__241702) : tailrecursion.hoplon.span.call(null,G__241701,G__241702));
})();
var G__241182 = " ";
var G__241183 = (function (){var G__241703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241704 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241703,G__241704) : tailrecursion.hoplon.span.call(null,G__241703,G__241704));
})();
var G__241184 = " (";
var G__241185 = (function (){var G__241705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241706 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241705,G__241706) : tailrecursion.hoplon.span.call(null,G__241705,G__241706));
})();
var G__241186 = " ";
var G__241187 = (function (){var G__241707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241708 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241707,G__241708) : tailrecursion.hoplon.span.call(null,G__241707,G__241708));
})();
var G__241188 = " (";
var G__241189 = (function (){var G__241709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241710 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241709,G__241710) : tailrecursion.hoplon.span.call(null,G__241709,G__241710));
})();
var G__241190 = " ";
var G__241191 = (function (){var G__241711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241712 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241711,G__241712) : tailrecursion.hoplon.span.call(null,G__241711,G__241712));
})();
var G__241192 = " (";
var G__241193 = (function (){var G__241713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241714 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241713,G__241714) : tailrecursion.hoplon.span.call(null,G__241713,G__241714));
})();
var G__241194 = " ";
var G__241195 = (function (){var G__241715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241716 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241715,G__241716) : tailrecursion.hoplon.span.call(null,G__241715,G__241716));
})();
var G__241196 = " (";
var G__241197 = (function (){var G__241717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241718 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241717,G__241718) : tailrecursion.hoplon.span.call(null,G__241717,G__241718));
})();
var G__241198 = " ";
var G__241199 = (function (){var G__241719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241720 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241719,G__241720) : tailrecursion.hoplon.span.call(null,G__241719,G__241720));
})();
var G__241200 = " (";
var G__241201 = (function (){var G__241721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241722 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241721,G__241722) : tailrecursion.hoplon.span.call(null,G__241721,G__241722));
})();
var G__241202 = (function (){var G__241723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241724 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241723,G__241724) : tailrecursion.hoplon.span.call(null,G__241723,G__241724));
})();
var G__241203 = " ";
var G__241204 = (function (){var G__241725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241726 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241725,G__241726) : tailrecursion.hoplon.span.call(null,G__241725,G__241726));
})();
var G__241205 = "))))))))))\n(";
var G__241206 = (function (){var G__241727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241728 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241727,G__241728) : tailrecursion.hoplon.span.call(null,G__241727,G__241728));
})();
var G__241207 = " ";
var G__241208 = (function (){var G__241729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241730 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241729,G__241730) : tailrecursion.hoplon.span.call(null,G__241729,G__241730));
})();
var G__241209 = " (";
var G__241210 = (function (){var G__241731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241732 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241731,G__241732) : tailrecursion.hoplon.span.call(null,G__241731,G__241732));
})();
var G__241211 = " ";
var G__241212 = (function (){var G__241733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241734 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241733,G__241734) : tailrecursion.hoplon.span.call(null,G__241733,G__241734));
})();
var G__241213 = " (";
var G__241214 = (function (){var G__241735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241736 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241735,G__241736) : tailrecursion.hoplon.span.call(null,G__241735,G__241736));
})();
var G__241215 = " ";
var G__241216 = (function (){var G__241737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241738 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241737,G__241738) : tailrecursion.hoplon.span.call(null,G__241737,G__241738));
})();
var G__241217 = " (";
var G__241218 = (function (){var G__241739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241740 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241739,G__241740) : tailrecursion.hoplon.span.call(null,G__241739,G__241740));
})();
var G__241219 = " ";
var G__241220 = (function (){var G__241741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241742 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241741,G__241742) : tailrecursion.hoplon.span.call(null,G__241741,G__241742));
})();
var G__241221 = " (";
var G__241222 = (function (){var G__241743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241744 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241743,G__241744) : tailrecursion.hoplon.span.call(null,G__241743,G__241744));
})();
var G__241223 = " ";
var G__241224 = (function (){var G__241745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241746 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241745,G__241746) : tailrecursion.hoplon.span.call(null,G__241745,G__241746));
})();
var G__241225 = " (";
var G__241226 = (function (){var G__241747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241748 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241747,G__241748) : tailrecursion.hoplon.span.call(null,G__241747,G__241748));
})();
var G__241227 = " ";
var G__241228 = (function (){var G__241749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241750 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241749,G__241750) : tailrecursion.hoplon.span.call(null,G__241749,G__241750));
})();
var G__241229 = " (";
var G__241230 = (function (){var G__241751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241752 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241751,G__241752) : tailrecursion.hoplon.span.call(null,G__241751,G__241752));
})();
var G__241231 = " ";
var G__241232 = (function (){var G__241753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241754 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241753,G__241754) : tailrecursion.hoplon.span.call(null,G__241753,G__241754));
})();
var G__241233 = " (";
var G__241234 = (function (){var G__241755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241756 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241755,G__241756) : tailrecursion.hoplon.span.call(null,G__241755,G__241756));
})();
var G__241235 = " ";
var G__241236 = (function (){var G__241757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241758 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241757,G__241758) : tailrecursion.hoplon.span.call(null,G__241757,G__241758));
})();
var G__241237 = " (";
var G__241238 = (function (){var G__241759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241760 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241759,G__241760) : tailrecursion.hoplon.span.call(null,G__241759,G__241760));
})();
var G__241239 = " ";
var G__241240 = (function (){var G__241761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241762 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241761,G__241762) : tailrecursion.hoplon.span.call(null,G__241761,G__241762));
})();
var G__241241 = " (";
var G__241242 = (function (){var G__241763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241764 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241763,G__241764) : tailrecursion.hoplon.span.call(null,G__241763,G__241764));
})();
var G__241243 = " ";
var G__241244 = (function (){var G__241765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241766 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241765,G__241766) : tailrecursion.hoplon.span.call(null,G__241765,G__241766));
})();
var G__241245 = " (";
var G__241246 = (function (){var G__241767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241768 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241767,G__241768) : tailrecursion.hoplon.span.call(null,G__241767,G__241768));
})();
var G__241247 = (function (){var G__241769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241770 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241769,G__241770) : tailrecursion.hoplon.span.call(null,G__241769,G__241770));
})();
var G__241248 = " ";
var G__241249 = (function (){var G__241771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241772 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241771,G__241772) : tailrecursion.hoplon.span.call(null,G__241771,G__241772));
})();
var G__241250 = ")))))))))))\n(";
var G__241251 = (function (){var G__241773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241774 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241773,G__241774) : tailrecursion.hoplon.span.call(null,G__241773,G__241774));
})();
var G__241252 = " ";
var G__241253 = (function (){var G__241775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241776 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241775,G__241776) : tailrecursion.hoplon.span.call(null,G__241775,G__241776));
})();
var G__241254 = " (";
var G__241255 = (function (){var G__241777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241778 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241777,G__241778) : tailrecursion.hoplon.span.call(null,G__241777,G__241778));
})();
var G__241256 = " ";
var G__241257 = (function (){var G__241779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241780 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241779,G__241780) : tailrecursion.hoplon.span.call(null,G__241779,G__241780));
})();
var G__241258 = " (";
var G__241259 = (function (){var G__241781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241782 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241781,G__241782) : tailrecursion.hoplon.span.call(null,G__241781,G__241782));
})();
var G__241260 = " ";
var G__241261 = (function (){var G__241783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241784 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241783,G__241784) : tailrecursion.hoplon.span.call(null,G__241783,G__241784));
})();
var G__241262 = " (";
var G__241263 = (function (){var G__241785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241786 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241785,G__241786) : tailrecursion.hoplon.span.call(null,G__241785,G__241786));
})();
var G__241264 = " ";
var G__241265 = (function (){var G__241787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241788 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241787,G__241788) : tailrecursion.hoplon.span.call(null,G__241787,G__241788));
})();
var G__241266 = " (";
var G__241267 = (function (){var G__241789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241790 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241789,G__241790) : tailrecursion.hoplon.span.call(null,G__241789,G__241790));
})();
var G__241268 = " ";
var G__241269 = (function (){var G__241791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241792 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241791,G__241792) : tailrecursion.hoplon.span.call(null,G__241791,G__241792));
})();
var G__241270 = " (";
var G__241271 = (function (){var G__241793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241794 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241793,G__241794) : tailrecursion.hoplon.span.call(null,G__241793,G__241794));
})();
var G__241272 = " ";
var G__241273 = (function (){var G__241795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241796 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241795,G__241796) : tailrecursion.hoplon.span.call(null,G__241795,G__241796));
})();
var G__241274 = " (";
var G__241275 = (function (){var G__241797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241798 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241797,G__241798) : tailrecursion.hoplon.span.call(null,G__241797,G__241798));
})();
var G__241276 = " ";
var G__241277 = (function (){var G__241799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241800 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241799,G__241800) : tailrecursion.hoplon.span.call(null,G__241799,G__241800));
})();
var G__241278 = " (";
var G__241279 = (function (){var G__241801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241802 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241801,G__241802) : tailrecursion.hoplon.span.call(null,G__241801,G__241802));
})();
var G__241280 = " ";
var G__241281 = (function (){var G__241803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241804 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241803,G__241804) : tailrecursion.hoplon.span.call(null,G__241803,G__241804));
})();
var G__241282 = " (";
var G__241283 = (function (){var G__241805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241806 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241805,G__241806) : tailrecursion.hoplon.span.call(null,G__241805,G__241806));
})();
var G__241284 = " ";
var G__241285 = (function (){var G__241807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241808 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241807,G__241808) : tailrecursion.hoplon.span.call(null,G__241807,G__241808));
})();
var G__241286 = " (";
var G__241287 = (function (){var G__241809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241810 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241809,G__241810) : tailrecursion.hoplon.span.call(null,G__241809,G__241810));
})();
var G__241288 = " ";
var G__241289 = (function (){var G__241811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241812 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241811,G__241812) : tailrecursion.hoplon.span.call(null,G__241811,G__241812));
})();
var G__241290 = " ";
var G__241291 = (function (){var G__241813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241814 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241813,G__241814) : tailrecursion.hoplon.span.call(null,G__241813,G__241814));
})();
var G__241292 = "))))))))))\n(";
var G__241293 = (function (){var G__241815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241816 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241815,G__241816) : tailrecursion.hoplon.span.call(null,G__241815,G__241816));
})();
var G__241294 = " ";
var G__241295 = (function (){var G__241817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241818 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241817,G__241818) : tailrecursion.hoplon.span.call(null,G__241817,G__241818));
})();
var G__241296 = " (";
var G__241297 = (function (){var G__241819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241820 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241819,G__241820) : tailrecursion.hoplon.span.call(null,G__241819,G__241820));
})();
var G__241298 = " ";
var G__241299 = (function (){var G__241821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241822 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241821,G__241822) : tailrecursion.hoplon.span.call(null,G__241821,G__241822));
})();
var G__241300 = " (";
var G__241301 = (function (){var G__241823 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241824 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241823,G__241824) : tailrecursion.hoplon.span.call(null,G__241823,G__241824));
})();
var G__241302 = " ";
var G__241303 = (function (){var G__241825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241826 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241825,G__241826) : tailrecursion.hoplon.span.call(null,G__241825,G__241826));
})();
var G__241304 = " (";
var G__241305 = (function (){var G__241827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241828 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241827,G__241828) : tailrecursion.hoplon.span.call(null,G__241827,G__241828));
})();
var G__241306 = " ";
var G__241307 = (function (){var G__241829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241830 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241829,G__241830) : tailrecursion.hoplon.span.call(null,G__241829,G__241830));
})();
var G__241308 = " (";
var G__241309 = (function (){var G__241831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241832 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241831,G__241832) : tailrecursion.hoplon.span.call(null,G__241831,G__241832));
})();
var G__241310 = " ";
var G__241311 = (function (){var G__241833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241834 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241833,G__241834) : tailrecursion.hoplon.span.call(null,G__241833,G__241834));
})();
var G__241312 = " (";
var G__241313 = (function (){var G__241835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241836 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241835,G__241836) : tailrecursion.hoplon.span.call(null,G__241835,G__241836));
})();
var G__241314 = " ";
var G__241315 = (function (){var G__241837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241838 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241837,G__241838) : tailrecursion.hoplon.span.call(null,G__241837,G__241838));
})();
var G__241316 = " (";
var G__241317 = (function (){var G__241839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241840 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241839,G__241840) : tailrecursion.hoplon.span.call(null,G__241839,G__241840));
})();
var G__241318 = " ";
var G__241319 = (function (){var G__241841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241842 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241841,G__241842) : tailrecursion.hoplon.span.call(null,G__241841,G__241842));
})();
var G__241320 = " (";
var G__241321 = (function (){var G__241843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241844 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241843,G__241844) : tailrecursion.hoplon.span.call(null,G__241843,G__241844));
})();
var G__241322 = " ";
var G__241323 = (function (){var G__241845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241846 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241845,G__241846) : tailrecursion.hoplon.span.call(null,G__241845,G__241846));
})();
var G__241324 = " (";
var G__241325 = (function (){var G__241847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241848 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241847,G__241848) : tailrecursion.hoplon.span.call(null,G__241847,G__241848));
})();
var G__241326 = " ";
var G__241327 = (function (){var G__241849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241850 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241849,G__241850) : tailrecursion.hoplon.span.call(null,G__241849,G__241850));
})();
var G__241328 = " ";
var G__241329 = (function (){var G__241851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241852 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241851,G__241852) : tailrecursion.hoplon.span.call(null,G__241851,G__241852));
})();
var G__241330 = ")))))))))\n(";
var G__241331 = (function (){var G__241853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241854 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241853,G__241854) : tailrecursion.hoplon.span.call(null,G__241853,G__241854));
})();
var G__241332 = " ";
var G__241333 = (function (){var G__241855 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241856 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241855,G__241856) : tailrecursion.hoplon.span.call(null,G__241855,G__241856));
})();
var G__241334 = " (";
var G__241335 = (function (){var G__241857 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241858 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241857,G__241858) : tailrecursion.hoplon.span.call(null,G__241857,G__241858));
})();
var G__241336 = " ";
var G__241337 = (function (){var G__241859 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241860 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241859,G__241860) : tailrecursion.hoplon.span.call(null,G__241859,G__241860));
})();
var G__241338 = " (";
var G__241339 = (function (){var G__241861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241862 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241861,G__241862) : tailrecursion.hoplon.span.call(null,G__241861,G__241862));
})();
var G__241340 = " ";
var G__241341 = (function (){var G__241863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241864 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241863,G__241864) : tailrecursion.hoplon.span.call(null,G__241863,G__241864));
})();
var G__241342 = " (";
var G__241343 = (function (){var G__241865 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241866 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241865,G__241866) : tailrecursion.hoplon.span.call(null,G__241865,G__241866));
})();
var G__241344 = " ";
var G__241345 = (function (){var G__241867 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241868 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241867,G__241868) : tailrecursion.hoplon.span.call(null,G__241867,G__241868));
})();
var G__241346 = " (";
var G__241347 = (function (){var G__241869 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241870 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241869,G__241870) : tailrecursion.hoplon.span.call(null,G__241869,G__241870));
})();
var G__241348 = " ";
var G__241349 = (function (){var G__241871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241872 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241871,G__241872) : tailrecursion.hoplon.span.call(null,G__241871,G__241872));
})();
var G__241350 = " (";
var G__241351 = (function (){var G__241873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241874 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241873,G__241874) : tailrecursion.hoplon.span.call(null,G__241873,G__241874));
})();
var G__241352 = " ";
var G__241353 = (function (){var G__241875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241876 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241875,G__241876) : tailrecursion.hoplon.span.call(null,G__241875,G__241876));
})();
var G__241354 = " (";
var G__241355 = (function (){var G__241877 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241878 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241877,G__241878) : tailrecursion.hoplon.span.call(null,G__241877,G__241878));
})();
var G__241356 = " ";
var G__241357 = (function (){var G__241879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241880 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241879,G__241880) : tailrecursion.hoplon.span.call(null,G__241879,G__241880));
})();
var G__241358 = " (";
var G__241359 = (function (){var G__241881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241882 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241881,G__241882) : tailrecursion.hoplon.span.call(null,G__241881,G__241882));
})();
var G__241360 = " ";
var G__241361 = (function (){var G__241883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241884 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241883,G__241884) : tailrecursion.hoplon.span.call(null,G__241883,G__241884));
})();
var G__241362 = " (";
var G__241363 = (function (){var G__241885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241886 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241885,G__241886) : tailrecursion.hoplon.span.call(null,G__241885,G__241886));
})();
var G__241364 = (function (){var G__241887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241888 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241887,G__241888) : tailrecursion.hoplon.span.call(null,G__241887,G__241888));
})();
var G__241365 = " ";
var G__241366 = (function (){var G__241889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241890 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241889,G__241890) : tailrecursion.hoplon.span.call(null,G__241889,G__241890));
})();
var G__241367 = ")))))))))\n(";
var G__241368 = (function (){var G__241891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241892 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241891,G__241892) : tailrecursion.hoplon.span.call(null,G__241891,G__241892));
})();
var G__241369 = " ";
var G__241370 = (function (){var G__241893 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241894 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241893,G__241894) : tailrecursion.hoplon.span.call(null,G__241893,G__241894));
})();
var G__241371 = " (";
var G__241372 = (function (){var G__241895 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241896 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241895,G__241896) : tailrecursion.hoplon.span.call(null,G__241895,G__241896));
})();
var G__241373 = " ";
var G__241374 = (function (){var G__241897 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241898 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241897,G__241898) : tailrecursion.hoplon.span.call(null,G__241897,G__241898));
})();
var G__241375 = " (";
var G__241376 = (function (){var G__241899 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241900 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241899,G__241900) : tailrecursion.hoplon.span.call(null,G__241899,G__241900));
})();
var G__241377 = " ";
var G__241378 = (function (){var G__241901 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241902 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241901,G__241902) : tailrecursion.hoplon.span.call(null,G__241901,G__241902));
})();
var G__241379 = " (";
var G__241380 = (function (){var G__241903 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241904 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241903,G__241904) : tailrecursion.hoplon.span.call(null,G__241903,G__241904));
})();
var G__241381 = " ";
var G__241382 = (function (){var G__241905 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241906 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241905,G__241906) : tailrecursion.hoplon.span.call(null,G__241905,G__241906));
})();
var G__241383 = " (";
var G__241384 = (function (){var G__241907 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241908 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241907,G__241908) : tailrecursion.hoplon.span.call(null,G__241907,G__241908));
})();
var G__241385 = " ";
var G__241386 = (function (){var G__241909 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241910 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241909,G__241910) : tailrecursion.hoplon.span.call(null,G__241909,G__241910));
})();
var G__241387 = " (";
var G__241388 = (function (){var G__241911 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241912 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241911,G__241912) : tailrecursion.hoplon.span.call(null,G__241911,G__241912));
})();
var G__241389 = " ";
var G__241390 = (function (){var G__241913 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241914 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241913,G__241914) : tailrecursion.hoplon.span.call(null,G__241913,G__241914));
})();
var G__241391 = " (";
var G__241392 = (function (){var G__241915 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241916 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241915,G__241916) : tailrecursion.hoplon.span.call(null,G__241915,G__241916));
})();
var G__241393 = " ";
var G__241394 = (function (){var G__241917 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241918 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241917,G__241918) : tailrecursion.hoplon.span.call(null,G__241917,G__241918));
})();
var G__241395 = " (";
var G__241396 = (function (){var G__241919 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241920 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241919,G__241920) : tailrecursion.hoplon.span.call(null,G__241919,G__241920));
})();
var G__241397 = " ";
var G__241398 = (function (){var G__241921 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241922 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241921,G__241922) : tailrecursion.hoplon.span.call(null,G__241921,G__241922));
})();
var G__241399 = " ";
var G__241400 = (function (){var G__241923 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241924 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241923,G__241924) : tailrecursion.hoplon.span.call(null,G__241923,G__241924));
})();
var G__241401 = "))))))))\n(";
var G__241402 = (function (){var G__241925 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241926 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241925,G__241926) : tailrecursion.hoplon.span.call(null,G__241925,G__241926));
})();
var G__241403 = " ";
var G__241404 = (function (){var G__241927 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241928 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241927,G__241928) : tailrecursion.hoplon.span.call(null,G__241927,G__241928));
})();
var G__241405 = " (";
var G__241406 = (function (){var G__241929 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241930 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241929,G__241930) : tailrecursion.hoplon.span.call(null,G__241929,G__241930));
})();
var G__241407 = " ";
var G__241408 = (function (){var G__241931 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241932 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241931,G__241932) : tailrecursion.hoplon.span.call(null,G__241931,G__241932));
})();
var G__241409 = " (";
var G__241410 = (function (){var G__241933 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241934 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241933,G__241934) : tailrecursion.hoplon.span.call(null,G__241933,G__241934));
})();
var G__241411 = " ";
var G__241412 = (function (){var G__241935 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241936 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241935,G__241936) : tailrecursion.hoplon.span.call(null,G__241935,G__241936));
})();
var G__241413 = " (";
var G__241414 = (function (){var G__241937 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241938 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241937,G__241938) : tailrecursion.hoplon.span.call(null,G__241937,G__241938));
})();
var G__241415 = " ";
var G__241416 = (function (){var G__241939 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241940 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241939,G__241940) : tailrecursion.hoplon.span.call(null,G__241939,G__241940));
})();
var G__241417 = " (";
var G__241418 = (function (){var G__241941 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241942 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241941,G__241942) : tailrecursion.hoplon.span.call(null,G__241941,G__241942));
})();
var G__241419 = " ";
var G__241420 = (function (){var G__241943 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241944 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241943,G__241944) : tailrecursion.hoplon.span.call(null,G__241943,G__241944));
})();
var G__241421 = " (";
var G__241422 = (function (){var G__241945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241946 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241945,G__241946) : tailrecursion.hoplon.span.call(null,G__241945,G__241946));
})();
var G__241423 = " ";
var G__241424 = (function (){var G__241947 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241948 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241947,G__241948) : tailrecursion.hoplon.span.call(null,G__241947,G__241948));
})();
var G__241425 = " (";
var G__241426 = (function (){var G__241949 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241950 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241949,G__241950) : tailrecursion.hoplon.span.call(null,G__241949,G__241950));
})();
var G__241427 = " ";
var G__241428 = (function (){var G__241951 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241952 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241951,G__241952) : tailrecursion.hoplon.span.call(null,G__241951,G__241952));
})();
var G__241429 = " (";
var G__241430 = (function (){var G__241953 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__241954 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241953,G__241954) : tailrecursion.hoplon.span.call(null,G__241953,G__241954));
})();
var G__241431 = (function (){var G__241955 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241956 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241955,G__241956) : tailrecursion.hoplon.span.call(null,G__241955,G__241956));
})();
var G__241432 = " ";
var G__241433 = (function (){var G__241957 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241958 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241957,G__241958) : tailrecursion.hoplon.span.call(null,G__241957,G__241958));
})();
var G__241434 = "))))))))\n(";
var G__241435 = (function (){var G__241959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241960 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241959,G__241960) : tailrecursion.hoplon.span.call(null,G__241959,G__241960));
})();
var G__241436 = " ";
var G__241437 = (function (){var G__241961 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241962 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241961,G__241962) : tailrecursion.hoplon.span.call(null,G__241961,G__241962));
})();
var G__241438 = " (";
var G__241439 = (function (){var G__241963 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241964 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241963,G__241964) : tailrecursion.hoplon.span.call(null,G__241963,G__241964));
})();
var G__241440 = " ";
var G__241441 = (function (){var G__241965 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241966 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241965,G__241966) : tailrecursion.hoplon.span.call(null,G__241965,G__241966));
})();
var G__241442 = " (";
var G__241443 = (function (){var G__241967 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241968 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241967,G__241968) : tailrecursion.hoplon.span.call(null,G__241967,G__241968));
})();
var G__241444 = " ";
var G__241445 = (function (){var G__241969 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241970 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241969,G__241970) : tailrecursion.hoplon.span.call(null,G__241969,G__241970));
})();
var G__241446 = " (";
var G__241447 = (function (){var G__241971 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241972 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241971,G__241972) : tailrecursion.hoplon.span.call(null,G__241971,G__241972));
})();
var G__241448 = " ";
var G__241449 = (function (){var G__241973 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241974 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241973,G__241974) : tailrecursion.hoplon.span.call(null,G__241973,G__241974));
})();
var G__241450 = " (";
var G__241451 = (function (){var G__241975 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241976 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241975,G__241976) : tailrecursion.hoplon.span.call(null,G__241975,G__241976));
})();
var G__241452 = " ";
var G__241453 = (function (){var G__241977 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241978 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241977,G__241978) : tailrecursion.hoplon.span.call(null,G__241977,G__241978));
})();
var G__241454 = " (";
var G__241455 = (function (){var G__241979 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241980 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241979,G__241980) : tailrecursion.hoplon.span.call(null,G__241979,G__241980));
})();
var G__241456 = " ";
var G__241457 = (function (){var G__241981 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241982 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241981,G__241982) : tailrecursion.hoplon.span.call(null,G__241981,G__241982));
})();
var G__241458 = " (";
var G__241459 = (function (){var G__241983 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__241984 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241983,G__241984) : tailrecursion.hoplon.span.call(null,G__241983,G__241984));
})();
var G__241460 = " ";
var G__241461 = (function (){var G__241985 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241986 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241985,G__241986) : tailrecursion.hoplon.span.call(null,G__241985,G__241986));
})();
var G__241462 = " ";
var G__241463 = (function (){var G__241987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241988 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241987,G__241988) : tailrecursion.hoplon.span.call(null,G__241987,G__241988));
})();
var G__241464 = ")))))))\n";
var G__241465 = (function (){var G__241989 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__241990 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241989,G__241990) : tailrecursion.hoplon.span.call(null,G__241989,G__241990));
})();
var G__241466 = "\n";
var G__241467 = (function (){var G__241991 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__241992 = "1024";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__241991,G__241992) : tailrecursion.hoplon.span.call(null,G__241991,G__241992));
})();
var G__241468 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$514(G__240955,G__240956,G__240957,G__240958,G__240959,G__240960,G__240961,G__240962,G__240963,G__240964,G__240965,G__240966,G__240967,G__240968,G__240969,G__240970,G__240971,G__240972,G__240973,G__240974,G__240975,G__240976,G__240977,G__240978,G__240979,G__240980,G__240981,G__240982,G__240983,G__240984,G__240985,G__240986,G__240987,G__240988,G__240989,G__240990,G__240991,G__240992,G__240993,G__240994,G__240995,G__240996,G__240997,G__240998,G__240999,G__241000,G__241001,G__241002,G__241003,G__241004,G__241005,G__241006,G__241007,G__241008,G__241009,G__241010,G__241011,G__241012,G__241013,G__241014,G__241015,G__241016,G__241017,G__241018,G__241019,G__241020,G__241021,G__241022,G__241023,G__241024,G__241025,G__241026,G__241027,G__241028,G__241029,G__241030,G__241031,G__241032,G__241033,G__241034,G__241035,G__241036,G__241037,G__241038,G__241039,G__241040,G__241041,G__241042,G__241043,G__241044,G__241045,G__241046,G__241047,G__241048,G__241049,G__241050,G__241051,G__241052,G__241053,G__241054,G__241055,G__241056,G__241057,G__241058,G__241059,G__241060,G__241061,G__241062,G__241063,G__241064,G__241065,G__241066,G__241067,G__241068,G__241069,G__241070,G__241071,G__241072,G__241073,G__241074,G__241075,G__241076,G__241077,G__241078,G__241079,G__241080,G__241081,G__241082,G__241083,G__241084,G__241085,G__241086,G__241087,G__241088,G__241089,G__241090,G__241091,G__241092,G__241093,G__241094,G__241095,G__241096,G__241097,G__241098,G__241099,G__241100,G__241101,G__241102,G__241103,G__241104,G__241105,G__241106,G__241107,G__241108,G__241109,G__241110,G__241111,G__241112,G__241113,G__241114,G__241115,G__241116,G__241117,G__241118,G__241119,G__241120,G__241121,G__241122,G__241123,G__241124,G__241125,G__241126,G__241127,G__241128,G__241129,G__241130,G__241131,G__241132,G__241133,G__241134,G__241135,G__241136,G__241137,G__241138,G__241139,G__241140,G__241141,G__241142,G__241143,G__241144,G__241145,G__241146,G__241147,G__241148,G__241149,G__241150,G__241151,G__241152,G__241153,G__241154,G__241155,G__241156,G__241157,G__241158,G__241159,G__241160,G__241161,G__241162,G__241163,G__241164,G__241165,G__241166,G__241167,G__241168,G__241169,G__241170,G__241171,G__241172,G__241173,G__241174,G__241175,G__241176,G__241177,G__241178,G__241179,G__241180,G__241181,G__241182,G__241183,G__241184,G__241185,G__241186,G__241187,G__241188,G__241189,G__241190,G__241191,G__241192,G__241193,G__241194,G__241195,G__241196,G__241197,G__241198,G__241199,G__241200,G__241201,G__241202,G__241203,G__241204,G__241205,G__241206,G__241207,G__241208,G__241209,G__241210,G__241211,G__241212,G__241213,G__241214,G__241215,G__241216,G__241217,G__241218,G__241219,G__241220,G__241221,G__241222,G__241223,G__241224,G__241225,G__241226,G__241227,G__241228,G__241229,G__241230,G__241231,G__241232,G__241233,G__241234,G__241235,G__241236,G__241237,G__241238,G__241239,G__241240,G__241241,G__241242,G__241243,G__241244,G__241245,G__241246,G__241247,G__241248,G__241249,G__241250,G__241251,G__241252,G__241253,G__241254,G__241255,G__241256,G__241257,G__241258,G__241259,G__241260,G__241261,G__241262,G__241263,G__241264,G__241265,G__241266,G__241267,G__241268,G__241269,G__241270,G__241271,G__241272,G__241273,G__241274,G__241275,G__241276,G__241277,G__241278,G__241279,G__241280,G__241281,G__241282,G__241283,G__241284,G__241285,G__241286,G__241287,G__241288,G__241289,G__241290,G__241291,G__241292,G__241293,G__241294,G__241295,G__241296,G__241297,G__241298,G__241299,G__241300,G__241301,G__241302,G__241303,G__241304,G__241305,G__241306,G__241307,G__241308,G__241309,G__241310,G__241311,G__241312,G__241313,G__241314,G__241315,G__241316,G__241317,G__241318,G__241319,G__241320,G__241321,G__241322,G__241323,G__241324,G__241325,G__241326,G__241327,G__241328,G__241329,G__241330,G__241331,G__241332,G__241333,G__241334,G__241335,G__241336,G__241337,G__241338,G__241339,G__241340,G__241341,G__241342,G__241343,G__241344,G__241345,G__241346,G__241347,G__241348,G__241349,G__241350,G__241351,G__241352,G__241353,G__241354,G__241355,G__241356,G__241357,G__241358,G__241359,G__241360,G__241361,G__241362,G__241363,G__241364,G__241365,G__241366,G__241367,G__241368,G__241369,G__241370,G__241371,G__241372,G__241373,G__241374,G__241375,G__241376,G__241377,G__241378,G__241379,G__241380,G__241381,G__241382,G__241383,G__241384,G__241385,G__241386,G__241387,G__241388,G__241389,G__241390,G__241391,G__241392,G__241393,G__241394,G__241395,G__241396,G__241397,G__241398,G__241399,G__241400,G__241401,G__241402,G__241403,G__241404,G__241405,G__241406,G__241407,G__241408,G__241409,G__241410,G__241411,G__241412,G__241413,G__241414,G__241415,G__241416,G__241417,G__241418,G__241419,G__241420,G__241421,G__241422,G__241423,G__241424,G__241425,G__241426,G__241427,G__241428,G__241429,G__241430,G__241431,G__241432,G__241433,G__241434,G__241435,G__241436,G__241437,G__241438,G__241439,G__241440,G__241441,G__241442,G__241443,G__241444,G__241445,G__241446,G__241447,G__241448,G__241449,G__241450,G__241451,G__241452,G__241453,G__241454,G__241455,G__241456,G__241457,G__241458,G__241459,G__241460,G__241461,G__241462,G__241463,G__241464,G__241465,G__241466,G__241467,G__241468) : tailrecursion.hoplon.pre.call(null,G__240955,G__240956,G__240957,G__240958,G__240959,G__240960,G__240961,G__240962,G__240963,G__240964,G__240965,G__240966,G__240967,G__240968,G__240969,G__240970,G__240971,G__240972,G__240973,G__240974,G__240975,G__240976,G__240977,G__240978,G__240979,G__240980,G__240981,G__240982,G__240983,G__240984,G__240985,G__240986,G__240987,G__240988,G__240989,G__240990,G__240991,G__240992,G__240993,G__240994,G__240995,G__240996,G__240997,G__240998,G__240999,G__241000,G__241001,G__241002,G__241003,G__241004,G__241005,G__241006,G__241007,G__241008,G__241009,G__241010,G__241011,G__241012,G__241013,G__241014,G__241015,G__241016,G__241017,G__241018,G__241019,G__241020,G__241021,G__241022,G__241023,G__241024,G__241025,G__241026,G__241027,G__241028,G__241029,G__241030,G__241031,G__241032,G__241033,G__241034,G__241035,G__241036,G__241037,G__241038,G__241039,G__241040,G__241041,G__241042,G__241043,G__241044,G__241045,G__241046,G__241047,G__241048,G__241049,G__241050,G__241051,G__241052,G__241053,G__241054,G__241055,G__241056,G__241057,G__241058,G__241059,G__241060,G__241061,G__241062,G__241063,G__241064,G__241065,G__241066,G__241067,G__241068,G__241069,G__241070,G__241071,G__241072,G__241073,G__241074,G__241075,G__241076,G__241077,G__241078,G__241079,G__241080,G__241081,G__241082,G__241083,G__241084,G__241085,G__241086,G__241087,G__241088,G__241089,G__241090,G__241091,G__241092,G__241093,G__241094,G__241095,G__241096,G__241097,G__241098,G__241099,G__241100,G__241101,G__241102,G__241103,G__241104,G__241105,G__241106,G__241107,G__241108,G__241109,G__241110,G__241111,G__241112,G__241113,G__241114,G__241115,G__241116,G__241117,G__241118,G__241119,G__241120,G__241121,G__241122,G__241123,G__241124,G__241125,G__241126,G__241127,G__241128,G__241129,G__241130,G__241131,G__241132,G__241133,G__241134,G__241135,G__241136,G__241137,G__241138,G__241139,G__241140,G__241141,G__241142,G__241143,G__241144,G__241145,G__241146,G__241147,G__241148,G__241149,G__241150,G__241151,G__241152,G__241153,G__241154,G__241155,G__241156,G__241157,G__241158,G__241159,G__241160,G__241161,G__241162,G__241163,G__241164,G__241165,G__241166,G__241167,G__241168,G__241169,G__241170,G__241171,G__241172,G__241173,G__241174,G__241175,G__241176,G__241177,G__241178,G__241179,G__241180,G__241181,G__241182,G__241183,G__241184,G__241185,G__241186,G__241187,G__241188,G__241189,G__241190,G__241191,G__241192,G__241193,G__241194,G__241195,G__241196,G__241197,G__241198,G__241199,G__241200,G__241201,G__241202,G__241203,G__241204,G__241205,G__241206,G__241207,G__241208,G__241209,G__241210,G__241211,G__241212,G__241213,G__241214,G__241215,G__241216,G__241217,G__241218,G__241219,G__241220,G__241221,G__241222,G__241223,G__241224,G__241225,G__241226,G__241227,G__241228,G__241229,G__241230,G__241231,G__241232,G__241233,G__241234,G__241235,G__241236,G__241237,G__241238,G__241239,G__241240,G__241241,G__241242,G__241243,G__241244,G__241245,G__241246,G__241247,G__241248,G__241249,G__241250,G__241251,G__241252,G__241253,G__241254,G__241255,G__241256,G__241257,G__241258,G__241259,G__241260,G__241261,G__241262,G__241263,G__241264,G__241265,G__241266,G__241267,G__241268,G__241269,G__241270,G__241271,G__241272,G__241273,G__241274,G__241275,G__241276,G__241277,G__241278,G__241279,G__241280,G__241281,G__241282,G__241283,G__241284,G__241285,G__241286,G__241287,G__241288,G__241289,G__241290,G__241291,G__241292,G__241293,G__241294,G__241295,G__241296,G__241297,G__241298,G__241299,G__241300,G__241301,G__241302,G__241303,G__241304,G__241305,G__241306,G__241307,G__241308,G__241309,G__241310,G__241311,G__241312,G__241313,G__241314,G__241315,G__241316,G__241317,G__241318,G__241319,G__241320,G__241321,G__241322,G__241323,G__241324,G__241325,G__241326,G__241327,G__241328,G__241329,G__241330,G__241331,G__241332,G__241333,G__241334,G__241335,G__241336,G__241337,G__241338,G__241339,G__241340,G__241341,G__241342,G__241343,G__241344,G__241345,G__241346,G__241347,G__241348,G__241349,G__241350,G__241351,G__241352,G__241353,G__241354,G__241355,G__241356,G__241357,G__241358,G__241359,G__241360,G__241361,G__241362,G__241363,G__241364,G__241365,G__241366,G__241367,G__241368,G__241369,G__241370,G__241371,G__241372,G__241373,G__241374,G__241375,G__241376,G__241377,G__241378,G__241379,G__241380,G__241381,G__241382,G__241383,G__241384,G__241385,G__241386,G__241387,G__241388,G__241389,G__241390,G__241391,G__241392,G__241393,G__241394,G__241395,G__241396,G__241397,G__241398,G__241399,G__241400,G__241401,G__241402,G__241403,G__241404,G__241405,G__241406,G__241407,G__241408,G__241409,G__241410,G__241411,G__241412,G__241413,G__241414,G__241415,G__241416,G__241417,G__241418,G__241419,G__241420,G__241421,G__241422,G__241423,G__241424,G__241425,G__241426,G__241427,G__241428,G__241429,G__241430,G__241431,G__241432,G__241433,G__241434,G__241435,G__241436,G__241437,G__241438,G__241439,G__241440,G__241441,G__241442,G__241443,G__241444,G__241445,G__241446,G__241447,G__241448,G__241449,G__241450,G__241451,G__241452,G__241453,G__241454,G__241455,G__241456,G__241457,G__241458,G__241459,G__241460,G__241461,G__241462,G__241463,G__241464,G__241465,G__241466,G__241467,G__241468));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__240953,G__240954) : tailrecursion.hoplon.div.call(null,G__240953,G__240954));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__240952) : tailrecursion.hoplon.div.call(null,G__240952));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_239911;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_239910;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_239909;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_239908;
}})()], 0)),"",(function (){var _STAR_references_STAR_241993 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_241994 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_241995 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_241996 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__242013 = (function (){var G__242014 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__242015 = (function (){var G__242016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__242017 = "(";
var G__242018 = (function (){var G__242024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__242025 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__242024,G__242025) : tailrecursion.hoplon.span.call(null,G__242024,G__242025));
})();
var G__242019 = " ";
var G__242020 = (function (){var G__242026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__242027 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__242026,G__242027) : tailrecursion.hoplon.span.call(null,G__242026,G__242027));
})();
var G__242021 = " ";
var G__242022 = (function (){var G__242028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__242029 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__242028,G__242029) : tailrecursion.hoplon.span.call(null,G__242028,G__242029));
})();
var G__242023 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__242016,G__242017,G__242018,G__242019,G__242020,G__242021,G__242022,G__242023) : tailrecursion.hoplon.pre.call(null,G__242016,G__242017,G__242018,G__242019,G__242020,G__242021,G__242022,G__242023));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__242014,G__242015) : tailrecursion.hoplon.div.call(null,G__242014,G__242015));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__242013) : tailrecursion.hoplon.div.call(null,G__242013));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_241996;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_241995;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_241994;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_241993;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_242030 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_242031 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_242032 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_242033 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__242686 = (function (){var G__242687 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__242688 = (function (){var G__242689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__242690 = "(";
var G__242691 = (function (){var G__243011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243012 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243011,G__243012) : tailrecursion.hoplon.span.call(null,G__243011,G__243012));
})();
var G__242692 = " ";
var G__242693 = (function (){var G__243013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243014 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243013,G__243014) : tailrecursion.hoplon.span.call(null,G__243013,G__243014));
})();
var G__242694 = " ";
var G__242695 = (function (){var G__243015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243016 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243015,G__243016) : tailrecursion.hoplon.span.call(null,G__243015,G__243016));
})();
var G__242696 = ")\n(";
var G__242697 = (function (){var G__243017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243018 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243017,G__243018) : tailrecursion.hoplon.span.call(null,G__243017,G__243018));
})();
var G__242698 = " (";
var G__242699 = (function (){var G__243019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__243020 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243019,G__243020) : tailrecursion.hoplon.span.call(null,G__243019,G__243020));
})();
var G__242700 = (function (){var G__243021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243022 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243021,G__243022) : tailrecursion.hoplon.span.call(null,G__243021,G__243022));
})();
var G__242701 = " ";
var G__242702 = (function (){var G__243023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243024 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243023,G__243024) : tailrecursion.hoplon.span.call(null,G__243023,G__243024));
})();
var G__242703 = ") (";
var G__242704 = (function (){var G__243025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243026 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243025,G__243026) : tailrecursion.hoplon.span.call(null,G__243025,G__243026));
})();
var G__242705 = " ";
var G__242706 = (function (){var G__243027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243028 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243027,G__243028) : tailrecursion.hoplon.span.call(null,G__243027,G__243028));
})();
var G__242707 = " (";
var G__242708 = (function (){var G__243029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__243030 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243029,G__243030) : tailrecursion.hoplon.span.call(null,G__243029,G__243030));
})();
var G__242709 = (function (){var G__243031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243032 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243031,G__243032) : tailrecursion.hoplon.span.call(null,G__243031,G__243032));
})();
var G__242710 = " ";
var G__242711 = (function (){var G__243033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243034 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243033,G__243034) : tailrecursion.hoplon.span.call(null,G__243033,G__243034));
})();
var G__242712 = ")))\n(";
var G__242713 = (function (){var G__243035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243036 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243035,G__243036) : tailrecursion.hoplon.span.call(null,G__243035,G__243036));
})();
var G__242714 = " ";
var G__242715 = (function (){var G__243037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243038 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243037,G__243038) : tailrecursion.hoplon.span.call(null,G__243037,G__243038));
})();
var G__242716 = " (";
var G__242717 = (function (){var G__243039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243040 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243039,G__243040) : tailrecursion.hoplon.span.call(null,G__243039,G__243040));
})();
var G__242718 = " ";
var G__242719 = (function (){var G__243041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243042 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243041,G__243042) : tailrecursion.hoplon.span.call(null,G__243041,G__243042));
})();
var G__242720 = " ";
var G__242721 = (function (){var G__243043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243044 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243043,G__243044) : tailrecursion.hoplon.span.call(null,G__243043,G__243044));
})();
var G__242722 = "))\n(";
var G__242723 = (function (){var G__243045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243046 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243045,G__243046) : tailrecursion.hoplon.span.call(null,G__243045,G__243046));
})();
var G__242724 = " ";
var G__242725 = (function (){var G__243047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243048 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243047,G__243048) : tailrecursion.hoplon.span.call(null,G__243047,G__243048));
})();
var G__242726 = " (";
var G__242727 = (function (){var G__243049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243050 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243049,G__243050) : tailrecursion.hoplon.span.call(null,G__243049,G__243050));
})();
var G__242728 = " (";
var G__242729 = (function (){var G__243051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__243052 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243051,G__243052) : tailrecursion.hoplon.span.call(null,G__243051,G__243052));
})();
var G__242730 = (function (){var G__243053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243054 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243053,G__243054) : tailrecursion.hoplon.span.call(null,G__243053,G__243054));
})();
var G__242731 = " ";
var G__242732 = (function (){var G__243055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243056 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243055,G__243056) : tailrecursion.hoplon.span.call(null,G__243055,G__243056));
})();
var G__242733 = ") (";
var G__242734 = (function (){var G__243057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243058 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243057,G__243058) : tailrecursion.hoplon.span.call(null,G__243057,G__243058));
})();
var G__242735 = " ";
var G__242736 = (function (){var G__243059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243060 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243059,G__243060) : tailrecursion.hoplon.span.call(null,G__243059,G__243060));
})();
var G__242737 = " (";
var G__242738 = (function (){var G__243061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__243062 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243061,G__243062) : tailrecursion.hoplon.span.call(null,G__243061,G__243062));
})();
var G__242739 = (function (){var G__243063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243064 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243063,G__243064) : tailrecursion.hoplon.span.call(null,G__243063,G__243064));
})();
var G__242740 = " ";
var G__242741 = (function (){var G__243065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243066 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243065,G__243066) : tailrecursion.hoplon.span.call(null,G__243065,G__243066));
})();
var G__242742 = "))))\n(";
var G__242743 = (function (){var G__243067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243068 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243067,G__243068) : tailrecursion.hoplon.span.call(null,G__243067,G__243068));
})();
var G__242744 = " ";
var G__242745 = (function (){var G__243069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243070 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243069,G__243070) : tailrecursion.hoplon.span.call(null,G__243069,G__243070));
})();
var G__242746 = " (";
var G__242747 = (function (){var G__243071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243072 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243071,G__243072) : tailrecursion.hoplon.span.call(null,G__243071,G__243072));
})();
var G__242748 = " ";
var G__242749 = (function (){var G__243073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243074 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243073,G__243074) : tailrecursion.hoplon.span.call(null,G__243073,G__243074));
})();
var G__242750 = " (";
var G__242751 = (function (){var G__243075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243076 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243075,G__243076) : tailrecursion.hoplon.span.call(null,G__243075,G__243076));
})();
var G__242752 = " ";
var G__242753 = (function (){var G__243077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243078 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243077,G__243078) : tailrecursion.hoplon.span.call(null,G__243077,G__243078));
})();
var G__242754 = " ";
var G__242755 = (function (){var G__243079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243080 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243079,G__243080) : tailrecursion.hoplon.span.call(null,G__243079,G__243080));
})();
var G__242756 = ")))\n(";
var G__242757 = (function (){var G__243081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243082 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243081,G__243082) : tailrecursion.hoplon.span.call(null,G__243081,G__243082));
})();
var G__242758 = " ";
var G__242759 = (function (){var G__243083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243084 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243083,G__243084) : tailrecursion.hoplon.span.call(null,G__243083,G__243084));
})();
var G__242760 = " (";
var G__242761 = (function (){var G__243085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243086 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243085,G__243086) : tailrecursion.hoplon.span.call(null,G__243085,G__243086));
})();
var G__242762 = " ";
var G__242763 = (function (){var G__243087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243088 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243087,G__243088) : tailrecursion.hoplon.span.call(null,G__243087,G__243088));
})();
var G__242764 = " (";
var G__242765 = (function (){var G__243089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243090 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243089,G__243090) : tailrecursion.hoplon.span.call(null,G__243089,G__243090));
})();
var G__242766 = " (";
var G__242767 = (function (){var G__243091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__243092 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243091,G__243092) : tailrecursion.hoplon.span.call(null,G__243091,G__243092));
})();
var G__242768 = (function (){var G__243093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243094 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243093,G__243094) : tailrecursion.hoplon.span.call(null,G__243093,G__243094));
})();
var G__242769 = " ";
var G__242770 = (function (){var G__243095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243096 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243095,G__243096) : tailrecursion.hoplon.span.call(null,G__243095,G__243096));
})();
var G__242771 = ") (";
var G__242772 = (function (){var G__243097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243098 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243097,G__243098) : tailrecursion.hoplon.span.call(null,G__243097,G__243098));
})();
var G__242773 = " ";
var G__242774 = (function (){var G__243099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243100 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243099,G__243100) : tailrecursion.hoplon.span.call(null,G__243099,G__243100));
})();
var G__242775 = " (";
var G__242776 = (function (){var G__243101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__243102 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243101,G__243102) : tailrecursion.hoplon.span.call(null,G__243101,G__243102));
})();
var G__242777 = (function (){var G__243103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243104 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243103,G__243104) : tailrecursion.hoplon.span.call(null,G__243103,G__243104));
})();
var G__242778 = " ";
var G__242779 = (function (){var G__243105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243106 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243105,G__243106) : tailrecursion.hoplon.span.call(null,G__243105,G__243106));
})();
var G__242780 = ")))))\n(";
var G__242781 = (function (){var G__243107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243108 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243107,G__243108) : tailrecursion.hoplon.span.call(null,G__243107,G__243108));
})();
var G__242782 = " ";
var G__242783 = (function (){var G__243109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243110 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243109,G__243110) : tailrecursion.hoplon.span.call(null,G__243109,G__243110));
})();
var G__242784 = " (";
var G__242785 = (function (){var G__243111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243112 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243111,G__243112) : tailrecursion.hoplon.span.call(null,G__243111,G__243112));
})();
var G__242786 = " ";
var G__242787 = (function (){var G__243113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243114 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243113,G__243114) : tailrecursion.hoplon.span.call(null,G__243113,G__243114));
})();
var G__242788 = " (";
var G__242789 = (function (){var G__243115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243116 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243115,G__243116) : tailrecursion.hoplon.span.call(null,G__243115,G__243116));
})();
var G__242790 = " ";
var G__242791 = (function (){var G__243117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243118 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243117,G__243118) : tailrecursion.hoplon.span.call(null,G__243117,G__243118));
})();
var G__242792 = " (";
var G__242793 = (function (){var G__243119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243120 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243119,G__243120) : tailrecursion.hoplon.span.call(null,G__243119,G__243120));
})();
var G__242794 = " ";
var G__242795 = (function (){var G__243121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243122 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243121,G__243122) : tailrecursion.hoplon.span.call(null,G__243121,G__243122));
})();
var G__242796 = " ";
var G__242797 = (function (){var G__243123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243124 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243123,G__243124) : tailrecursion.hoplon.span.call(null,G__243123,G__243124));
})();
var G__242798 = "))))\n(";
var G__242799 = (function (){var G__243125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243126 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243125,G__243126) : tailrecursion.hoplon.span.call(null,G__243125,G__243126));
})();
var G__242800 = " ";
var G__242801 = (function (){var G__243127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243128 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243127,G__243128) : tailrecursion.hoplon.span.call(null,G__243127,G__243128));
})();
var G__242802 = " (";
var G__242803 = (function (){var G__243129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243130 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243129,G__243130) : tailrecursion.hoplon.span.call(null,G__243129,G__243130));
})();
var G__242804 = " ";
var G__242805 = (function (){var G__243131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243132 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243131,G__243132) : tailrecursion.hoplon.span.call(null,G__243131,G__243132));
})();
var G__242806 = " (";
var G__242807 = (function (){var G__243133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243134 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243133,G__243134) : tailrecursion.hoplon.span.call(null,G__243133,G__243134));
})();
var G__242808 = " ";
var G__242809 = (function (){var G__243135 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243136 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243135,G__243136) : tailrecursion.hoplon.span.call(null,G__243135,G__243136));
})();
var G__242810 = " ";
var G__242811 = (function (){var G__243137 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243138 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243137,G__243138) : tailrecursion.hoplon.span.call(null,G__243137,G__243138));
})();
var G__242812 = ")))\n(";
var G__242813 = (function (){var G__243139 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243140 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243139,G__243140) : tailrecursion.hoplon.span.call(null,G__243139,G__243140));
})();
var G__242814 = " ";
var G__242815 = (function (){var G__243141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243142 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243141,G__243142) : tailrecursion.hoplon.span.call(null,G__243141,G__243142));
})();
var G__242816 = " (";
var G__242817 = (function (){var G__243143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243144 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243143,G__243144) : tailrecursion.hoplon.span.call(null,G__243143,G__243144));
})();
var G__242818 = " ";
var G__242819 = (function (){var G__243145 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243146 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243145,G__243146) : tailrecursion.hoplon.span.call(null,G__243145,G__243146));
})();
var G__242820 = " (";
var G__242821 = (function (){var G__243147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243148 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243147,G__243148) : tailrecursion.hoplon.span.call(null,G__243147,G__243148));
})();
var G__242822 = " (";
var G__242823 = (function (){var G__243149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__243150 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243149,G__243150) : tailrecursion.hoplon.span.call(null,G__243149,G__243150));
})();
var G__242824 = (function (){var G__243151 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243152 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243151,G__243152) : tailrecursion.hoplon.span.call(null,G__243151,G__243152));
})();
var G__242825 = " ";
var G__242826 = (function (){var G__243153 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243154 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243153,G__243154) : tailrecursion.hoplon.span.call(null,G__243153,G__243154));
})();
var G__242827 = ") (";
var G__242828 = (function (){var G__243155 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243156 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243155,G__243156) : tailrecursion.hoplon.span.call(null,G__243155,G__243156));
})();
var G__242829 = " ";
var G__242830 = (function (){var G__243157 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243158 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243157,G__243158) : tailrecursion.hoplon.span.call(null,G__243157,G__243158));
})();
var G__242831 = " (";
var G__242832 = (function (){var G__243159 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__243160 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243159,G__243160) : tailrecursion.hoplon.span.call(null,G__243159,G__243160));
})();
var G__242833 = (function (){var G__243161 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243162 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243161,G__243162) : tailrecursion.hoplon.span.call(null,G__243161,G__243162));
})();
var G__242834 = " ";
var G__242835 = (function (){var G__243163 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243164 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243163,G__243164) : tailrecursion.hoplon.span.call(null,G__243163,G__243164));
})();
var G__242836 = ")))))\n(";
var G__242837 = (function (){var G__243165 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243166 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243165,G__243166) : tailrecursion.hoplon.span.call(null,G__243165,G__243166));
})();
var G__242838 = " ";
var G__242839 = (function (){var G__243167 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243168 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243167,G__243168) : tailrecursion.hoplon.span.call(null,G__243167,G__243168));
})();
var G__242840 = " (";
var G__242841 = (function (){var G__243169 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243170 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243169,G__243170) : tailrecursion.hoplon.span.call(null,G__243169,G__243170));
})();
var G__242842 = " ";
var G__242843 = (function (){var G__243171 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243172 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243171,G__243172) : tailrecursion.hoplon.span.call(null,G__243171,G__243172));
})();
var G__242844 = " (";
var G__242845 = (function (){var G__243173 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243174 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243173,G__243174) : tailrecursion.hoplon.span.call(null,G__243173,G__243174));
})();
var G__242846 = " ";
var G__242847 = (function (){var G__243175 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243176 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243175,G__243176) : tailrecursion.hoplon.span.call(null,G__243175,G__243176));
})();
var G__242848 = " (";
var G__242849 = (function (){var G__243177 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243178 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243177,G__243178) : tailrecursion.hoplon.span.call(null,G__243177,G__243178));
})();
var G__242850 = " ";
var G__242851 = (function (){var G__243179 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243180 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243179,G__243180) : tailrecursion.hoplon.span.call(null,G__243179,G__243180));
})();
var G__242852 = " ";
var G__242853 = (function (){var G__243181 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243182 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243181,G__243182) : tailrecursion.hoplon.span.call(null,G__243181,G__243182));
})();
var G__242854 = "))))\n(";
var G__242855 = (function (){var G__243183 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243184 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243183,G__243184) : tailrecursion.hoplon.span.call(null,G__243183,G__243184));
})();
var G__242856 = " ";
var G__242857 = (function (){var G__243185 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243186 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243185,G__243186) : tailrecursion.hoplon.span.call(null,G__243185,G__243186));
})();
var G__242858 = " (";
var G__242859 = (function (){var G__243187 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243188 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243187,G__243188) : tailrecursion.hoplon.span.call(null,G__243187,G__243188));
})();
var G__242860 = " ";
var G__242861 = (function (){var G__243189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243190 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243189,G__243190) : tailrecursion.hoplon.span.call(null,G__243189,G__243190));
})();
var G__242862 = " (";
var G__242863 = (function (){var G__243191 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243192 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243191,G__243192) : tailrecursion.hoplon.span.call(null,G__243191,G__243192));
})();
var G__242864 = " ";
var G__242865 = (function (){var G__243193 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243194 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243193,G__243194) : tailrecursion.hoplon.span.call(null,G__243193,G__243194));
})();
var G__242866 = " ";
var G__242867 = (function (){var G__243195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243196 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243195,G__243196) : tailrecursion.hoplon.span.call(null,G__243195,G__243196));
})();
var G__242868 = ")))\n(";
var G__242869 = (function (){var G__243197 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243198 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243197,G__243198) : tailrecursion.hoplon.span.call(null,G__243197,G__243198));
})();
var G__242870 = " ";
var G__242871 = (function (){var G__243199 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243200 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243199,G__243200) : tailrecursion.hoplon.span.call(null,G__243199,G__243200));
})();
var G__242872 = " (";
var G__242873 = (function (){var G__243201 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243202 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243201,G__243202) : tailrecursion.hoplon.span.call(null,G__243201,G__243202));
})();
var G__242874 = " ";
var G__242875 = (function (){var G__243203 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243204 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243203,G__243204) : tailrecursion.hoplon.span.call(null,G__243203,G__243204));
})();
var G__242876 = " ";
var G__242877 = (function (){var G__243205 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243206 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243205,G__243206) : tailrecursion.hoplon.span.call(null,G__243205,G__243206));
})();
var G__242878 = "))\n(";
var G__242879 = (function (){var G__243207 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243208 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243207,G__243208) : tailrecursion.hoplon.span.call(null,G__243207,G__243208));
})();
var G__242880 = " ";
var G__242881 = (function (){var G__243209 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243210 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243209,G__243210) : tailrecursion.hoplon.span.call(null,G__243209,G__243210));
})();
var G__242882 = " (";
var G__242883 = (function (){var G__243211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243212 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243211,G__243212) : tailrecursion.hoplon.span.call(null,G__243211,G__243212));
})();
var G__242884 = " ";
var G__242885 = (function (){var G__243213 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243214 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243213,G__243214) : tailrecursion.hoplon.span.call(null,G__243213,G__243214));
})();
var G__242886 = " (";
var G__242887 = (function (){var G__243215 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243216 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243215,G__243216) : tailrecursion.hoplon.span.call(null,G__243215,G__243216));
})();
var G__242888 = " ";
var G__242889 = (function (){var G__243217 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243218 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243217,G__243218) : tailrecursion.hoplon.span.call(null,G__243217,G__243218));
})();
var G__242890 = " ";
var G__242891 = (function (){var G__243219 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243220 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243219,G__243220) : tailrecursion.hoplon.span.call(null,G__243219,G__243220));
})();
var G__242892 = ")))\n(";
var G__242893 = (function (){var G__243221 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243222 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243221,G__243222) : tailrecursion.hoplon.span.call(null,G__243221,G__243222));
})();
var G__242894 = " ";
var G__242895 = (function (){var G__243223 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243224 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243223,G__243224) : tailrecursion.hoplon.span.call(null,G__243223,G__243224));
})();
var G__242896 = " (";
var G__242897 = (function (){var G__243225 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243226 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243225,G__243226) : tailrecursion.hoplon.span.call(null,G__243225,G__243226));
})();
var G__242898 = " ";
var G__242899 = (function (){var G__243227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243228 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243227,G__243228) : tailrecursion.hoplon.span.call(null,G__243227,G__243228));
})();
var G__242900 = " (";
var G__242901 = (function (){var G__243229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243230 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243229,G__243230) : tailrecursion.hoplon.span.call(null,G__243229,G__243230));
})();
var G__242902 = " ";
var G__242903 = (function (){var G__243231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243232 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243231,G__243232) : tailrecursion.hoplon.span.call(null,G__243231,G__243232));
})();
var G__242904 = " (";
var G__242905 = (function (){var G__243233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243234 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243233,G__243234) : tailrecursion.hoplon.span.call(null,G__243233,G__243234));
})();
var G__242906 = " ";
var G__242907 = (function (){var G__243235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243236 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243235,G__243236) : tailrecursion.hoplon.span.call(null,G__243235,G__243236));
})();
var G__242908 = " ";
var G__242909 = (function (){var G__243237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243238 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243237,G__243238) : tailrecursion.hoplon.span.call(null,G__243237,G__243238));
})();
var G__242910 = "))))\n(";
var G__242911 = (function (){var G__243239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243240 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243239,G__243240) : tailrecursion.hoplon.span.call(null,G__243239,G__243240));
})();
var G__242912 = " ";
var G__242913 = (function (){var G__243241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243242 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243241,G__243242) : tailrecursion.hoplon.span.call(null,G__243241,G__243242));
})();
var G__242914 = " (";
var G__242915 = (function (){var G__243243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243244 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243243,G__243244) : tailrecursion.hoplon.span.call(null,G__243243,G__243244));
})();
var G__242916 = " ";
var G__242917 = (function (){var G__243245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243246 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243245,G__243246) : tailrecursion.hoplon.span.call(null,G__243245,G__243246));
})();
var G__242918 = " (";
var G__242919 = (function (){var G__243247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243248 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243247,G__243248) : tailrecursion.hoplon.span.call(null,G__243247,G__243248));
})();
var G__242920 = " ";
var G__242921 = (function (){var G__243249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243250 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243249,G__243250) : tailrecursion.hoplon.span.call(null,G__243249,G__243250));
})();
var G__242922 = " (";
var G__242923 = (function (){var G__243251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243252 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243251,G__243252) : tailrecursion.hoplon.span.call(null,G__243251,G__243252));
})();
var G__242924 = " ";
var G__242925 = (function (){var G__243253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243254 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243253,G__243254) : tailrecursion.hoplon.span.call(null,G__243253,G__243254));
})();
var G__242926 = " (";
var G__242927 = (function (){var G__243255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243256 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243255,G__243256) : tailrecursion.hoplon.span.call(null,G__243255,G__243256));
})();
var G__242928 = " ";
var G__242929 = (function (){var G__243257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243258 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243257,G__243258) : tailrecursion.hoplon.span.call(null,G__243257,G__243258));
})();
var G__242930 = " ";
var G__242931 = (function (){var G__243259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243260 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243259,G__243260) : tailrecursion.hoplon.span.call(null,G__243259,G__243260));
})();
var G__242932 = ")))))\n(";
var G__242933 = (function (){var G__243261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243262 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243261,G__243262) : tailrecursion.hoplon.span.call(null,G__243261,G__243262));
})();
var G__242934 = " ";
var G__242935 = (function (){var G__243263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243264 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243263,G__243264) : tailrecursion.hoplon.span.call(null,G__243263,G__243264));
})();
var G__242936 = " (";
var G__242937 = (function (){var G__243265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243266 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243265,G__243266) : tailrecursion.hoplon.span.call(null,G__243265,G__243266));
})();
var G__242938 = " ";
var G__242939 = (function (){var G__243267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243268 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243267,G__243268) : tailrecursion.hoplon.span.call(null,G__243267,G__243268));
})();
var G__242940 = " (";
var G__242941 = (function (){var G__243269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243270 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243269,G__243270) : tailrecursion.hoplon.span.call(null,G__243269,G__243270));
})();
var G__242942 = " ";
var G__242943 = (function (){var G__243271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243272 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243271,G__243272) : tailrecursion.hoplon.span.call(null,G__243271,G__243272));
})();
var G__242944 = " (";
var G__242945 = (function (){var G__243273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243274 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243273,G__243274) : tailrecursion.hoplon.span.call(null,G__243273,G__243274));
})();
var G__242946 = " ";
var G__242947 = (function (){var G__243275 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243276 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243275,G__243276) : tailrecursion.hoplon.span.call(null,G__243275,G__243276));
})();
var G__242948 = " ";
var G__242949 = (function (){var G__243277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243278 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243277,G__243278) : tailrecursion.hoplon.span.call(null,G__243277,G__243278));
})();
var G__242950 = "))))\n(";
var G__242951 = (function (){var G__243279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243280 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243279,G__243280) : tailrecursion.hoplon.span.call(null,G__243279,G__243280));
})();
var G__242952 = " ";
var G__242953 = (function (){var G__243281 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243282 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243281,G__243282) : tailrecursion.hoplon.span.call(null,G__243281,G__243282));
})();
var G__242954 = " (";
var G__242955 = (function (){var G__243283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243284 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243283,G__243284) : tailrecursion.hoplon.span.call(null,G__243283,G__243284));
})();
var G__242956 = " ";
var G__242957 = (function (){var G__243285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243286 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243285,G__243286) : tailrecursion.hoplon.span.call(null,G__243285,G__243286));
})();
var G__242958 = " (";
var G__242959 = (function (){var G__243287 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243288 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243287,G__243288) : tailrecursion.hoplon.span.call(null,G__243287,G__243288));
})();
var G__242960 = " ";
var G__242961 = (function (){var G__243289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243290 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243289,G__243290) : tailrecursion.hoplon.span.call(null,G__243289,G__243290));
})();
var G__242962 = " ";
var G__242963 = (function (){var G__243291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243292 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243291,G__243292) : tailrecursion.hoplon.span.call(null,G__243291,G__243292));
})();
var G__242964 = ")))\n(";
var G__242965 = (function (){var G__243293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243294 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243293,G__243294) : tailrecursion.hoplon.span.call(null,G__243293,G__243294));
})();
var G__242966 = " ";
var G__242967 = (function (){var G__243295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243296 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243295,G__243296) : tailrecursion.hoplon.span.call(null,G__243295,G__243296));
})();
var G__242968 = " (";
var G__242969 = (function (){var G__243297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243298 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243297,G__243298) : tailrecursion.hoplon.span.call(null,G__243297,G__243298));
})();
var G__242970 = " ";
var G__242971 = (function (){var G__243299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243300 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243299,G__243300) : tailrecursion.hoplon.span.call(null,G__243299,G__243300));
})();
var G__242972 = " ";
var G__242973 = (function (){var G__243301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243302 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243301,G__243302) : tailrecursion.hoplon.span.call(null,G__243301,G__243302));
})();
var G__242974 = "))\n(";
var G__242975 = (function (){var G__243303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243304 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243303,G__243304) : tailrecursion.hoplon.span.call(null,G__243303,G__243304));
})();
var G__242976 = " ";
var G__242977 = (function (){var G__243305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243306 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243305,G__243306) : tailrecursion.hoplon.span.call(null,G__243305,G__243306));
})();
var G__242978 = " ";
var G__242979 = (function (){var G__243307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243308 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243307,G__243308) : tailrecursion.hoplon.span.call(null,G__243307,G__243308));
})();
var G__242980 = ")\n(";
var G__242981 = (function (){var G__243309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243310 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243309,G__243310) : tailrecursion.hoplon.span.call(null,G__243309,G__243310));
})();
var G__242982 = " ";
var G__242983 = (function (){var G__243311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243312 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243311,G__243312) : tailrecursion.hoplon.span.call(null,G__243311,G__243312));
})();
var G__242984 = " (";
var G__242985 = (function (){var G__243313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243314 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243313,G__243314) : tailrecursion.hoplon.span.call(null,G__243313,G__243314));
})();
var G__242986 = " ";
var G__242987 = (function (){var G__243315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243316 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243315,G__243316) : tailrecursion.hoplon.span.call(null,G__243315,G__243316));
})();
var G__242988 = " ";
var G__242989 = (function (){var G__243317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243318 = "15";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243317,G__243318) : tailrecursion.hoplon.span.call(null,G__243317,G__243318));
})();
var G__242990 = "))\n(";
var G__242991 = (function (){var G__243319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243320 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243319,G__243320) : tailrecursion.hoplon.span.call(null,G__243319,G__243320));
})();
var G__242992 = " ";
var G__242993 = (function (){var G__243321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243322 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243321,G__243322) : tailrecursion.hoplon.span.call(null,G__243321,G__243322));
})();
var G__242994 = " (";
var G__242995 = (function (){var G__243323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243324 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243323,G__243324) : tailrecursion.hoplon.span.call(null,G__243323,G__243324));
})();
var G__242996 = " ";
var G__242997 = (function (){var G__243325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243326 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243325,G__243326) : tailrecursion.hoplon.span.call(null,G__243325,G__243326));
})();
var G__242998 = " (";
var G__242999 = (function (){var G__243327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243328 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243327,G__243328) : tailrecursion.hoplon.span.call(null,G__243327,G__243328));
})();
var G__243000 = " ";
var G__243001 = (function (){var G__243329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243330 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243329,G__243330) : tailrecursion.hoplon.span.call(null,G__243329,G__243330));
})();
var G__243002 = " ";
var G__243003 = (function (){var G__243331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243332 = "14";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243331,G__243332) : tailrecursion.hoplon.span.call(null,G__243331,G__243332));
})();
var G__243004 = ")))\n";
var G__243005 = (function (){var G__243333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__243334 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243333,G__243334) : tailrecursion.hoplon.span.call(null,G__243333,G__243334));
})();
var G__243006 = "\n";
var G__243007 = (function (){var G__243335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243336 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243335,G__243336) : tailrecursion.hoplon.span.call(null,G__243335,G__243336));
})();
var G__243008 = ",";
var G__243009 = (function (){var G__243337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243338 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243337,G__243338) : tailrecursion.hoplon.span.call(null,G__243337,G__243338));
})();
var G__243010 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$322(G__242689,G__242690,G__242691,G__242692,G__242693,G__242694,G__242695,G__242696,G__242697,G__242698,G__242699,G__242700,G__242701,G__242702,G__242703,G__242704,G__242705,G__242706,G__242707,G__242708,G__242709,G__242710,G__242711,G__242712,G__242713,G__242714,G__242715,G__242716,G__242717,G__242718,G__242719,G__242720,G__242721,G__242722,G__242723,G__242724,G__242725,G__242726,G__242727,G__242728,G__242729,G__242730,G__242731,G__242732,G__242733,G__242734,G__242735,G__242736,G__242737,G__242738,G__242739,G__242740,G__242741,G__242742,G__242743,G__242744,G__242745,G__242746,G__242747,G__242748,G__242749,G__242750,G__242751,G__242752,G__242753,G__242754,G__242755,G__242756,G__242757,G__242758,G__242759,G__242760,G__242761,G__242762,G__242763,G__242764,G__242765,G__242766,G__242767,G__242768,G__242769,G__242770,G__242771,G__242772,G__242773,G__242774,G__242775,G__242776,G__242777,G__242778,G__242779,G__242780,G__242781,G__242782,G__242783,G__242784,G__242785,G__242786,G__242787,G__242788,G__242789,G__242790,G__242791,G__242792,G__242793,G__242794,G__242795,G__242796,G__242797,G__242798,G__242799,G__242800,G__242801,G__242802,G__242803,G__242804,G__242805,G__242806,G__242807,G__242808,G__242809,G__242810,G__242811,G__242812,G__242813,G__242814,G__242815,G__242816,G__242817,G__242818,G__242819,G__242820,G__242821,G__242822,G__242823,G__242824,G__242825,G__242826,G__242827,G__242828,G__242829,G__242830,G__242831,G__242832,G__242833,G__242834,G__242835,G__242836,G__242837,G__242838,G__242839,G__242840,G__242841,G__242842,G__242843,G__242844,G__242845,G__242846,G__242847,G__242848,G__242849,G__242850,G__242851,G__242852,G__242853,G__242854,G__242855,G__242856,G__242857,G__242858,G__242859,G__242860,G__242861,G__242862,G__242863,G__242864,G__242865,G__242866,G__242867,G__242868,G__242869,G__242870,G__242871,G__242872,G__242873,G__242874,G__242875,G__242876,G__242877,G__242878,G__242879,G__242880,G__242881,G__242882,G__242883,G__242884,G__242885,G__242886,G__242887,G__242888,G__242889,G__242890,G__242891,G__242892,G__242893,G__242894,G__242895,G__242896,G__242897,G__242898,G__242899,G__242900,G__242901,G__242902,G__242903,G__242904,G__242905,G__242906,G__242907,G__242908,G__242909,G__242910,G__242911,G__242912,G__242913,G__242914,G__242915,G__242916,G__242917,G__242918,G__242919,G__242920,G__242921,G__242922,G__242923,G__242924,G__242925,G__242926,G__242927,G__242928,G__242929,G__242930,G__242931,G__242932,G__242933,G__242934,G__242935,G__242936,G__242937,G__242938,G__242939,G__242940,G__242941,G__242942,G__242943,G__242944,G__242945,G__242946,G__242947,G__242948,G__242949,G__242950,G__242951,G__242952,G__242953,G__242954,G__242955,G__242956,G__242957,G__242958,G__242959,G__242960,G__242961,G__242962,G__242963,G__242964,G__242965,G__242966,G__242967,G__242968,G__242969,G__242970,G__242971,G__242972,G__242973,G__242974,G__242975,G__242976,G__242977,G__242978,G__242979,G__242980,G__242981,G__242982,G__242983,G__242984,G__242985,G__242986,G__242987,G__242988,G__242989,G__242990,G__242991,G__242992,G__242993,G__242994,G__242995,G__242996,G__242997,G__242998,G__242999,G__243000,G__243001,G__243002,G__243003,G__243004,G__243005,G__243006,G__243007,G__243008,G__243009,G__243010) : tailrecursion.hoplon.pre.call(null,G__242689,G__242690,G__242691,G__242692,G__242693,G__242694,G__242695,G__242696,G__242697,G__242698,G__242699,G__242700,G__242701,G__242702,G__242703,G__242704,G__242705,G__242706,G__242707,G__242708,G__242709,G__242710,G__242711,G__242712,G__242713,G__242714,G__242715,G__242716,G__242717,G__242718,G__242719,G__242720,G__242721,G__242722,G__242723,G__242724,G__242725,G__242726,G__242727,G__242728,G__242729,G__242730,G__242731,G__242732,G__242733,G__242734,G__242735,G__242736,G__242737,G__242738,G__242739,G__242740,G__242741,G__242742,G__242743,G__242744,G__242745,G__242746,G__242747,G__242748,G__242749,G__242750,G__242751,G__242752,G__242753,G__242754,G__242755,G__242756,G__242757,G__242758,G__242759,G__242760,G__242761,G__242762,G__242763,G__242764,G__242765,G__242766,G__242767,G__242768,G__242769,G__242770,G__242771,G__242772,G__242773,G__242774,G__242775,G__242776,G__242777,G__242778,G__242779,G__242780,G__242781,G__242782,G__242783,G__242784,G__242785,G__242786,G__242787,G__242788,G__242789,G__242790,G__242791,G__242792,G__242793,G__242794,G__242795,G__242796,G__242797,G__242798,G__242799,G__242800,G__242801,G__242802,G__242803,G__242804,G__242805,G__242806,G__242807,G__242808,G__242809,G__242810,G__242811,G__242812,G__242813,G__242814,G__242815,G__242816,G__242817,G__242818,G__242819,G__242820,G__242821,G__242822,G__242823,G__242824,G__242825,G__242826,G__242827,G__242828,G__242829,G__242830,G__242831,G__242832,G__242833,G__242834,G__242835,G__242836,G__242837,G__242838,G__242839,G__242840,G__242841,G__242842,G__242843,G__242844,G__242845,G__242846,G__242847,G__242848,G__242849,G__242850,G__242851,G__242852,G__242853,G__242854,G__242855,G__242856,G__242857,G__242858,G__242859,G__242860,G__242861,G__242862,G__242863,G__242864,G__242865,G__242866,G__242867,G__242868,G__242869,G__242870,G__242871,G__242872,G__242873,G__242874,G__242875,G__242876,G__242877,G__242878,G__242879,G__242880,G__242881,G__242882,G__242883,G__242884,G__242885,G__242886,G__242887,G__242888,G__242889,G__242890,G__242891,G__242892,G__242893,G__242894,G__242895,G__242896,G__242897,G__242898,G__242899,G__242900,G__242901,G__242902,G__242903,G__242904,G__242905,G__242906,G__242907,G__242908,G__242909,G__242910,G__242911,G__242912,G__242913,G__242914,G__242915,G__242916,G__242917,G__242918,G__242919,G__242920,G__242921,G__242922,G__242923,G__242924,G__242925,G__242926,G__242927,G__242928,G__242929,G__242930,G__242931,G__242932,G__242933,G__242934,G__242935,G__242936,G__242937,G__242938,G__242939,G__242940,G__242941,G__242942,G__242943,G__242944,G__242945,G__242946,G__242947,G__242948,G__242949,G__242950,G__242951,G__242952,G__242953,G__242954,G__242955,G__242956,G__242957,G__242958,G__242959,G__242960,G__242961,G__242962,G__242963,G__242964,G__242965,G__242966,G__242967,G__242968,G__242969,G__242970,G__242971,G__242972,G__242973,G__242974,G__242975,G__242976,G__242977,G__242978,G__242979,G__242980,G__242981,G__242982,G__242983,G__242984,G__242985,G__242986,G__242987,G__242988,G__242989,G__242990,G__242991,G__242992,G__242993,G__242994,G__242995,G__242996,G__242997,G__242998,G__242999,G__243000,G__243001,G__243002,G__243003,G__243004,G__243005,G__243006,G__243007,G__243008,G__243009,G__243010));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__242687,G__242688) : tailrecursion.hoplon.div.call(null,G__242687,G__242688));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__242686) : tailrecursion.hoplon.div.call(null,G__242686));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_242033;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_242032;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_242031;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_242030;
}})()], 0)),(function (){var _STAR_references_STAR_243339 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_243340 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_243341 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_243342 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__243359 = (function (){var G__243360 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__243361 = (function (){var G__243362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__243363 = "(";
var G__243364 = (function (){var G__243370 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__243371 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243370,G__243371) : tailrecursion.hoplon.span.call(null,G__243370,G__243371));
})();
var G__243365 = " ";
var G__243366 = (function (){var G__243372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243373 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243372,G__243373) : tailrecursion.hoplon.span.call(null,G__243372,G__243373));
})();
var G__243367 = " ";
var G__243368 = (function (){var G__243374 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__243375 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__243374,G__243375) : tailrecursion.hoplon.span.call(null,G__243374,G__243375));
})();
var G__243369 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__243362,G__243363,G__243364,G__243365,G__243366,G__243367,G__243368,G__243369) : tailrecursion.hoplon.pre.call(null,G__243362,G__243363,G__243364,G__243365,G__243366,G__243367,G__243368,G__243369));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__243360,G__243361) : tailrecursion.hoplon.div.call(null,G__243360,G__243361));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__243359) : tailrecursion.hoplon.div.call(null,G__243359));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_243342;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_243341;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_243340;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_243339;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_243376 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_243377 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_243378 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_243379 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__243984 = (function (){var G__243985 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__243986 = (function (){var G__243987 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__243988 = "(";
var G__243989 = (function (){var G__244289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244290 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244289,G__244290) : tailrecursion.hoplon.span.call(null,G__244289,G__244290));
})();
var G__243990 = " ";
var G__243991 = (function (){var G__244291 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244292 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244291,G__244292) : tailrecursion.hoplon.span.call(null,G__244291,G__244292));
})();
var G__243992 = " ";
var G__243993 = (function (){var G__244293 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244294 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244293,G__244294) : tailrecursion.hoplon.span.call(null,G__244293,G__244294));
})();
var G__243994 = ")\n(";
var G__243995 = (function (){var G__244295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244296 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244295,G__244296) : tailrecursion.hoplon.span.call(null,G__244295,G__244296));
})();
var G__243996 = " ";
var G__243997 = (function (){var G__244297 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244298 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244297,G__244298) : tailrecursion.hoplon.span.call(null,G__244297,G__244298));
})();
var G__243998 = " (";
var G__243999 = (function (){var G__244299 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244300 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244299,G__244300) : tailrecursion.hoplon.span.call(null,G__244299,G__244300));
})();
var G__244000 = " ";
var G__244001 = (function (){var G__244301 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244302 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244301,G__244302) : tailrecursion.hoplon.span.call(null,G__244301,G__244302));
})();
var G__244002 = " ";
var G__244003 = (function (){var G__244303 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244304 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244303,G__244304) : tailrecursion.hoplon.span.call(null,G__244303,G__244304));
})();
var G__244004 = "))\n(";
var G__244005 = (function (){var G__244305 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244306 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244305,G__244306) : tailrecursion.hoplon.span.call(null,G__244305,G__244306));
})();
var G__244006 = " ";
var G__244007 = (function (){var G__244307 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244308 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244307,G__244308) : tailrecursion.hoplon.span.call(null,G__244307,G__244308));
})();
var G__244008 = " (";
var G__244009 = (function (){var G__244309 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244310 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244309,G__244310) : tailrecursion.hoplon.span.call(null,G__244309,G__244310));
})();
var G__244010 = " ";
var G__244011 = (function (){var G__244311 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244312 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244311,G__244312) : tailrecursion.hoplon.span.call(null,G__244311,G__244312));
})();
var G__244012 = " (";
var G__244013 = (function (){var G__244313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244314 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244313,G__244314) : tailrecursion.hoplon.span.call(null,G__244313,G__244314));
})();
var G__244014 = " ";
var G__244015 = (function (){var G__244315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244316 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244315,G__244316) : tailrecursion.hoplon.span.call(null,G__244315,G__244316));
})();
var G__244016 = " ";
var G__244017 = (function (){var G__244317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244318 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244317,G__244318) : tailrecursion.hoplon.span.call(null,G__244317,G__244318));
})();
var G__244018 = ")))\n(";
var G__244019 = (function (){var G__244319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244320 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244319,G__244320) : tailrecursion.hoplon.span.call(null,G__244319,G__244320));
})();
var G__244020 = " ";
var G__244021 = (function (){var G__244321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244322 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244321,G__244322) : tailrecursion.hoplon.span.call(null,G__244321,G__244322));
})();
var G__244022 = " (";
var G__244023 = (function (){var G__244323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244324 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244323,G__244324) : tailrecursion.hoplon.span.call(null,G__244323,G__244324));
})();
var G__244024 = " ";
var G__244025 = (function (){var G__244325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244326 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244325,G__244326) : tailrecursion.hoplon.span.call(null,G__244325,G__244326));
})();
var G__244026 = " ";
var G__244027 = (function (){var G__244327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244328 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244327,G__244328) : tailrecursion.hoplon.span.call(null,G__244327,G__244328));
})();
var G__244028 = "))\n(";
var G__244029 = (function (){var G__244329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244330 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244329,G__244330) : tailrecursion.hoplon.span.call(null,G__244329,G__244330));
})();
var G__244030 = " ";
var G__244031 = (function (){var G__244331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244332 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244331,G__244332) : tailrecursion.hoplon.span.call(null,G__244331,G__244332));
})();
var G__244032 = " (";
var G__244033 = (function (){var G__244333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244334 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244333,G__244334) : tailrecursion.hoplon.span.call(null,G__244333,G__244334));
})();
var G__244034 = " ";
var G__244035 = (function (){var G__244335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244336 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244335,G__244336) : tailrecursion.hoplon.span.call(null,G__244335,G__244336));
})();
var G__244036 = " (";
var G__244037 = (function (){var G__244337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244338 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244337,G__244338) : tailrecursion.hoplon.span.call(null,G__244337,G__244338));
})();
var G__244038 = " ";
var G__244039 = (function (){var G__244339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244340 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244339,G__244340) : tailrecursion.hoplon.span.call(null,G__244339,G__244340));
})();
var G__244040 = " ";
var G__244041 = (function (){var G__244341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244342 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244341,G__244342) : tailrecursion.hoplon.span.call(null,G__244341,G__244342));
})();
var G__244042 = ")))\n(";
var G__244043 = (function (){var G__244343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244344 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244343,G__244344) : tailrecursion.hoplon.span.call(null,G__244343,G__244344));
})();
var G__244044 = " ";
var G__244045 = (function (){var G__244345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244346 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244345,G__244346) : tailrecursion.hoplon.span.call(null,G__244345,G__244346));
})();
var G__244046 = " (";
var G__244047 = (function (){var G__244347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244348 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244347,G__244348) : tailrecursion.hoplon.span.call(null,G__244347,G__244348));
})();
var G__244048 = " ";
var G__244049 = (function (){var G__244349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244350 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244349,G__244350) : tailrecursion.hoplon.span.call(null,G__244349,G__244350));
})();
var G__244050 = " ";
var G__244051 = (function (){var G__244351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244352 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244351,G__244352) : tailrecursion.hoplon.span.call(null,G__244351,G__244352));
})();
var G__244052 = "))\n(";
var G__244053 = (function (){var G__244353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244354 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244353,G__244354) : tailrecursion.hoplon.span.call(null,G__244353,G__244354));
})();
var G__244054 = " ";
var G__244055 = (function (){var G__244355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244356 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244355,G__244356) : tailrecursion.hoplon.span.call(null,G__244355,G__244356));
})();
var G__244056 = " (";
var G__244057 = (function (){var G__244357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244358 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244357,G__244358) : tailrecursion.hoplon.span.call(null,G__244357,G__244358));
})();
var G__244058 = " ";
var G__244059 = (function (){var G__244359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244360 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244359,G__244360) : tailrecursion.hoplon.span.call(null,G__244359,G__244360));
})();
var G__244060 = " (";
var G__244061 = (function (){var G__244361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244362 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244361,G__244362) : tailrecursion.hoplon.span.call(null,G__244361,G__244362));
})();
var G__244062 = " ";
var G__244063 = (function (){var G__244363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244364 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244363,G__244364) : tailrecursion.hoplon.span.call(null,G__244363,G__244364));
})();
var G__244064 = " ";
var G__244065 = (function (){var G__244365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244366 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244365,G__244366) : tailrecursion.hoplon.span.call(null,G__244365,G__244366));
})();
var G__244066 = ")))\n(";
var G__244067 = (function (){var G__244367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244368 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244367,G__244368) : tailrecursion.hoplon.span.call(null,G__244367,G__244368));
})();
var G__244068 = " ";
var G__244069 = (function (){var G__244369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244370 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244369,G__244370) : tailrecursion.hoplon.span.call(null,G__244369,G__244370));
})();
var G__244070 = " (";
var G__244071 = (function (){var G__244371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244372 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244371,G__244372) : tailrecursion.hoplon.span.call(null,G__244371,G__244372));
})();
var G__244072 = " ";
var G__244073 = (function (){var G__244373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244374 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244373,G__244374) : tailrecursion.hoplon.span.call(null,G__244373,G__244374));
})();
var G__244074 = " ";
var G__244075 = (function (){var G__244375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244376 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244375,G__244376) : tailrecursion.hoplon.span.call(null,G__244375,G__244376));
})();
var G__244076 = "))\n(";
var G__244077 = (function (){var G__244377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244378 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244377,G__244378) : tailrecursion.hoplon.span.call(null,G__244377,G__244378));
})();
var G__244078 = " ";
var G__244079 = (function (){var G__244379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244380 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244379,G__244380) : tailrecursion.hoplon.span.call(null,G__244379,G__244380));
})();
var G__244080 = " ";
var G__244081 = (function (){var G__244381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244382 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244381,G__244382) : tailrecursion.hoplon.span.call(null,G__244381,G__244382));
})();
var G__244082 = ")\n(";
var G__244083 = (function (){var G__244383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244384 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244383,G__244384) : tailrecursion.hoplon.span.call(null,G__244383,G__244384));
})();
var G__244084 = " ";
var G__244085 = (function (){var G__244385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244386 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244385,G__244386) : tailrecursion.hoplon.span.call(null,G__244385,G__244386));
})();
var G__244086 = " (";
var G__244087 = (function (){var G__244387 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244388 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244387,G__244388) : tailrecursion.hoplon.span.call(null,G__244387,G__244388));
})();
var G__244088 = " ";
var G__244089 = (function (){var G__244389 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244390 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244389,G__244390) : tailrecursion.hoplon.span.call(null,G__244389,G__244390));
})();
var G__244090 = " ";
var G__244091 = (function (){var G__244391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244392 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244391,G__244392) : tailrecursion.hoplon.span.call(null,G__244391,G__244392));
})();
var G__244092 = "))\n(";
var G__244093 = (function (){var G__244393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244394 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244393,G__244394) : tailrecursion.hoplon.span.call(null,G__244393,G__244394));
})();
var G__244094 = " ";
var G__244095 = (function (){var G__244395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244396 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244395,G__244396) : tailrecursion.hoplon.span.call(null,G__244395,G__244396));
})();
var G__244096 = " (";
var G__244097 = (function (){var G__244397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244398 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244397,G__244398) : tailrecursion.hoplon.span.call(null,G__244397,G__244398));
})();
var G__244098 = " ";
var G__244099 = (function (){var G__244399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244400 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244399,G__244400) : tailrecursion.hoplon.span.call(null,G__244399,G__244400));
})();
var G__244100 = " (";
var G__244101 = (function (){var G__244401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244402 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244401,G__244402) : tailrecursion.hoplon.span.call(null,G__244401,G__244402));
})();
var G__244102 = " ";
var G__244103 = (function (){var G__244403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244404 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244403,G__244404) : tailrecursion.hoplon.span.call(null,G__244403,G__244404));
})();
var G__244104 = " ";
var G__244105 = (function (){var G__244405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244406 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244405,G__244406) : tailrecursion.hoplon.span.call(null,G__244405,G__244406));
})();
var G__244106 = ")))\n(";
var G__244107 = (function (){var G__244407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244408 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244407,G__244408) : tailrecursion.hoplon.span.call(null,G__244407,G__244408));
})();
var G__244108 = " ";
var G__244109 = (function (){var G__244409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244410 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244409,G__244410) : tailrecursion.hoplon.span.call(null,G__244409,G__244410));
})();
var G__244110 = " (";
var G__244111 = (function (){var G__244411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244412 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244411,G__244412) : tailrecursion.hoplon.span.call(null,G__244411,G__244412));
})();
var G__244112 = " ";
var G__244113 = (function (){var G__244413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244414 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244413,G__244414) : tailrecursion.hoplon.span.call(null,G__244413,G__244414));
})();
var G__244114 = " (";
var G__244115 = (function (){var G__244415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244416 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244415,G__244416) : tailrecursion.hoplon.span.call(null,G__244415,G__244416));
})();
var G__244116 = " ";
var G__244117 = (function (){var G__244417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244418 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244417,G__244418) : tailrecursion.hoplon.span.call(null,G__244417,G__244418));
})();
var G__244118 = " (";
var G__244119 = (function (){var G__244419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244420 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244419,G__244420) : tailrecursion.hoplon.span.call(null,G__244419,G__244420));
})();
var G__244120 = " ";
var G__244121 = (function (){var G__244421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244422 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244421,G__244422) : tailrecursion.hoplon.span.call(null,G__244421,G__244422));
})();
var G__244122 = " ";
var G__244123 = (function (){var G__244423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244424 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244423,G__244424) : tailrecursion.hoplon.span.call(null,G__244423,G__244424));
})();
var G__244124 = "))))\n(";
var G__244125 = (function (){var G__244425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244426 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244425,G__244426) : tailrecursion.hoplon.span.call(null,G__244425,G__244426));
})();
var G__244126 = " ";
var G__244127 = (function (){var G__244427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244428 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244427,G__244428) : tailrecursion.hoplon.span.call(null,G__244427,G__244428));
})();
var G__244128 = " (";
var G__244129 = (function (){var G__244429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244430 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244429,G__244430) : tailrecursion.hoplon.span.call(null,G__244429,G__244430));
})();
var G__244130 = " ";
var G__244131 = (function (){var G__244431 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244432 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244431,G__244432) : tailrecursion.hoplon.span.call(null,G__244431,G__244432));
})();
var G__244132 = " (";
var G__244133 = (function (){var G__244433 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244434 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244433,G__244434) : tailrecursion.hoplon.span.call(null,G__244433,G__244434));
})();
var G__244134 = " ";
var G__244135 = (function (){var G__244435 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244436 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244435,G__244436) : tailrecursion.hoplon.span.call(null,G__244435,G__244436));
})();
var G__244136 = " ";
var G__244137 = (function (){var G__244437 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244438 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244437,G__244438) : tailrecursion.hoplon.span.call(null,G__244437,G__244438));
})();
var G__244138 = ")))\n(";
var G__244139 = (function (){var G__244439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244440 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244439,G__244440) : tailrecursion.hoplon.span.call(null,G__244439,G__244440));
})();
var G__244140 = " ";
var G__244141 = (function (){var G__244441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244442 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244441,G__244442) : tailrecursion.hoplon.span.call(null,G__244441,G__244442));
})();
var G__244142 = " (";
var G__244143 = (function (){var G__244443 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244444 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244443,G__244444) : tailrecursion.hoplon.span.call(null,G__244443,G__244444));
})();
var G__244144 = " ";
var G__244145 = (function (){var G__244445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244446 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244445,G__244446) : tailrecursion.hoplon.span.call(null,G__244445,G__244446));
})();
var G__244146 = " (";
var G__244147 = (function (){var G__244447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244448 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244447,G__244448) : tailrecursion.hoplon.span.call(null,G__244447,G__244448));
})();
var G__244148 = " ";
var G__244149 = (function (){var G__244449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244450 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244449,G__244450) : tailrecursion.hoplon.span.call(null,G__244449,G__244450));
})();
var G__244150 = " (";
var G__244151 = (function (){var G__244451 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244452 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244451,G__244452) : tailrecursion.hoplon.span.call(null,G__244451,G__244452));
})();
var G__244152 = " ";
var G__244153 = (function (){var G__244453 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244454 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244453,G__244454) : tailrecursion.hoplon.span.call(null,G__244453,G__244454));
})();
var G__244154 = " ";
var G__244155 = (function (){var G__244455 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244456 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244455,G__244456) : tailrecursion.hoplon.span.call(null,G__244455,G__244456));
})();
var G__244156 = "))))\n(";
var G__244157 = (function (){var G__244457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244458 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244457,G__244458) : tailrecursion.hoplon.span.call(null,G__244457,G__244458));
})();
var G__244158 = " ";
var G__244159 = (function (){var G__244459 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244460 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244459,G__244460) : tailrecursion.hoplon.span.call(null,G__244459,G__244460));
})();
var G__244160 = " (";
var G__244161 = (function (){var G__244461 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244462 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244461,G__244462) : tailrecursion.hoplon.span.call(null,G__244461,G__244462));
})();
var G__244162 = " ";
var G__244163 = (function (){var G__244463 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244464 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244463,G__244464) : tailrecursion.hoplon.span.call(null,G__244463,G__244464));
})();
var G__244164 = " (";
var G__244165 = (function (){var G__244465 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244466 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244465,G__244466) : tailrecursion.hoplon.span.call(null,G__244465,G__244466));
})();
var G__244166 = " ";
var G__244167 = (function (){var G__244467 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244468 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244467,G__244468) : tailrecursion.hoplon.span.call(null,G__244467,G__244468));
})();
var G__244168 = " ";
var G__244169 = (function (){var G__244469 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244470 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244469,G__244470) : tailrecursion.hoplon.span.call(null,G__244469,G__244470));
})();
var G__244170 = ")))\n(";
var G__244171 = (function (){var G__244471 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244472 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244471,G__244472) : tailrecursion.hoplon.span.call(null,G__244471,G__244472));
})();
var G__244172 = " ";
var G__244173 = (function (){var G__244473 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244474 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244473,G__244474) : tailrecursion.hoplon.span.call(null,G__244473,G__244474));
})();
var G__244174 = " (";
var G__244175 = (function (){var G__244475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244476 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244475,G__244476) : tailrecursion.hoplon.span.call(null,G__244475,G__244476));
})();
var G__244176 = " ";
var G__244177 = (function (){var G__244477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244478 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244477,G__244478) : tailrecursion.hoplon.span.call(null,G__244477,G__244478));
})();
var G__244178 = " ";
var G__244179 = (function (){var G__244479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244480 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244479,G__244480) : tailrecursion.hoplon.span.call(null,G__244479,G__244480));
})();
var G__244180 = "))\n(";
var G__244181 = (function (){var G__244481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244482 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244481,G__244482) : tailrecursion.hoplon.span.call(null,G__244481,G__244482));
})();
var G__244182 = " ";
var G__244183 = (function (){var G__244483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244484 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244483,G__244484) : tailrecursion.hoplon.span.call(null,G__244483,G__244484));
})();
var G__244184 = " (";
var G__244185 = (function (){var G__244485 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244486 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244485,G__244486) : tailrecursion.hoplon.span.call(null,G__244485,G__244486));
})();
var G__244186 = " ";
var G__244187 = (function (){var G__244487 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244488 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244487,G__244488) : tailrecursion.hoplon.span.call(null,G__244487,G__244488));
})();
var G__244188 = " (";
var G__244189 = (function (){var G__244489 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244490 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244489,G__244490) : tailrecursion.hoplon.span.call(null,G__244489,G__244490));
})();
var G__244190 = " ";
var G__244191 = (function (){var G__244491 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244492 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244491,G__244492) : tailrecursion.hoplon.span.call(null,G__244491,G__244492));
})();
var G__244192 = " ";
var G__244193 = (function (){var G__244493 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244494 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244493,G__244494) : tailrecursion.hoplon.span.call(null,G__244493,G__244494));
})();
var G__244194 = ")))\n(";
var G__244195 = (function (){var G__244495 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244496 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244495,G__244496) : tailrecursion.hoplon.span.call(null,G__244495,G__244496));
})();
var G__244196 = " ";
var G__244197 = (function (){var G__244497 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244498 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244497,G__244498) : tailrecursion.hoplon.span.call(null,G__244497,G__244498));
})();
var G__244198 = " (";
var G__244199 = (function (){var G__244499 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244500 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244499,G__244500) : tailrecursion.hoplon.span.call(null,G__244499,G__244500));
})();
var G__244200 = " ";
var G__244201 = (function (){var G__244501 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244502 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244501,G__244502) : tailrecursion.hoplon.span.call(null,G__244501,G__244502));
})();
var G__244202 = " (";
var G__244203 = (function (){var G__244503 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244504 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244503,G__244504) : tailrecursion.hoplon.span.call(null,G__244503,G__244504));
})();
var G__244204 = " ";
var G__244205 = (function (){var G__244505 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244506 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244505,G__244506) : tailrecursion.hoplon.span.call(null,G__244505,G__244506));
})();
var G__244206 = " (";
var G__244207 = (function (){var G__244507 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244508 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244507,G__244508) : tailrecursion.hoplon.span.call(null,G__244507,G__244508));
})();
var G__244208 = " ";
var G__244209 = (function (){var G__244509 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244510 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244509,G__244510) : tailrecursion.hoplon.span.call(null,G__244509,G__244510));
})();
var G__244210 = " ";
var G__244211 = (function (){var G__244511 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244512 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244511,G__244512) : tailrecursion.hoplon.span.call(null,G__244511,G__244512));
})();
var G__244212 = "))))\n(";
var G__244213 = (function (){var G__244513 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244514 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244513,G__244514) : tailrecursion.hoplon.span.call(null,G__244513,G__244514));
})();
var G__244214 = " ";
var G__244215 = (function (){var G__244515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244516 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244515,G__244516) : tailrecursion.hoplon.span.call(null,G__244515,G__244516));
})();
var G__244216 = " (";
var G__244217 = (function (){var G__244517 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244518 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244517,G__244518) : tailrecursion.hoplon.span.call(null,G__244517,G__244518));
})();
var G__244218 = " ";
var G__244219 = (function (){var G__244519 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244520 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244519,G__244520) : tailrecursion.hoplon.span.call(null,G__244519,G__244520));
})();
var G__244220 = " (";
var G__244221 = (function (){var G__244521 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244522 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244521,G__244522) : tailrecursion.hoplon.span.call(null,G__244521,G__244522));
})();
var G__244222 = " ";
var G__244223 = (function (){var G__244523 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244524 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244523,G__244524) : tailrecursion.hoplon.span.call(null,G__244523,G__244524));
})();
var G__244224 = " (";
var G__244225 = (function (){var G__244525 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244526 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244525,G__244526) : tailrecursion.hoplon.span.call(null,G__244525,G__244526));
})();
var G__244226 = " ";
var G__244227 = (function (){var G__244527 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244528 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244527,G__244528) : tailrecursion.hoplon.span.call(null,G__244527,G__244528));
})();
var G__244228 = " (";
var G__244229 = (function (){var G__244529 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244530 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244529,G__244530) : tailrecursion.hoplon.span.call(null,G__244529,G__244530));
})();
var G__244230 = " ";
var G__244231 = (function (){var G__244531 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244532 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244531,G__244532) : tailrecursion.hoplon.span.call(null,G__244531,G__244532));
})();
var G__244232 = " ";
var G__244233 = (function (){var G__244533 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244534 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244533,G__244534) : tailrecursion.hoplon.span.call(null,G__244533,G__244534));
})();
var G__244234 = ")))))\n(";
var G__244235 = (function (){var G__244535 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244536 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244535,G__244536) : tailrecursion.hoplon.span.call(null,G__244535,G__244536));
})();
var G__244236 = " ";
var G__244237 = (function (){var G__244537 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244538 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244537,G__244538) : tailrecursion.hoplon.span.call(null,G__244537,G__244538));
})();
var G__244238 = " (";
var G__244239 = (function (){var G__244539 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244540 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244539,G__244540) : tailrecursion.hoplon.span.call(null,G__244539,G__244540));
})();
var G__244240 = " ";
var G__244241 = (function (){var G__244541 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244542 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244541,G__244542) : tailrecursion.hoplon.span.call(null,G__244541,G__244542));
})();
var G__244242 = " (";
var G__244243 = (function (){var G__244543 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244544 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244543,G__244544) : tailrecursion.hoplon.span.call(null,G__244543,G__244544));
})();
var G__244244 = " ";
var G__244245 = (function (){var G__244545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244546 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244545,G__244546) : tailrecursion.hoplon.span.call(null,G__244545,G__244546));
})();
var G__244246 = " (";
var G__244247 = (function (){var G__244547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244548 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244547,G__244548) : tailrecursion.hoplon.span.call(null,G__244547,G__244548));
})();
var G__244248 = " ";
var G__244249 = (function (){var G__244549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244550 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244549,G__244550) : tailrecursion.hoplon.span.call(null,G__244549,G__244550));
})();
var G__244250 = " ";
var G__244251 = (function (){var G__244551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244552 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244551,G__244552) : tailrecursion.hoplon.span.call(null,G__244551,G__244552));
})();
var G__244252 = "))))\n(";
var G__244253 = (function (){var G__244553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244554 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244553,G__244554) : tailrecursion.hoplon.span.call(null,G__244553,G__244554));
})();
var G__244254 = " ";
var G__244255 = (function (){var G__244555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244556 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244555,G__244556) : tailrecursion.hoplon.span.call(null,G__244555,G__244556));
})();
var G__244256 = " (";
var G__244257 = (function (){var G__244557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244558 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244557,G__244558) : tailrecursion.hoplon.span.call(null,G__244557,G__244558));
})();
var G__244258 = " ";
var G__244259 = (function (){var G__244559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244560 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244559,G__244560) : tailrecursion.hoplon.span.call(null,G__244559,G__244560));
})();
var G__244260 = " (";
var G__244261 = (function (){var G__244561 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244562 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244561,G__244562) : tailrecursion.hoplon.span.call(null,G__244561,G__244562));
})();
var G__244262 = " ";
var G__244263 = (function (){var G__244563 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244564 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244563,G__244564) : tailrecursion.hoplon.span.call(null,G__244563,G__244564));
})();
var G__244264 = " ";
var G__244265 = (function (){var G__244565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244566 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244565,G__244566) : tailrecursion.hoplon.span.call(null,G__244565,G__244566));
})();
var G__244266 = ")))\n(";
var G__244267 = (function (){var G__244567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244568 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244567,G__244568) : tailrecursion.hoplon.span.call(null,G__244567,G__244568));
})();
var G__244268 = " ";
var G__244269 = (function (){var G__244569 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244570 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244569,G__244570) : tailrecursion.hoplon.span.call(null,G__244569,G__244570));
})();
var G__244270 = " (";
var G__244271 = (function (){var G__244571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244572 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244571,G__244572) : tailrecursion.hoplon.span.call(null,G__244571,G__244572));
})();
var G__244272 = " ";
var G__244273 = (function (){var G__244573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244574 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244573,G__244574) : tailrecursion.hoplon.span.call(null,G__244573,G__244574));
})();
var G__244274 = " ";
var G__244275 = (function (){var G__244575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244576 = "8";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244575,G__244576) : tailrecursion.hoplon.span.call(null,G__244575,G__244576));
})();
var G__244276 = "))\n(";
var G__244277 = (function (){var G__244577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244578 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244577,G__244578) : tailrecursion.hoplon.span.call(null,G__244577,G__244578));
})();
var G__244278 = " ";
var G__244279 = (function (){var G__244579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244580 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244579,G__244580) : tailrecursion.hoplon.span.call(null,G__244579,G__244580));
})();
var G__244280 = " ";
var G__244281 = (function (){var G__244581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244582 = "16";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244581,G__244582) : tailrecursion.hoplon.span.call(null,G__244581,G__244582));
})();
var G__244282 = ")\n";
var G__244283 = (function (){var G__244583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244584 = "...";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244583,G__244584) : tailrecursion.hoplon.span.call(null,G__244583,G__244584));
})();
var G__244284 = "\n";
var G__244285 = (function (){var G__244585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244586 = "65";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244585,G__244586) : tailrecursion.hoplon.span.call(null,G__244585,G__244586));
})();
var G__244286 = ",";
var G__244287 = (function (){var G__244587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244588 = "536";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244587,G__244588) : tailrecursion.hoplon.span.call(null,G__244587,G__244588));
})();
var G__244288 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$302(G__243987,G__243988,G__243989,G__243990,G__243991,G__243992,G__243993,G__243994,G__243995,G__243996,G__243997,G__243998,G__243999,G__244000,G__244001,G__244002,G__244003,G__244004,G__244005,G__244006,G__244007,G__244008,G__244009,G__244010,G__244011,G__244012,G__244013,G__244014,G__244015,G__244016,G__244017,G__244018,G__244019,G__244020,G__244021,G__244022,G__244023,G__244024,G__244025,G__244026,G__244027,G__244028,G__244029,G__244030,G__244031,G__244032,G__244033,G__244034,G__244035,G__244036,G__244037,G__244038,G__244039,G__244040,G__244041,G__244042,G__244043,G__244044,G__244045,G__244046,G__244047,G__244048,G__244049,G__244050,G__244051,G__244052,G__244053,G__244054,G__244055,G__244056,G__244057,G__244058,G__244059,G__244060,G__244061,G__244062,G__244063,G__244064,G__244065,G__244066,G__244067,G__244068,G__244069,G__244070,G__244071,G__244072,G__244073,G__244074,G__244075,G__244076,G__244077,G__244078,G__244079,G__244080,G__244081,G__244082,G__244083,G__244084,G__244085,G__244086,G__244087,G__244088,G__244089,G__244090,G__244091,G__244092,G__244093,G__244094,G__244095,G__244096,G__244097,G__244098,G__244099,G__244100,G__244101,G__244102,G__244103,G__244104,G__244105,G__244106,G__244107,G__244108,G__244109,G__244110,G__244111,G__244112,G__244113,G__244114,G__244115,G__244116,G__244117,G__244118,G__244119,G__244120,G__244121,G__244122,G__244123,G__244124,G__244125,G__244126,G__244127,G__244128,G__244129,G__244130,G__244131,G__244132,G__244133,G__244134,G__244135,G__244136,G__244137,G__244138,G__244139,G__244140,G__244141,G__244142,G__244143,G__244144,G__244145,G__244146,G__244147,G__244148,G__244149,G__244150,G__244151,G__244152,G__244153,G__244154,G__244155,G__244156,G__244157,G__244158,G__244159,G__244160,G__244161,G__244162,G__244163,G__244164,G__244165,G__244166,G__244167,G__244168,G__244169,G__244170,G__244171,G__244172,G__244173,G__244174,G__244175,G__244176,G__244177,G__244178,G__244179,G__244180,G__244181,G__244182,G__244183,G__244184,G__244185,G__244186,G__244187,G__244188,G__244189,G__244190,G__244191,G__244192,G__244193,G__244194,G__244195,G__244196,G__244197,G__244198,G__244199,G__244200,G__244201,G__244202,G__244203,G__244204,G__244205,G__244206,G__244207,G__244208,G__244209,G__244210,G__244211,G__244212,G__244213,G__244214,G__244215,G__244216,G__244217,G__244218,G__244219,G__244220,G__244221,G__244222,G__244223,G__244224,G__244225,G__244226,G__244227,G__244228,G__244229,G__244230,G__244231,G__244232,G__244233,G__244234,G__244235,G__244236,G__244237,G__244238,G__244239,G__244240,G__244241,G__244242,G__244243,G__244244,G__244245,G__244246,G__244247,G__244248,G__244249,G__244250,G__244251,G__244252,G__244253,G__244254,G__244255,G__244256,G__244257,G__244258,G__244259,G__244260,G__244261,G__244262,G__244263,G__244264,G__244265,G__244266,G__244267,G__244268,G__244269,G__244270,G__244271,G__244272,G__244273,G__244274,G__244275,G__244276,G__244277,G__244278,G__244279,G__244280,G__244281,G__244282,G__244283,G__244284,G__244285,G__244286,G__244287,G__244288) : tailrecursion.hoplon.pre.call(null,G__243987,G__243988,G__243989,G__243990,G__243991,G__243992,G__243993,G__243994,G__243995,G__243996,G__243997,G__243998,G__243999,G__244000,G__244001,G__244002,G__244003,G__244004,G__244005,G__244006,G__244007,G__244008,G__244009,G__244010,G__244011,G__244012,G__244013,G__244014,G__244015,G__244016,G__244017,G__244018,G__244019,G__244020,G__244021,G__244022,G__244023,G__244024,G__244025,G__244026,G__244027,G__244028,G__244029,G__244030,G__244031,G__244032,G__244033,G__244034,G__244035,G__244036,G__244037,G__244038,G__244039,G__244040,G__244041,G__244042,G__244043,G__244044,G__244045,G__244046,G__244047,G__244048,G__244049,G__244050,G__244051,G__244052,G__244053,G__244054,G__244055,G__244056,G__244057,G__244058,G__244059,G__244060,G__244061,G__244062,G__244063,G__244064,G__244065,G__244066,G__244067,G__244068,G__244069,G__244070,G__244071,G__244072,G__244073,G__244074,G__244075,G__244076,G__244077,G__244078,G__244079,G__244080,G__244081,G__244082,G__244083,G__244084,G__244085,G__244086,G__244087,G__244088,G__244089,G__244090,G__244091,G__244092,G__244093,G__244094,G__244095,G__244096,G__244097,G__244098,G__244099,G__244100,G__244101,G__244102,G__244103,G__244104,G__244105,G__244106,G__244107,G__244108,G__244109,G__244110,G__244111,G__244112,G__244113,G__244114,G__244115,G__244116,G__244117,G__244118,G__244119,G__244120,G__244121,G__244122,G__244123,G__244124,G__244125,G__244126,G__244127,G__244128,G__244129,G__244130,G__244131,G__244132,G__244133,G__244134,G__244135,G__244136,G__244137,G__244138,G__244139,G__244140,G__244141,G__244142,G__244143,G__244144,G__244145,G__244146,G__244147,G__244148,G__244149,G__244150,G__244151,G__244152,G__244153,G__244154,G__244155,G__244156,G__244157,G__244158,G__244159,G__244160,G__244161,G__244162,G__244163,G__244164,G__244165,G__244166,G__244167,G__244168,G__244169,G__244170,G__244171,G__244172,G__244173,G__244174,G__244175,G__244176,G__244177,G__244178,G__244179,G__244180,G__244181,G__244182,G__244183,G__244184,G__244185,G__244186,G__244187,G__244188,G__244189,G__244190,G__244191,G__244192,G__244193,G__244194,G__244195,G__244196,G__244197,G__244198,G__244199,G__244200,G__244201,G__244202,G__244203,G__244204,G__244205,G__244206,G__244207,G__244208,G__244209,G__244210,G__244211,G__244212,G__244213,G__244214,G__244215,G__244216,G__244217,G__244218,G__244219,G__244220,G__244221,G__244222,G__244223,G__244224,G__244225,G__244226,G__244227,G__244228,G__244229,G__244230,G__244231,G__244232,G__244233,G__244234,G__244235,G__244236,G__244237,G__244238,G__244239,G__244240,G__244241,G__244242,G__244243,G__244244,G__244245,G__244246,G__244247,G__244248,G__244249,G__244250,G__244251,G__244252,G__244253,G__244254,G__244255,G__244256,G__244257,G__244258,G__244259,G__244260,G__244261,G__244262,G__244263,G__244264,G__244265,G__244266,G__244267,G__244268,G__244269,G__244270,G__244271,G__244272,G__244273,G__244274,G__244275,G__244276,G__244277,G__244278,G__244279,G__244280,G__244281,G__244282,G__244283,G__244284,G__244285,G__244286,G__244287,G__244288));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__243985,G__243986) : tailrecursion.hoplon.div.call(null,G__243985,G__243986));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__243984) : tailrecursion.hoplon.div.call(null,G__243984));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_243379;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_243378;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_243377;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_243376;
}})()], 0)),(function (){var _STAR_references_STAR_244589 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_244590 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_244591 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_244592 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__244593 = cljs.core.PersistentArrayMap.EMPTY;
var G__244594 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the following procedures, where ",(function (){var G__244595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"A"], null);
var G__244596 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244595,G__244596) : tailrecursion.hoplon.markdown.code_node.call(null,G__244595,G__244596));
})()," is the procedure defined above:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244593,G__244594) : tailrecursion.hoplon.markdown.para_node.call(null,G__244593,G__244594));
})(),(function (){var G__244624 = (function (){var G__244625 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__244626 = (function (){var G__244627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__244628 = "(";
var G__244629 = (function (){var G__244640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__244641 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244640,G__244641) : tailrecursion.hoplon.span.call(null,G__244640,G__244641));
})();
var G__244630 = (function (){var G__244642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244643 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244642,G__244643) : tailrecursion.hoplon.span.call(null,G__244642,G__244643));
})();
var G__244631 = " [";
var G__244632 = (function (){var G__244644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244645 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244644,G__244645) : tailrecursion.hoplon.span.call(null,G__244644,G__244645));
})();
var G__244633 = "] (";
var G__244634 = (function (){var G__244646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244647 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244646,G__244647) : tailrecursion.hoplon.span.call(null,G__244646,G__244647));
})();
var G__244635 = " ";
var G__244636 = (function (){var G__244648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244649 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244648,G__244649) : tailrecursion.hoplon.span.call(null,G__244648,G__244649));
})();
var G__244637 = " ";
var G__244638 = (function (){var G__244650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244651 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244650,G__244651) : tailrecursion.hoplon.span.call(null,G__244650,G__244651));
})();
var G__244639 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__244627,G__244628,G__244629,G__244630,G__244631,G__244632,G__244633,G__244634,G__244635,G__244636,G__244637,G__244638,G__244639) : tailrecursion.hoplon.pre.call(null,G__244627,G__244628,G__244629,G__244630,G__244631,G__244632,G__244633,G__244634,G__244635,G__244636,G__244637,G__244638,G__244639));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__244625,G__244626) : tailrecursion.hoplon.div.call(null,G__244625,G__244626));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__244624) : tailrecursion.hoplon.div.call(null,G__244624));
})(),(function (){var G__244679 = (function (){var G__244680 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__244681 = (function (){var G__244682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__244683 = "(";
var G__244684 = (function (){var G__244695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__244696 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244695,G__244696) : tailrecursion.hoplon.span.call(null,G__244695,G__244696));
})();
var G__244685 = (function (){var G__244697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244698 = "g";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244697,G__244698) : tailrecursion.hoplon.span.call(null,G__244697,G__244698));
})();
var G__244686 = " [";
var G__244687 = (function (){var G__244699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244700 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244699,G__244700) : tailrecursion.hoplon.span.call(null,G__244699,G__244700));
})();
var G__244688 = "] (";
var G__244689 = (function (){var G__244701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244702 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244701,G__244702) : tailrecursion.hoplon.span.call(null,G__244701,G__244702));
})();
var G__244690 = " ";
var G__244691 = (function (){var G__244703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244704 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244703,G__244704) : tailrecursion.hoplon.span.call(null,G__244703,G__244704));
})();
var G__244692 = " ";
var G__244693 = (function (){var G__244705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244706 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244705,G__244706) : tailrecursion.hoplon.span.call(null,G__244705,G__244706));
})();
var G__244694 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__244682,G__244683,G__244684,G__244685,G__244686,G__244687,G__244688,G__244689,G__244690,G__244691,G__244692,G__244693,G__244694) : tailrecursion.hoplon.pre.call(null,G__244682,G__244683,G__244684,G__244685,G__244686,G__244687,G__244688,G__244689,G__244690,G__244691,G__244692,G__244693,G__244694));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__244680,G__244681) : tailrecursion.hoplon.div.call(null,G__244680,G__244681));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__244679) : tailrecursion.hoplon.div.call(null,G__244679));
})(),(function (){var G__244734 = (function (){var G__244735 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__244736 = (function (){var G__244737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__244738 = "(";
var G__244739 = (function (){var G__244750 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__244751 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244750,G__244751) : tailrecursion.hoplon.span.call(null,G__244750,G__244751));
})();
var G__244740 = (function (){var G__244752 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244753 = "h";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244752,G__244753) : tailrecursion.hoplon.span.call(null,G__244752,G__244753));
})();
var G__244741 = " [";
var G__244742 = (function (){var G__244754 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244755 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244754,G__244755) : tailrecursion.hoplon.span.call(null,G__244754,G__244755));
})();
var G__244743 = "] (";
var G__244744 = (function (){var G__244756 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__244757 = "A";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244756,G__244757) : tailrecursion.hoplon.span.call(null,G__244756,G__244757));
})();
var G__244745 = " ";
var G__244746 = (function (){var G__244758 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244759 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244758,G__244759) : tailrecursion.hoplon.span.call(null,G__244758,G__244759));
})();
var G__244747 = " ";
var G__244748 = (function (){var G__244760 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244761 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244760,G__244761) : tailrecursion.hoplon.span.call(null,G__244760,G__244761));
})();
var G__244749 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__244737,G__244738,G__244739,G__244740,G__244741,G__244742,G__244743,G__244744,G__244745,G__244746,G__244747,G__244748,G__244749) : tailrecursion.hoplon.pre.call(null,G__244737,G__244738,G__244739,G__244740,G__244741,G__244742,G__244743,G__244744,G__244745,G__244746,G__244747,G__244748,G__244749));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__244735,G__244736) : tailrecursion.hoplon.div.call(null,G__244735,G__244736));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__244734) : tailrecursion.hoplon.div.call(null,G__244734));
})(),(function (){var G__244792 = (function (){var G__244793 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__244794 = (function (){var G__244795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__244796 = "(";
var G__244797 = (function (){var G__244809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__244810 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244809,G__244810) : tailrecursion.hoplon.span.call(null,G__244809,G__244810));
})();
var G__244798 = (function (){var G__244811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244812 = "k";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244811,G__244812) : tailrecursion.hoplon.span.call(null,G__244811,G__244812));
})();
var G__244799 = " [";
var G__244800 = (function (){var G__244813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244814 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244813,G__244814) : tailrecursion.hoplon.span.call(null,G__244813,G__244814));
})();
var G__244801 = "] (";
var G__244802 = (function (){var G__244815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__244816 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244815,G__244816) : tailrecursion.hoplon.span.call(null,G__244815,G__244816));
})();
var G__244803 = (function (){var G__244817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__244818 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244817,G__244818) : tailrecursion.hoplon.span.call(null,G__244817,G__244818));
})();
var G__244804 = " ";
var G__244805 = (function (){var G__244819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244820 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244819,G__244820) : tailrecursion.hoplon.span.call(null,G__244819,G__244820));
})();
var G__244806 = " ";
var G__244807 = (function (){var G__244821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__244822 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__244821,G__244822) : tailrecursion.hoplon.span.call(null,G__244821,G__244822));
})();
var G__244808 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__244795,G__244796,G__244797,G__244798,G__244799,G__244800,G__244801,G__244802,G__244803,G__244804,G__244805,G__244806,G__244807,G__244808) : tailrecursion.hoplon.pre.call(null,G__244795,G__244796,G__244797,G__244798,G__244799,G__244800,G__244801,G__244802,G__244803,G__244804,G__244805,G__244806,G__244807,G__244808));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__244793,G__244794) : tailrecursion.hoplon.div.call(null,G__244793,G__244794));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__244792) : tailrecursion.hoplon.div.call(null,G__244792));
})(),(function (){var G__244823 = cljs.core.PersistentArrayMap.EMPTY;
var G__244824 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Give concise mathematical definitions for the functions computed by the procedures ",(function (){var G__244825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"f"], null);
var G__244826 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244825,G__244826) : tailrecursion.hoplon.markdown.code_node.call(null,G__244825,G__244826));
})(),",",(function (){var G__244827 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"g"], null);
var G__244828 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244827,G__244828) : tailrecursion.hoplon.markdown.code_node.call(null,G__244827,G__244828));
})(),", and ",(function (){var G__244829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"h"], null);
var G__244830 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244829,G__244830) : tailrecursion.hoplon.markdown.code_node.call(null,G__244829,G__244830));
})()," for positive integer values of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". For example, ",(function (){var G__244831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(k n)"], null);
var G__244832 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244831,G__244832) : tailrecursion.hoplon.markdown.code_node.call(null,G__244831,G__244832));
})()," computes \\(5n^2\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244823,G__244824) : tailrecursion.hoplon.markdown.para_node.call(null,G__244823,G__244824));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_244592;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_244591;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_244590;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_244589;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_244833 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_244834 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_244835 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_244836 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__244837 = cljs.core.PersistentArrayMap.EMPTY;
var G__244838 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__244839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(f n)"], null);
var G__244840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244839,G__244840) : tailrecursion.hoplon.markdown.code_node.call(null,G__244839,G__244840));
})(),"\\(= 2n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244837,G__244838) : tailrecursion.hoplon.markdown.para_node.call(null,G__244837,G__244838));
})(),(function (){var G__244841 = cljs.core.PersistentArrayMap.EMPTY;
var G__244842 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__244843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(g n)"], null);
var G__244844 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244843,G__244844) : tailrecursion.hoplon.markdown.code_node.call(null,G__244843,G__244844));
})(),"\\(=2^n\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244841,G__244842) : tailrecursion.hoplon.markdown.para_node.call(null,G__244841,G__244842));
})(),(function (){var G__244845 = cljs.core.PersistentArrayMap.EMPTY;
var G__244846 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__244847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(h n)"], null);
var G__244848 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244847,G__244848) : tailrecursion.hoplon.markdown.code_node.call(null,G__244847,G__244848));
})(),"\\(=2^{2^{",(function (){var G__244849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__244850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__244849,G__244850) : tailrecursion.hoplon.markdown.simple_node.call(null,G__244849,G__244850));
})(),"^{2}}}\\), or alternatively, ",(function (){var G__244851 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(h n)"], null);
var G__244852 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__244851,G__244852) : tailrecursion.hoplon.markdown.code_node.call(null,G__244851,G__244852));
})(),"\\(= 2^{(h (n-1))}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244845,G__244846) : tailrecursion.hoplon.markdown.para_node.call(null,G__244845,G__244846));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_244836;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_244835;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_244834;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_244833;
}})()], 0))], 0))], 0));
var G__238151 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Tree Recursion"], null),(function (){var _STAR_references_STAR_244853 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_244854 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_244855 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_244856 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__244857 = cljs.core.PersistentArrayMap.EMPTY;
var G__244858 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Another common pattern of computation is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tree recursion"], null)], 0)),". As an example, consider computing the sequence of Fibonacci numbers, in which each number is the sum of the preceeding two:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244857,G__244858) : tailrecursion.hoplon.markdown.para_node.call(null,G__244857,G__244858));
})(),(function (){var G__244859 = cljs.core.PersistentArrayMap.EMPTY;
var G__244860 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$0, 1, 1, 2, 3, 5, 8, 13, 21, ",(function (){var G__244861 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__244862 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__244861,G__244862) : tailrecursion.hoplon.markdown.simple_node.call(null,G__244861,G__244862));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244859,G__244860) : tailrecursion.hoplon.markdown.para_node.call(null,G__244859,G__244860));
})(),(function (){var G__244863 = cljs.core.PersistentArrayMap.EMPTY;
var G__244864 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In general, the Fibonacci numbers can be defined by the rule"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244863,G__244864) : tailrecursion.hoplon.markdown.para_node.call(null,G__244863,G__244864));
})(),(function (){var G__244865 = cljs.core.PersistentArrayMap.EMPTY;
var G__244866 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\text{fib}(n)=\\begin{cases} 0 &\\text{ if } n=0\\cr 1 &\\text{ if } n=1 \\cr \\text{fib}(n-1)+\\text{ fib}(n-2) &\\text{ otherwise }\\end{cases}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244865,G__244866) : tailrecursion.hoplon.markdown.para_node.call(null,G__244865,G__244866));
})(),(function (){var G__244867 = cljs.core.PersistentArrayMap.EMPTY;
var G__244868 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can immediately translate this definition into a recursive procedure for computing Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__244867,G__244868) : tailrecursion.hoplon.markdown.para_node.call(null,G__244867,G__244868));
})(),(function (){var G__244956 = (function (){var G__244957 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__244958 = (function (){var G__244959 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__244960 = "(";
var G__244961 = (function (){var G__245000 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__245001 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245000,G__245001) : tailrecursion.hoplon.span.call(null,G__245000,G__245001));
})();
var G__244962 = (function (){var G__245002 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245003 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245002,G__245003) : tailrecursion.hoplon.span.call(null,G__245002,G__245003));
})();
var G__244963 = " [";
var G__244964 = (function (){var G__245004 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245005 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245004,G__245005) : tailrecursion.hoplon.span.call(null,G__245004,G__245005));
})();
var G__244965 = "]\n  (";
var G__244966 = (function (){var G__245006 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245007 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245006,G__245007) : tailrecursion.hoplon.span.call(null,G__245006,G__245007));
})();
var G__244967 = "(";
var G__244968 = (function (){var G__245008 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245009 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245008,G__245009) : tailrecursion.hoplon.span.call(null,G__245008,G__245009));
})();
var G__244969 = (function (){var G__245010 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245011 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245010,G__245011) : tailrecursion.hoplon.span.call(null,G__245010,G__245011));
})();
var G__244970 = " ";
var G__244971 = (function (){var G__245012 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245013 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245012,G__245013) : tailrecursion.hoplon.span.call(null,G__245012,G__245013));
})();
var G__244972 = ") ";
var G__244973 = (function (){var G__245014 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245015 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245014,G__245015) : tailrecursion.hoplon.span.call(null,G__245014,G__245015));
})();
var G__244974 = "\n        (";
var G__244975 = (function (){var G__245016 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245017 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245016,G__245017) : tailrecursion.hoplon.span.call(null,G__245016,G__245017));
})();
var G__244976 = (function (){var G__245018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245019 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245018,G__245019) : tailrecursion.hoplon.span.call(null,G__245018,G__245019));
})();
var G__244977 = " ";
var G__244978 = (function (){var G__245020 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245021 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245020,G__245021) : tailrecursion.hoplon.span.call(null,G__245020,G__245021));
})();
var G__244979 = ") ";
var G__244980 = (function (){var G__245022 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245023 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245022,G__245023) : tailrecursion.hoplon.span.call(null,G__245022,G__245023));
})();
var G__244981 = "\n        ";
var G__244982 = (function (){var G__245024 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245025 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245024,G__245025) : tailrecursion.hoplon.span.call(null,G__245024,G__245025));
})();
var G__244983 = " (";
var G__244984 = (function (){var G__245026 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245027 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245026,G__245027) : tailrecursion.hoplon.span.call(null,G__245026,G__245027));
})();
var G__244985 = "(";
var G__244986 = (function (){var G__245028 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245029 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245028,G__245029) : tailrecursion.hoplon.span.call(null,G__245028,G__245029));
})();
var G__244987 = " (";
var G__244988 = (function (){var G__245030 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245031 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245030,G__245031) : tailrecursion.hoplon.span.call(null,G__245030,G__245031));
})();
var G__244989 = (function (){var G__245032 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245033 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245032,G__245033) : tailrecursion.hoplon.span.call(null,G__245032,G__245033));
})();
var G__244990 = " ";
var G__244991 = (function (){var G__245034 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245035 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245034,G__245035) : tailrecursion.hoplon.span.call(null,G__245034,G__245035));
})();
var G__244992 = "))\n                 (";
var G__244993 = (function (){var G__245036 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245037 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245036,G__245037) : tailrecursion.hoplon.span.call(null,G__245036,G__245037));
})();
var G__244994 = " (";
var G__244995 = (function (){var G__245038 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245039 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245038,G__245039) : tailrecursion.hoplon.span.call(null,G__245038,G__245039));
})();
var G__244996 = (function (){var G__245040 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245041 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245040,G__245041) : tailrecursion.hoplon.span.call(null,G__245040,G__245041));
})();
var G__244997 = " ";
var G__244998 = (function (){var G__245042 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245043 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245042,G__245043) : tailrecursion.hoplon.span.call(null,G__245042,G__245043));
})();
var G__244999 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$41(G__244959,G__244960,G__244961,G__244962,G__244963,G__244964,G__244965,G__244966,G__244967,G__244968,G__244969,G__244970,G__244971,G__244972,G__244973,G__244974,G__244975,G__244976,G__244977,G__244978,G__244979,G__244980,G__244981,G__244982,G__244983,G__244984,G__244985,G__244986,G__244987,G__244988,G__244989,G__244990,G__244991,G__244992,G__244993,G__244994,G__244995,G__244996,G__244997,G__244998,G__244999) : tailrecursion.hoplon.pre.call(null,G__244959,G__244960,G__244961,G__244962,G__244963,G__244964,G__244965,G__244966,G__244967,G__244968,G__244969,G__244970,G__244971,G__244972,G__244973,G__244974,G__244975,G__244976,G__244977,G__244978,G__244979,G__244980,G__244981,G__244982,G__244983,G__244984,G__244985,G__244986,G__244987,G__244988,G__244989,G__244990,G__244991,G__244992,G__244993,G__244994,G__244995,G__244996,G__244997,G__244998,G__244999));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__244957,G__244958) : tailrecursion.hoplon.div.call(null,G__244957,G__244958));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__244956) : tailrecursion.hoplon.div.call(null,G__244956));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_244856;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_244855;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_244854;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_244853;
}})(),"",book.sicp.book_data.fig.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$footer,"The tree-recursive process generated in computing (fib 5)"], null)], 0)),"",(function (){var _STAR_references_STAR_245044 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245045 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_245046 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245047 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245048 = cljs.core.PersistentArrayMap.EMPTY;
var G__245049 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the pattern of this computation. To compute ",(function (){var G__245050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 5)"], null);
var G__245051 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245050,G__245051) : tailrecursion.hoplon.markdown.code_node.call(null,G__245050,G__245051));
})(),", we compute ",(function (){var G__245052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 4)"], null);
var G__245053 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245052,G__245053) : tailrecursion.hoplon.markdown.code_node.call(null,G__245052,G__245053));
})()," and ",(function (){var G__245054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 3)"], null);
var G__245055 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245054,G__245055) : tailrecursion.hoplon.markdown.code_node.call(null,G__245054,G__245055));
})(),". To compute ",(function (){var G__245056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 4)"], null);
var G__245057 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245056,G__245057) : tailrecursion.hoplon.markdown.code_node.call(null,G__245056,G__245057));
})(),", we compute ",(function (){var G__245058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib\n3)"], null);
var G__245059 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245058,G__245059) : tailrecursion.hoplon.markdown.code_node.call(null,G__245058,G__245059));
})()," and ",(function (){var G__245060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 2)"], null);
var G__245061 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245060,G__245061) : tailrecursion.hoplon.markdown.code_node.call(null,G__245060,G__245061));
})(),". In general, the evolved process looks like a tree, as shown in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0)),". Notice that the branches split into two at each level (except at the bottom); this reflects the fact that the ",(function (){var G__245062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__245063 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245062,G__245063) : tailrecursion.hoplon.markdown.code_node.call(null,G__245062,G__245063));
})()," procedure calls itself twice each time it is invoked."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245048,G__245049) : tailrecursion.hoplon.markdown.para_node.call(null,G__245048,G__245049));
})(),(function (){var G__245064 = cljs.core.PersistentArrayMap.EMPTY;
var G__245065 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This procedure is instructive as a prototypical tree recursion, but it is a terrible way to compute Fibonacci numbers because it does so much redundant computation. Notice in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/figure/1-5",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["figure 1.5"], null)], 0))," that the entire computation of ",(function (){var G__245066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 3)"], null);
var G__245067 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245066,G__245067) : tailrecursion.hoplon.markdown.code_node.call(null,G__245066,G__245067));
})()," ",(function (){var G__245068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__245069 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245068,G__245069) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245068,G__245069));
})()," almost half the work ",(function (){var G__245070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__245071 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245070,G__245071) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245070,G__245071));
})()," is dubplicated. In fact, it is not hard to show that the number of times the procedure will compute ",(function (){var G__245072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 1)"], null);
var G__245073 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245072,G__245073) : tailrecursion.hoplon.markdown.code_node.call(null,G__245072,G__245073));
})()," or ",(function (){var G__245074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(fib 0)"], null);
var G__245075 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245074,G__245075) : tailrecursion.hoplon.markdown.code_node.call(null,G__245074,G__245075));
})()," (the number of leaves in the above tree, in general) is precisely ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n+1)"], null)], 0)),". To get an idea of how bad this is, one can show that the value of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fiv(n)"], null)], 0))," grows exponentially with ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["n"], null)], 0)),". More precisely (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/ex/13",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.13"], null)], 0)),"), ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fib(n)"], null)], 0))," is the closest integer to \\(\\phi^n/\\sqrt5\\), where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245064,G__245065) : tailrecursion.hoplon.markdown.para_node.call(null,G__245064,G__245065));
})(),(function (){var G__245076 = cljs.core.PersistentArrayMap.EMPTY;
var G__245077 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi=\\left(1+\\sqrt5\\right)/2\\approx1.6180",(function (){var G__245078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__245079 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245078,G__245079) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245078,G__245079));
})(),"$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245076,G__245077) : tailrecursion.hoplon.markdown.para_node.call(null,G__245076,G__245077));
})(),(function (){var G__245080 = cljs.core.PersistentArrayMap.EMPTY;
var G__245081 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["is the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["golden ratio"], null)], 0)),", which satisfies the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245080,G__245081) : tailrecursion.hoplon.markdown.para_node.call(null,G__245080,G__245081));
})(),(function (){var G__245082 = cljs.core.PersistentArrayMap.EMPTY;
var G__245083 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\phi^2=\\phi+1$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245082,G__245083) : tailrecursion.hoplon.markdown.para_node.call(null,G__245082,G__245083));
})(),(function (){var G__245084 = cljs.core.PersistentArrayMap.EMPTY;
var G__245085 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, the process uses a number of steps that grows exponentially with the input. On the other hand, the space required gows only linearly with the input, because we need keep track only of which nodes are above us in the tree at any point in the computation. In general, the number of steps required by a tree-recursive process will be proportional to the number of nodes in the tree, while the space requrired will be proportional to the maximum depth of the tree."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245084,G__245085) : tailrecursion.hoplon.markdown.para_node.call(null,G__245084,G__245085));
})(),(function (){var G__245086 = cljs.core.PersistentArrayMap.EMPTY;
var G__245087 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can also formulate an iterative process for computing the Fibonacci numbers. The idea is to use a pair of integers ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a"], null)], 0))," and ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b"], null)], 0)),", initialized to \\(Fib(0)=0\\) and \\(Fib(1)=1\\), and to repeatedly apply the simultaneous transformations"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245086,G__245087) : tailrecursion.hoplon.markdown.para_node.call(null,G__245086,G__245087));
})(),(function (){var G__245088 = cljs.core.PersistentArrayMap.EMPTY;
var G__245089 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} a \\rightarrow & b \\cr b \\rightarrow & a + b\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245088,G__245089) : tailrecursion.hoplon.markdown.para_node.call(null,G__245088,G__245089));
})(),(function (){var G__245090 = cljs.core.PersistentArrayMap.EMPTY;
var G__245091 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is not hard to show that, after applying this transformation \\(n\\) times, \\(a\\) and \\(b\\) will be equal, respectively, to \\(Fib(n)\\) and \\(Fib(n+1)\\). Thus, we can compute Fibonacci numbers iteratively using the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245090,G__245091) : tailrecursion.hoplon.markdown.para_node.call(null,G__245090,G__245091));
})(),(function (){var G__245183 = (function (){var G__245184 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__245185 = (function (){var G__245186 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__245187 = "(";
var G__245188 = (function (){var G__245229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__245230 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245229,G__245230) : tailrecursion.hoplon.span.call(null,G__245229,G__245230));
})();
var G__245189 = (function (){var G__245231 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245232 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245231,G__245232) : tailrecursion.hoplon.span.call(null,G__245231,G__245232));
})();
var G__245190 = " [";
var G__245191 = (function (){var G__245233 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245234 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245233,G__245234) : tailrecursion.hoplon.span.call(null,G__245233,G__245234));
})();
var G__245192 = " ";
var G__245193 = (function (){var G__245235 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245236 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245235,G__245236) : tailrecursion.hoplon.span.call(null,G__245235,G__245236));
})();
var G__245194 = " ";
var G__245195 = (function (){var G__245237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245238 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245237,G__245238) : tailrecursion.hoplon.span.call(null,G__245237,G__245238));
})();
var G__245196 = "]\n  (";
var G__245197 = (function (){var G__245239 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__245240 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245239,G__245240) : tailrecursion.hoplon.span.call(null,G__245239,G__245240));
})();
var G__245198 = "(";
var G__245199 = (function (){var G__245241 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245242 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245241,G__245242) : tailrecursion.hoplon.span.call(null,G__245241,G__245242));
})();
var G__245200 = (function (){var G__245243 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245244 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245243,G__245244) : tailrecursion.hoplon.span.call(null,G__245243,G__245244));
})();
var G__245201 = ")\n      ";
var G__245202 = (function (){var G__245245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245246 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245245,G__245246) : tailrecursion.hoplon.span.call(null,G__245245,G__245246));
})();
var G__245203 = "\n      (";
var G__245204 = (function (){var G__245247 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245248 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245247,G__245248) : tailrecursion.hoplon.span.call(null,G__245247,G__245248));
})();
var G__245205 = " ";
var G__245206 = (function (){var G__245249 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245250 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245249,G__245250) : tailrecursion.hoplon.span.call(null,G__245249,G__245250));
})();
var G__245207 = " (";
var G__245208 = (function (){var G__245251 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245252 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245251,G__245252) : tailrecursion.hoplon.span.call(null,G__245251,G__245252));
})();
var G__245209 = (function (){var G__245253 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245254 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245253,G__245254) : tailrecursion.hoplon.span.call(null,G__245253,G__245254));
})();
var G__245210 = " ";
var G__245211 = (function (){var G__245255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245256 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245255,G__245256) : tailrecursion.hoplon.span.call(null,G__245255,G__245256));
})();
var G__245212 = ") (";
var G__245213 = (function (){var G__245257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245258 = "- count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245257,G__245258) : tailrecursion.hoplon.span.call(null,G__245257,G__245258));
})();
var G__245214 = (function (){var G__245259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245260 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245259,G__245260) : tailrecursion.hoplon.span.call(null,G__245259,G__245260));
})();
var G__245215 = "))))\n(";
var G__245216 = (function (){var G__245261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__245262 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245261,G__245262) : tailrecursion.hoplon.span.call(null,G__245261,G__245262));
})();
var G__245217 = (function (){var G__245263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245264 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245263,G__245264) : tailrecursion.hoplon.span.call(null,G__245263,G__245264));
})();
var G__245218 = " [";
var G__245219 = (function (){var G__245265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245266 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245265,G__245266) : tailrecursion.hoplon.span.call(null,G__245265,G__245266));
})();
var G__245220 = "]\n  (";
var G__245221 = (function (){var G__245267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245268 = "fib-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245267,G__245268) : tailrecursion.hoplon.span.call(null,G__245267,G__245268));
})();
var G__245222 = " ";
var G__245223 = (function (){var G__245269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245270 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245269,G__245270) : tailrecursion.hoplon.span.call(null,G__245269,G__245270));
})();
var G__245224 = " ";
var G__245225 = (function (){var G__245271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245272 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245271,G__245272) : tailrecursion.hoplon.span.call(null,G__245271,G__245272));
})();
var G__245226 = " ";
var G__245227 = (function (){var G__245273 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245274 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245273,G__245274) : tailrecursion.hoplon.span.call(null,G__245273,G__245274));
})();
var G__245228 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__245186,G__245187,G__245188,G__245189,G__245190,G__245191,G__245192,G__245193,G__245194,G__245195,G__245196,G__245197,G__245198,G__245199,G__245200,G__245201,G__245202,G__245203,G__245204,G__245205,G__245206,G__245207,G__245208,G__245209,G__245210,G__245211,G__245212,G__245213,G__245214,G__245215,G__245216,G__245217,G__245218,G__245219,G__245220,G__245221,G__245222,G__245223,G__245224,G__245225,G__245226,G__245227,G__245228) : tailrecursion.hoplon.pre.call(null,G__245186,G__245187,G__245188,G__245189,G__245190,G__245191,G__245192,G__245193,G__245194,G__245195,G__245196,G__245197,G__245198,G__245199,G__245200,G__245201,G__245202,G__245203,G__245204,G__245205,G__245206,G__245207,G__245208,G__245209,G__245210,G__245211,G__245212,G__245213,G__245214,G__245215,G__245216,G__245217,G__245218,G__245219,G__245220,G__245221,G__245222,G__245223,G__245224,G__245225,G__245226,G__245227,G__245228));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__245184,G__245185) : tailrecursion.hoplon.div.call(null,G__245184,G__245185));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__245183) : tailrecursion.hoplon.div.call(null,G__245183));
})(),(function (){var G__245275 = cljs.core.PersistentArrayMap.EMPTY;
var G__245276 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This second method for computing \\(Fib(n)\\) is a linear iteration. The difference in number of steps required by the two methods ",(function (){var G__245277 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__245278 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245277,G__245278) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245277,G__245278));
})(),"one linear in \\(n\\), one growing as fast as \\(Fib(n)\\) itself ",(function (){var G__245279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__245280 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245279,G__245280) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245279,G__245280));
})()," is enormous, even for small inputs."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245275,G__245276) : tailrecursion.hoplon.markdown.para_node.call(null,G__245275,G__245276));
})(),(function (){var G__245281 = cljs.core.PersistentArrayMap.EMPTY;
var G__245282 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One should not conclude from this that tree-recursive processes are useless. When we consider processes that operate on hierarchially structured data rather than numbers, we will find that tree recursion is a natural and powerful tool.",(function (){var G__245283 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__245284 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["An example of this was hinted at in section 1.1.3: The interpreter itself evaluates expressions using a tree-recursive process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__245283,G__245284) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__245283,G__245284));
})()," But even in numerical operations, tree-recursive processes can be useful in helping us to understand and design programs. For instance, although the first ",(function (){var G__245285 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__245286 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245285,G__245286) : tailrecursion.hoplon.markdown.code_node.call(null,G__245285,G__245286));
})()," procedure is much less efficient than the second one, it is more straightforward, being little more than a translation into Lisp of the definition of the Fibonacci sequence. To formulate the iterative algorithm required noticing that the computation could be recast as an iteration with three state variables."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245281,G__245282) : tailrecursion.hoplon.markdown.para_node.call(null,G__245281,G__245282));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245047;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245046;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245045;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245044;
}})()], 0));
var G__238152 = "";
var G__238153 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Counting Change"], null),(function (){var _STAR_references_STAR_245287 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245288 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_245289 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245290 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245291 = cljs.core.PersistentArrayMap.EMPTY;
var G__245292 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It takes only a bit of cleverness to come up with the iterative Fibonacci algorithm. In contrast, consider the following problem: How many different ways can we make change of $1.00, given half-dollars, quarters, dimes, nickels, and pennies? More generally, can we write a procedure to compute the number of ways to change any given amount of money?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245291,G__245292) : tailrecursion.hoplon.markdown.para_node.call(null,G__245291,G__245292));
})(),(function (){var G__245293 = cljs.core.PersistentArrayMap.EMPTY;
var G__245294 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This problem has a simple solution as a recursive procedure. Suppose we think of the types of coins available as arranged in some order. Then the following relation holds:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245293,G__245294) : tailrecursion.hoplon.markdown.para_node.call(null,G__245293,G__245294));
})(),(function (){var G__245295 = cljs.core.PersistentArrayMap.EMPTY;
var G__245296 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a\\) using \\(n\\) kinds of coins equals"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245295,G__245296) : tailrecursion.hoplon.markdown.para_node.call(null,G__245295,G__245296));
})(),(function (){var G__245297 = cljs.core.PersistentArrayMap.EMPTY;
var G__245298 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245299 = cljs.core.PersistentArrayMap.EMPTY;
var G__245300 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245301 = cljs.core.PersistentArrayMap.EMPTY;
var G__245302 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [" The number of ways to change amount \\(a\\) using all but the first kind of coin, plus"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245301,G__245302) : tailrecursion.hoplon.markdown.para_node.call(null,G__245301,G__245302));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__245299,G__245300) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__245299,G__245300));
})(),(function (){var G__245303 = cljs.core.PersistentArrayMap.EMPTY;
var G__245304 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_245305 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245306 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245307 = cljs.core.PersistentArrayMap.EMPTY;
var G__245308 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The number of ways to change amount \\(a-d\\) using all \\(n\\) kinds of coins, where \\(d\\) is the denomination of the first kind of coin."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245307,G__245308) : tailrecursion.hoplon.markdown.para_node.call(null,G__245307,G__245308));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245306;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245305;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__245303,G__245304) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__245303,G__245304));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__245297,G__245298) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__245297,G__245298));
})(),(function (){var G__245309 = cljs.core.PersistentArrayMap.EMPTY;
var G__245310 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To see why this is true, observe that the ways to make change can be divided into two groups: those that do not use any of the first kind, and those that do. Therefore, the total number of ways to make change for some amount is equal to the number of ways to make change for the amount without using any of the first kind of coin, plus the number of ways to make change assuming that we do use the first kind of coin. But the latter number is equal to the number of ways to make change for the amount that remains after using a coin of the first kind."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245309,G__245310) : tailrecursion.hoplon.markdown.para_node.call(null,G__245309,G__245310));
})(),(function (){var G__245311 = cljs.core.PersistentArrayMap.EMPTY;
var G__245312 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Thus, we can recursively reduce the problem of changing a give amount to the problem of changing smaller amounts using fewer kinds of coins. Consider this reduction rule carefully, and convince yourself that we can use it to describe an algorithm if we specify the following degenerate cases:",(function (){var G__245313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__245314 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For example, work through in detail how the reduction rule applies to the problem of making change for 10 cents using pennies and nickels."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__245313,G__245314) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__245313,G__245314));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245311,G__245312) : tailrecursion.hoplon.markdown.para_node.call(null,G__245311,G__245312));
})(),(function (){var G__245315 = cljs.core.PersistentArrayMap.EMPTY;
var G__245316 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245317 = cljs.core.PersistentArrayMap.EMPTY;
var G__245318 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245319 = cljs.core.PersistentArrayMap.EMPTY;
var G__245320 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is exactly 0, we should count that as 1 way to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245319,G__245320) : tailrecursion.hoplon.markdown.para_node.call(null,G__245319,G__245320));
})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__245317,G__245318) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__245317,G__245318));
})(),(function (){var G__245321 = cljs.core.PersistentArrayMap.EMPTY;
var G__245322 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_245323 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245324 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245325 = cljs.core.PersistentArrayMap.EMPTY;
var G__245326 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(a\\) is less than 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245325,G__245326) : tailrecursion.hoplon.markdown.para_node.call(null,G__245325,G__245326));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245324;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245323;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__245321,G__245322) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__245321,G__245322));
})(),(function (){var G__245327 = cljs.core.PersistentArrayMap.EMPTY;
var G__245328 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var _STAR_references_STAR_245329 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245330 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245331 = cljs.core.PersistentArrayMap.EMPTY;
var G__245332 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is 0, we should count that as 0 ways to make change."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245331,G__245332) : tailrecursion.hoplon.markdown.para_node.call(null,G__245331,G__245332));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245330;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245329;
}})()], null);
return (tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.list_item_node.cljs$core$IFn$_invoke$arity$2(G__245327,G__245328) : tailrecursion.hoplon.markdown.list_item_node.call(null,G__245327,G__245328));
})()], null);
return (tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.bullet_list_node.cljs$core$IFn$_invoke$arity$2(G__245315,G__245316) : tailrecursion.hoplon.markdown.bullet_list_node.call(null,G__245315,G__245316));
})(),(function (){var G__245333 = cljs.core.PersistentArrayMap.EMPTY;
var G__245334 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can easily translate this description into a recursive procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245333,G__245334) : tailrecursion.hoplon.markdown.para_node.call(null,G__245333,G__245334));
})(),(function (){var G__245362 = (function (){var G__245363 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__245364 = (function (){var G__245365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__245366 = "(";
var G__245367 = (function (){var G__245378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__245379 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245378,G__245379) : tailrecursion.hoplon.span.call(null,G__245378,G__245379));
})();
var G__245368 = (function (){var G__245380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245381 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245380,G__245381) : tailrecursion.hoplon.span.call(null,G__245380,G__245381));
})();
var G__245369 = " [";
var G__245370 = (function (){var G__245382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245383 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245382,G__245383) : tailrecursion.hoplon.span.call(null,G__245382,G__245383));
})();
var G__245371 = "]\n  (";
var G__245372 = (function (){var G__245384 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245385 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245384,G__245385) : tailrecursion.hoplon.span.call(null,G__245384,G__245385));
})();
var G__245373 = " ";
var G__245374 = (function (){var G__245386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245387 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245386,G__245387) : tailrecursion.hoplon.span.call(null,G__245386,G__245387));
})();
var G__245375 = " ";
var G__245376 = (function (){var G__245388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245389 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245388,G__245389) : tailrecursion.hoplon.span.call(null,G__245388,G__245389));
})();
var G__245377 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$13(G__245365,G__245366,G__245367,G__245368,G__245369,G__245370,G__245371,G__245372,G__245373,G__245374,G__245375,G__245376,G__245377) : tailrecursion.hoplon.pre.call(null,G__245365,G__245366,G__245367,G__245368,G__245369,G__245370,G__245371,G__245372,G__245373,G__245374,G__245375,G__245376,G__245377));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__245363,G__245364) : tailrecursion.hoplon.div.call(null,G__245363,G__245364));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__245362) : tailrecursion.hoplon.div.call(null,G__245362));
})(),(function (){var G__245390 = cljs.core.PersistentArrayMap.EMPTY;
var G__245391 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["given that we",(function (){var G__245392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__245393 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245392,G__245393) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245392,G__245393));
})(),"ve defined"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245390,G__245391) : tailrecursion.hoplon.markdown.para_node.call(null,G__245390,G__245391));
})(),(function (){var G__245512 = (function (){var G__245513 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__245514 = (function (){var G__245515 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__245516 = "(";
var G__245517 = (function (){var G__245571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__245572 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245571,G__245572) : tailrecursion.hoplon.span.call(null,G__245571,G__245572));
})();
var G__245518 = (function (){var G__245573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245574 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245573,G__245574) : tailrecursion.hoplon.span.call(null,G__245573,G__245574));
})();
var G__245519 = " [";
var G__245520 = (function (){var G__245575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245576 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245575,G__245576) : tailrecursion.hoplon.span.call(null,G__245575,G__245576));
})();
var G__245521 = " ";
var G__245522 = (function (){var G__245577 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245578 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245577,G__245578) : tailrecursion.hoplon.span.call(null,G__245577,G__245578));
})();
var G__245523 = "]\n  (";
var G__245524 = (function (){var G__245579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245580 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245579,G__245580) : tailrecursion.hoplon.span.call(null,G__245579,G__245580));
})();
var G__245525 = "(";
var G__245526 = (function (){var G__245581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245582 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245581,G__245582) : tailrecursion.hoplon.span.call(null,G__245581,G__245582));
})();
var G__245527 = (function (){var G__245583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245584 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245583,G__245584) : tailrecursion.hoplon.span.call(null,G__245583,G__245584));
})();
var G__245528 = " ";
var G__245529 = (function (){var G__245585 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245586 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245585,G__245586) : tailrecursion.hoplon.span.call(null,G__245585,G__245586));
})();
var G__245530 = ") ";
var G__245531 = (function (){var G__245587 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245588 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245587,G__245588) : tailrecursion.hoplon.span.call(null,G__245587,G__245588));
})();
var G__245532 = "\n        (";
var G__245533 = (function (){var G__245589 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245590 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245589,G__245590) : tailrecursion.hoplon.span.call(null,G__245589,G__245590));
})();
var G__245534 = "(";
var G__245535 = (function (){var G__245591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245592 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245591,G__245592) : tailrecursion.hoplon.span.call(null,G__245591,G__245592));
})();
var G__245536 = (function (){var G__245593 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245594 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245593,G__245594) : tailrecursion.hoplon.span.call(null,G__245593,G__245594));
})();
var G__245537 = " ";
var G__245538 = (function (){var G__245595 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245596 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245595,G__245596) : tailrecursion.hoplon.span.call(null,G__245595,G__245596));
})();
var G__245539 = ") (";
var G__245540 = (function (){var G__245597 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245598 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245597,G__245598) : tailrecursion.hoplon.span.call(null,G__245597,G__245598));
})();
var G__245541 = (function (){var G__245599 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245600 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245599,G__245600) : tailrecursion.hoplon.span.call(null,G__245599,G__245600));
})();
var G__245542 = " ";
var G__245543 = (function (){var G__245601 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245602 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245601,G__245602) : tailrecursion.hoplon.span.call(null,G__245601,G__245602));
})();
var G__245544 = ")) ";
var G__245545 = (function (){var G__245603 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245604 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245603,G__245604) : tailrecursion.hoplon.span.call(null,G__245603,G__245604));
})();
var G__245546 = "\n        ";
var G__245547 = (function (){var G__245605 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245606 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245605,G__245606) : tailrecursion.hoplon.span.call(null,G__245605,G__245606));
})();
var G__245548 = " (";
var G__245549 = (function (){var G__245607 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245608 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245607,G__245608) : tailrecursion.hoplon.span.call(null,G__245607,G__245608));
})();
var G__245550 = "(";
var G__245551 = (function (){var G__245609 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245610 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245609,G__245610) : tailrecursion.hoplon.span.call(null,G__245609,G__245610));
})();
var G__245552 = " ";
var G__245553 = (function (){var G__245611 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245612 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245611,G__245612) : tailrecursion.hoplon.span.call(null,G__245611,G__245612));
})();
var G__245554 = " (";
var G__245555 = (function (){var G__245613 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245614 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245613,G__245614) : tailrecursion.hoplon.span.call(null,G__245613,G__245614));
})();
var G__245556 = (function (){var G__245615 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245616 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245615,G__245616) : tailrecursion.hoplon.span.call(null,G__245615,G__245616));
})();
var G__245557 = " ";
var G__245558 = (function (){var G__245617 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245618 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245617,G__245618) : tailrecursion.hoplon.span.call(null,G__245617,G__245618));
})();
var G__245559 = "))\n                 (";
var G__245560 = (function (){var G__245619 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245620 = "cc";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245619,G__245620) : tailrecursion.hoplon.span.call(null,G__245619,G__245620));
})();
var G__245561 = " (";
var G__245562 = (function (){var G__245621 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245622 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245621,G__245622) : tailrecursion.hoplon.span.call(null,G__245621,G__245622));
})();
var G__245563 = (function (){var G__245623 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245624 = "amount";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245623,G__245624) : tailrecursion.hoplon.span.call(null,G__245623,G__245624));
})();
var G__245564 = " (";
var G__245565 = (function (){var G__245625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245626 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245625,G__245626) : tailrecursion.hoplon.span.call(null,G__245625,G__245626));
})();
var G__245566 = " ";
var G__245567 = (function (){var G__245627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245628 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245627,G__245628) : tailrecursion.hoplon.span.call(null,G__245627,G__245628));
})();
var G__245568 = ")) ";
var G__245569 = (function (){var G__245629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245630 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245629,G__245630) : tailrecursion.hoplon.span.call(null,G__245629,G__245630));
})();
var G__245570 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$56(G__245515,G__245516,G__245517,G__245518,G__245519,G__245520,G__245521,G__245522,G__245523,G__245524,G__245525,G__245526,G__245527,G__245528,G__245529,G__245530,G__245531,G__245532,G__245533,G__245534,G__245535,G__245536,G__245537,G__245538,G__245539,G__245540,G__245541,G__245542,G__245543,G__245544,G__245545,G__245546,G__245547,G__245548,G__245549,G__245550,G__245551,G__245552,G__245553,G__245554,G__245555,G__245556,G__245557,G__245558,G__245559,G__245560,G__245561,G__245562,G__245563,G__245564,G__245565,G__245566,G__245567,G__245568,G__245569,G__245570) : tailrecursion.hoplon.pre.call(null,G__245515,G__245516,G__245517,G__245518,G__245519,G__245520,G__245521,G__245522,G__245523,G__245524,G__245525,G__245526,G__245527,G__245528,G__245529,G__245530,G__245531,G__245532,G__245533,G__245534,G__245535,G__245536,G__245537,G__245538,G__245539,G__245540,G__245541,G__245542,G__245543,G__245544,G__245545,G__245546,G__245547,G__245548,G__245549,G__245550,G__245551,G__245552,G__245553,G__245554,G__245555,G__245556,G__245557,G__245558,G__245559,G__245560,G__245561,G__245562,G__245563,G__245564,G__245565,G__245566,G__245567,G__245568,G__245569,G__245570));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__245513,G__245514) : tailrecursion.hoplon.div.call(null,G__245513,G__245514));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__245512) : tailrecursion.hoplon.div.call(null,G__245512));
})(),(function (){var G__245631 = cljs.core.PersistentArrayMap.EMPTY;
var G__245632 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["and"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245631,G__245632) : tailrecursion.hoplon.markdown.para_node.call(null,G__245631,G__245632));
})(),(function (){var G__245727 = (function (){var G__245728 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__245729 = (function (){var G__245730 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__245731 = "(";
var G__245732 = (function (){var G__245774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__245775 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245774,G__245775) : tailrecursion.hoplon.span.call(null,G__245774,G__245775));
})();
var G__245733 = (function (){var G__245776 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245777 = "first-denomination";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245776,G__245777) : tailrecursion.hoplon.span.call(null,G__245776,G__245777));
})();
var G__245734 = " [";
var G__245735 = (function (){var G__245778 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245779 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245778,G__245779) : tailrecursion.hoplon.span.call(null,G__245778,G__245779));
})();
var G__245736 = "]\n  (";
var G__245737 = (function (){var G__245780 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245781 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245780,G__245781) : tailrecursion.hoplon.span.call(null,G__245780,G__245781));
})();
var G__245738 = "(";
var G__245739 = (function (){var G__245782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245783 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245782,G__245783) : tailrecursion.hoplon.span.call(null,G__245782,G__245783));
})();
var G__245740 = (function (){var G__245784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245785 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245784,G__245785) : tailrecursion.hoplon.span.call(null,G__245784,G__245785));
})();
var G__245741 = " ";
var G__245742 = (function (){var G__245786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245787 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245786,G__245787) : tailrecursion.hoplon.span.call(null,G__245786,G__245787));
})();
var G__245743 = ") ";
var G__245744 = (function (){var G__245788 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245789 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245788,G__245789) : tailrecursion.hoplon.span.call(null,G__245788,G__245789));
})();
var G__245745 = "\n        (";
var G__245746 = (function (){var G__245790 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245791 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245790,G__245791) : tailrecursion.hoplon.span.call(null,G__245790,G__245791));
})();
var G__245747 = (function (){var G__245792 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245793 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245792,G__245793) : tailrecursion.hoplon.span.call(null,G__245792,G__245793));
})();
var G__245748 = " ";
var G__245749 = (function (){var G__245794 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245795 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245794,G__245795) : tailrecursion.hoplon.span.call(null,G__245794,G__245795));
})();
var G__245750 = ") ";
var G__245751 = (function (){var G__245796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245797 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245796,G__245797) : tailrecursion.hoplon.span.call(null,G__245796,G__245797));
})();
var G__245752 = "\n        (";
var G__245753 = (function (){var G__245798 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245799 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245798,G__245799) : tailrecursion.hoplon.span.call(null,G__245798,G__245799));
})();
var G__245754 = (function (){var G__245800 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245801 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245800,G__245801) : tailrecursion.hoplon.span.call(null,G__245800,G__245801));
})();
var G__245755 = " ";
var G__245756 = (function (){var G__245802 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245803 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245802,G__245803) : tailrecursion.hoplon.span.call(null,G__245802,G__245803));
})();
var G__245757 = ") ";
var G__245758 = (function (){var G__245804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245805 = "10";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245804,G__245805) : tailrecursion.hoplon.span.call(null,G__245804,G__245805));
})();
var G__245759 = "\n        (";
var G__245760 = (function (){var G__245806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245807 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245806,G__245807) : tailrecursion.hoplon.span.call(null,G__245806,G__245807));
})();
var G__245761 = (function (){var G__245808 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245809 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245808,G__245809) : tailrecursion.hoplon.span.call(null,G__245808,G__245809));
})();
var G__245762 = " ";
var G__245763 = (function (){var G__245810 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245811 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245810,G__245811) : tailrecursion.hoplon.span.call(null,G__245810,G__245811));
})();
var G__245764 = ") ";
var G__245765 = (function (){var G__245812 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245813 = "25";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245812,G__245813) : tailrecursion.hoplon.span.call(null,G__245812,G__245813));
})();
var G__245766 = "\n        (";
var G__245767 = (function (){var G__245814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__245815 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245814,G__245815) : tailrecursion.hoplon.span.call(null,G__245814,G__245815));
})();
var G__245768 = (function (){var G__245816 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__245817 = "kinds-of-coins";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245816,G__245817) : tailrecursion.hoplon.span.call(null,G__245816,G__245817));
})();
var G__245769 = " ";
var G__245770 = (function (){var G__245818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245819 = "5";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245818,G__245819) : tailrecursion.hoplon.span.call(null,G__245818,G__245819));
})();
var G__245771 = ") ";
var G__245772 = (function (){var G__245820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245821 = "50";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245820,G__245821) : tailrecursion.hoplon.span.call(null,G__245820,G__245821));
})();
var G__245773 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$44(G__245730,G__245731,G__245732,G__245733,G__245734,G__245735,G__245736,G__245737,G__245738,G__245739,G__245740,G__245741,G__245742,G__245743,G__245744,G__245745,G__245746,G__245747,G__245748,G__245749,G__245750,G__245751,G__245752,G__245753,G__245754,G__245755,G__245756,G__245757,G__245758,G__245759,G__245760,G__245761,G__245762,G__245763,G__245764,G__245765,G__245766,G__245767,G__245768,G__245769,G__245770,G__245771,G__245772,G__245773) : tailrecursion.hoplon.pre.call(null,G__245730,G__245731,G__245732,G__245733,G__245734,G__245735,G__245736,G__245737,G__245738,G__245739,G__245740,G__245741,G__245742,G__245743,G__245744,G__245745,G__245746,G__245747,G__245748,G__245749,G__245750,G__245751,G__245752,G__245753,G__245754,G__245755,G__245756,G__245757,G__245758,G__245759,G__245760,G__245761,G__245762,G__245763,G__245764,G__245765,G__245766,G__245767,G__245768,G__245769,G__245770,G__245771,G__245772,G__245773));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__245728,G__245729) : tailrecursion.hoplon.div.call(null,G__245728,G__245729));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__245727) : tailrecursion.hoplon.div.call(null,G__245727));
})(),(function (){var G__245822 = cljs.core.PersistentArrayMap.EMPTY;
var G__245823 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245824 = cljs.core.PersistentArrayMap.EMPTY;
var G__245825 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note that I made the stipulation that we",(function (){var G__245826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__245827 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245826,G__245827) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245826,G__245827));
})(),"ve already defined the two next things. I said this because the REPL we",(function (){var G__245828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__245829 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245828,G__245829) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245828,G__245829));
})(),"re using for this book will return an error if you use somthing that has not been previously defined, so if we try to use ",(function (){var G__245830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__245831 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245830,G__245831) : tailrecursion.hoplon.markdown.code_node.call(null,G__245830,G__245831));
})()," in a function definition before we",(function (){var G__245832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__245833 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245832,G__245833) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245832,G__245833));
})(),"ve defined ",(function (){var G__245834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__245835 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245834,G__245835) : tailrecursion.hoplon.markdown.code_node.call(null,G__245834,G__245835));
})(),", the program won",(function (){var G__245836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__245837 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245836,G__245837) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245836,G__245837));
})(),"t compile. I introduced the functions in the order I did for two reasons: 1) it",(function (){var G__245838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__245839 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__245838,G__245839) : tailrecursion.hoplon.markdown.simple_node.call(null,G__245838,G__245839));
})(),"s the same order that is used in the original SICP, and 2) it makes more sense pedagogically."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245824,G__245825) : tailrecursion.hoplon.markdown.para_node.call(null,G__245824,G__245825));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__245822,G__245823) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__245822,G__245823));
})(),(function (){var G__245840 = cljs.core.PersistentArrayMap.EMPTY;
var G__245841 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(The ",(function (){var G__245842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"first-denomination"], null);
var G__245843 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245842,G__245843) : tailrecursion.hoplon.markdown.code_node.call(null,G__245842,G__245843));
})()," procedure takes as input the number of kinds of coins available and returns the denomination of the first kind. Here we are thinking of the coins as arranged in order from largest to smallest, but any order would do as well.) We can now answer our original question about changing a dollar:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245840,G__245841) : tailrecursion.hoplon.markdown.para_node.call(null,G__245840,G__245841));
})(),(function (){var G__245860 = (function (){var G__245861 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__245862 = (function (){var G__245863 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__245864 = "(";
var G__245865 = (function (){var G__245871 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__245872 = "count-change";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245871,G__245872) : tailrecursion.hoplon.span.call(null,G__245871,G__245872));
})();
var G__245866 = " ";
var G__245867 = (function (){var G__245873 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245874 = "100";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245873,G__245874) : tailrecursion.hoplon.span.call(null,G__245873,G__245874));
})();
var G__245868 = ")\n";
var G__245869 = (function (){var G__245875 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__245876 = "292";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__245875,G__245876) : tailrecursion.hoplon.span.call(null,G__245875,G__245876));
})();
var G__245870 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$8(G__245863,G__245864,G__245865,G__245866,G__245867,G__245868,G__245869,G__245870) : tailrecursion.hoplon.pre.call(null,G__245863,G__245864,G__245865,G__245866,G__245867,G__245868,G__245869,G__245870));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__245861,G__245862) : tailrecursion.hoplon.div.call(null,G__245861,G__245862));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__245860) : tailrecursion.hoplon.div.call(null,G__245860));
})(),(function (){var G__245877 = cljs.core.PersistentArrayMap.EMPTY;
var G__245878 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245879 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__245880 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245879,G__245880) : tailrecursion.hoplon.markdown.code_node.call(null,G__245879,G__245880));
})()," generates a tree-recursive process with redundancies similar to those in our first implementation of ",(function (){var G__245881 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib"], null);
var G__245882 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245881,G__245882) : tailrecursion.hoplon.markdown.code_node.call(null,G__245881,G__245882));
})(),". (It will take quite a wile for that 292 to be computed.) On the other hand, it is not obvious hwo to design a better algorithm for computing the result, and we leave this problem as a challenge. The observation that a tree-recursive process may be highly inefficient but often easy to specify and understand has led people to propose that one could get the best of both worlds by designing a ",(function (){var G__245883 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__245884 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["smart compiler"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__245883,G__245884) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__245883,G__245884));
})()," that could transform tree-recusive procedures into more efficient procedures that compute the same result.",(function (){var G__245885 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__245886 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One approach to coping with redundant computations is to arrange matters so that we automatically construct a table of values as they are computed. Each time we are asked to apply the procedure to some argument, we first look to see if the value is already stored in the table, in which case we avoid performing the redundant computation. This strategy, known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["tabulation"], null)], 0))," or ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["memoization"], null)], 0)),", can be implemented in a straightforward way. Tabulation can sometimes be used to transform processes that require an exponential number of steps (such as ",(function (){var G__245887 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__245888 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__245887,G__245888) : tailrecursion.hoplon.markdown.code_node.call(null,G__245887,G__245888));
})(),") into processes whose space and time requirements grow linearly with the input. See exercise 3.27."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__245885,G__245886) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__245885,G__245886));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245877,G__245878) : tailrecursion.hoplon.markdown.para_node.call(null,G__245877,G__245878));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245290;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245289;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245288;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245287;
}})()], 0));
var G__238154 = "";
var G__238155 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"11-13"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(11)], null),(function (){var _STAR_references_STAR_245889 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245890 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_245891 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245892 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245893 = cljs.core.PersistentArrayMap.EMPTY;
var G__245894 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["A function \\(f\\) is defined by the rule that \\(f(n)=f(n-1)+2f(n-2)+3f(n-3)\\) if \\(n\\geq3\\). Write a procedure that computes \\(f\\) by means of a recursive process. Write a procedure that computes \\(f\\) by a means of an iterative process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245893,G__245894) : tailrecursion.hoplon.markdown.para_node.call(null,G__245893,G__245894));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245892;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245891;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245890;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245889;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_245895 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245896 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_245897 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_245898 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__245899 = cljs.core.PersistentArrayMap.EMPTY;
var G__245900 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Recursive:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__245899,G__245900) : tailrecursion.hoplon.markdown.para_node.call(null,G__245899,G__245900));
})(),(function (){var G__245998 = (function (){var G__245999 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__246000 = (function (){var G__246001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__246002 = "(";
var G__246003 = (function (){var G__246046 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__246047 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246046,G__246047) : tailrecursion.hoplon.span.call(null,G__246046,G__246047));
})();
var G__246004 = (function (){var G__246048 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246049 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246048,G__246049) : tailrecursion.hoplon.span.call(null,G__246048,G__246049));
})();
var G__246005 = " [";
var G__246006 = (function (){var G__246050 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246051 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246050,G__246051) : tailrecursion.hoplon.span.call(null,G__246050,G__246051));
})();
var G__246007 = "]\n  (";
var G__246008 = (function (){var G__246052 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__246053 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246052,G__246053) : tailrecursion.hoplon.span.call(null,G__246052,G__246053));
})();
var G__246009 = "(";
var G__246010 = (function (){var G__246054 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246055 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246054,G__246055) : tailrecursion.hoplon.span.call(null,G__246054,G__246055));
})();
var G__246011 = (function (){var G__246056 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246057 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246056,G__246057) : tailrecursion.hoplon.span.call(null,G__246056,G__246057));
})();
var G__246012 = " ";
var G__246013 = (function (){var G__246058 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246059 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246058,G__246059) : tailrecursion.hoplon.span.call(null,G__246058,G__246059));
})();
var G__246014 = ")\n      ";
var G__246015 = (function (){var G__246060 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246061 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246060,G__246061) : tailrecursion.hoplon.span.call(null,G__246060,G__246061));
})();
var G__246016 = "\n      (";
var G__246017 = (function (){var G__246062 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246063 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246062,G__246063) : tailrecursion.hoplon.span.call(null,G__246062,G__246063));
})();
var G__246018 = "(";
var G__246019 = (function (){var G__246064 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__246065 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246064,G__246065) : tailrecursion.hoplon.span.call(null,G__246064,G__246065));
})();
var G__246020 = " (";
var G__246021 = (function (){var G__246066 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246067 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246066,G__246067) : tailrecursion.hoplon.span.call(null,G__246066,G__246067));
})();
var G__246022 = (function (){var G__246068 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246069 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246068,G__246069) : tailrecursion.hoplon.span.call(null,G__246068,G__246069));
})();
var G__246023 = " ";
var G__246024 = (function (){var G__246070 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246071 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246070,G__246071) : tailrecursion.hoplon.span.call(null,G__246070,G__246071));
})();
var G__246025 = ")) \n         (";
var G__246026 = (function (){var G__246072 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246073 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246072,G__246073) : tailrecursion.hoplon.span.call(null,G__246072,G__246073));
})();
var G__246027 = (function (){var G__246074 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246075 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246074,G__246075) : tailrecursion.hoplon.span.call(null,G__246074,G__246075));
})();
var G__246028 = " (";
var G__246029 = (function (){var G__246076 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__246077 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246076,G__246077) : tailrecursion.hoplon.span.call(null,G__246076,G__246077));
})();
var G__246030 = " (";
var G__246031 = (function (){var G__246078 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246079 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246078,G__246079) : tailrecursion.hoplon.span.call(null,G__246078,G__246079));
})();
var G__246032 = (function (){var G__246080 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246081 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246080,G__246081) : tailrecursion.hoplon.span.call(null,G__246080,G__246081));
})();
var G__246033 = " ";
var G__246034 = (function (){var G__246082 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246083 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246082,G__246083) : tailrecursion.hoplon.span.call(null,G__246082,G__246083));
})();
var G__246035 = "))) \n         (";
var G__246036 = (function (){var G__246084 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246085 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246084,G__246085) : tailrecursion.hoplon.span.call(null,G__246084,G__246085));
})();
var G__246037 = (function (){var G__246086 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246087 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246086,G__246087) : tailrecursion.hoplon.span.call(null,G__246086,G__246087));
})();
var G__246038 = " (";
var G__246039 = (function (){var G__246088 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__246089 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246088,G__246089) : tailrecursion.hoplon.span.call(null,G__246088,G__246089));
})();
var G__246040 = " (";
var G__246041 = (function (){var G__246090 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246091 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246090,G__246091) : tailrecursion.hoplon.span.call(null,G__246090,G__246091));
})();
var G__246042 = (function (){var G__246092 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246093 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246092,G__246093) : tailrecursion.hoplon.span.call(null,G__246092,G__246093));
})();
var G__246043 = " ";
var G__246044 = (function (){var G__246094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246095 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246094,G__246095) : tailrecursion.hoplon.span.call(null,G__246094,G__246095));
})();
var G__246045 = "))))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$45(G__246001,G__246002,G__246003,G__246004,G__246005,G__246006,G__246007,G__246008,G__246009,G__246010,G__246011,G__246012,G__246013,G__246014,G__246015,G__246016,G__246017,G__246018,G__246019,G__246020,G__246021,G__246022,G__246023,G__246024,G__246025,G__246026,G__246027,G__246028,G__246029,G__246030,G__246031,G__246032,G__246033,G__246034,G__246035,G__246036,G__246037,G__246038,G__246039,G__246040,G__246041,G__246042,G__246043,G__246044,G__246045) : tailrecursion.hoplon.pre.call(null,G__246001,G__246002,G__246003,G__246004,G__246005,G__246006,G__246007,G__246008,G__246009,G__246010,G__246011,G__246012,G__246013,G__246014,G__246015,G__246016,G__246017,G__246018,G__246019,G__246020,G__246021,G__246022,G__246023,G__246024,G__246025,G__246026,G__246027,G__246028,G__246029,G__246030,G__246031,G__246032,G__246033,G__246034,G__246035,G__246036,G__246037,G__246038,G__246039,G__246040,G__246041,G__246042,G__246043,G__246044,G__246045));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__245999,G__246000) : tailrecursion.hoplon.div.call(null,G__245999,G__246000));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__245998) : tailrecursion.hoplon.div.call(null,G__245998));
})(),(function (){var G__246096 = cljs.core.PersistentArrayMap.EMPTY;
var G__246097 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Iterative:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246096,G__246097) : tailrecursion.hoplon.markdown.para_node.call(null,G__246096,G__246097));
})(),(function (){var G__246242 = (function (){var G__246243 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__246244 = (function (){var G__246245 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__246246 = "(";
var G__246247 = (function (){var G__246313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__246314 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246313,G__246314) : tailrecursion.hoplon.span.call(null,G__246313,G__246314));
})();
var G__246248 = (function (){var G__246315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246316 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246315,G__246316) : tailrecursion.hoplon.span.call(null,G__246315,G__246316));
})();
var G__246249 = " [";
var G__246250 = (function (){var G__246317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246318 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246317,G__246318) : tailrecursion.hoplon.span.call(null,G__246317,G__246318));
})();
var G__246251 = " ";
var G__246252 = (function (){var G__246319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246320 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246319,G__246320) : tailrecursion.hoplon.span.call(null,G__246319,G__246320));
})();
var G__246253 = " ";
var G__246254 = (function (){var G__246321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246322 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246321,G__246322) : tailrecursion.hoplon.span.call(null,G__246321,G__246322));
})();
var G__246255 = " ";
var G__246256 = (function (){var G__246323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246324 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246323,G__246324) : tailrecursion.hoplon.span.call(null,G__246323,G__246324));
})();
var G__246257 = "]\n  (";
var G__246258 = (function (){var G__246325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__246326 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246325,G__246326) : tailrecursion.hoplon.span.call(null,G__246325,G__246326));
})();
var G__246259 = "(";
var G__246260 = (function (){var G__246327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246328 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246327,G__246328) : tailrecursion.hoplon.span.call(null,G__246327,G__246328));
})();
var G__246261 = (function (){var G__246329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246330 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246329,G__246330) : tailrecursion.hoplon.span.call(null,G__246329,G__246330));
})();
var G__246262 = " ";
var G__246263 = (function (){var G__246331 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246332 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246331,G__246332) : tailrecursion.hoplon.span.call(null,G__246331,G__246332));
})();
var G__246264 = ")\n      ";
var G__246265 = (function (){var G__246333 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246334 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246333,G__246334) : tailrecursion.hoplon.span.call(null,G__246333,G__246334));
})();
var G__246266 = "\n      (";
var G__246267 = (function (){var G__246335 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__246336 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246335,G__246336) : tailrecursion.hoplon.span.call(null,G__246335,G__246336));
})();
var G__246268 = " (";
var G__246269 = (function (){var G__246337 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246338 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246337,G__246338) : tailrecursion.hoplon.span.call(null,G__246337,G__246338));
})();
var G__246270 = (function (){var G__246339 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246340 = "i";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246339,G__246340) : tailrecursion.hoplon.span.call(null,G__246339,G__246340));
})();
var G__246271 = ") (";
var G__246272 = (function (){var G__246341 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246342 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246341,G__246342) : tailrecursion.hoplon.span.call(null,G__246341,G__246342));
})();
var G__246273 = (function (){var G__246343 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246344 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246343,G__246344) : tailrecursion.hoplon.span.call(null,G__246343,G__246344));
})();
var G__246274 = " (";
var G__246275 = (function (){var G__246345 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246346 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246345,G__246346) : tailrecursion.hoplon.span.call(null,G__246345,G__246346));
})();
var G__246276 = (function (){var G__246347 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246348 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246347,G__246348) : tailrecursion.hoplon.span.call(null,G__246347,G__246348));
})();
var G__246277 = " ";
var G__246278 = (function (){var G__246349 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246350 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246349,G__246350) : tailrecursion.hoplon.span.call(null,G__246349,G__246350));
})();
var G__246279 = ") (";
var G__246280 = (function (){var G__246351 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246352 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246351,G__246352) : tailrecursion.hoplon.span.call(null,G__246351,G__246352));
})();
var G__246281 = (function (){var G__246353 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246354 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246353,G__246354) : tailrecursion.hoplon.span.call(null,G__246353,G__246354));
})();
var G__246282 = " ";
var G__246283 = (function (){var G__246355 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246356 = "c";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246355,G__246356) : tailrecursion.hoplon.span.call(null,G__246355,G__246356));
})();
var G__246284 = ")) ";
var G__246285 = (function (){var G__246357 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246358 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246357,G__246358) : tailrecursion.hoplon.span.call(null,G__246357,G__246358));
})();
var G__246286 = " ";
var G__246287 = (function (){var G__246359 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246360 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246359,G__246360) : tailrecursion.hoplon.span.call(null,G__246359,G__246360));
})();
var G__246288 = ")))\n(";
var G__246289 = (function (){var G__246361 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__246362 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246361,G__246362) : tailrecursion.hoplon.span.call(null,G__246361,G__246362));
})();
var G__246290 = (function (){var G__246363 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246364 = "f";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246363,G__246364) : tailrecursion.hoplon.span.call(null,G__246363,G__246364));
})();
var G__246291 = " [";
var G__246292 = (function (){var G__246365 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246366 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246365,G__246366) : tailrecursion.hoplon.span.call(null,G__246365,G__246366));
})();
var G__246293 = "]\n  (";
var G__246294 = (function (){var G__246367 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__246368 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246367,G__246368) : tailrecursion.hoplon.span.call(null,G__246367,G__246368));
})();
var G__246295 = "(";
var G__246296 = (function (){var G__246369 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246370 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246369,G__246370) : tailrecursion.hoplon.span.call(null,G__246369,G__246370));
})();
var G__246297 = (function (){var G__246371 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246372 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246371,G__246372) : tailrecursion.hoplon.span.call(null,G__246371,G__246372));
})();
var G__246298 = " ";
var G__246299 = (function (){var G__246373 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246374 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246373,G__246374) : tailrecursion.hoplon.span.call(null,G__246373,G__246374));
})();
var G__246300 = ")\n      ";
var G__246301 = (function (){var G__246375 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246376 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246375,G__246376) : tailrecursion.hoplon.span.call(null,G__246375,G__246376));
})();
var G__246302 = "\n      (";
var G__246303 = (function (){var G__246377 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__246378 = "f-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246377,G__246378) : tailrecursion.hoplon.span.call(null,G__246377,G__246378));
})();
var G__246304 = " ";
var G__246305 = (function (){var G__246379 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246380 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246379,G__246380) : tailrecursion.hoplon.span.call(null,G__246379,G__246380));
})();
var G__246306 = " ";
var G__246307 = (function (){var G__246381 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246382 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246381,G__246382) : tailrecursion.hoplon.span.call(null,G__246381,G__246382));
})();
var G__246308 = " ";
var G__246309 = (function (){var G__246383 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246384 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246383,G__246384) : tailrecursion.hoplon.span.call(null,G__246383,G__246384));
})();
var G__246310 = " ";
var G__246311 = (function (){var G__246385 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246386 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246385,G__246386) : tailrecursion.hoplon.span.call(null,G__246385,G__246386));
})();
var G__246312 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$68(G__246245,G__246246,G__246247,G__246248,G__246249,G__246250,G__246251,G__246252,G__246253,G__246254,G__246255,G__246256,G__246257,G__246258,G__246259,G__246260,G__246261,G__246262,G__246263,G__246264,G__246265,G__246266,G__246267,G__246268,G__246269,G__246270,G__246271,G__246272,G__246273,G__246274,G__246275,G__246276,G__246277,G__246278,G__246279,G__246280,G__246281,G__246282,G__246283,G__246284,G__246285,G__246286,G__246287,G__246288,G__246289,G__246290,G__246291,G__246292,G__246293,G__246294,G__246295,G__246296,G__246297,G__246298,G__246299,G__246300,G__246301,G__246302,G__246303,G__246304,G__246305,G__246306,G__246307,G__246308,G__246309,G__246310,G__246311,G__246312) : tailrecursion.hoplon.pre.call(null,G__246245,G__246246,G__246247,G__246248,G__246249,G__246250,G__246251,G__246252,G__246253,G__246254,G__246255,G__246256,G__246257,G__246258,G__246259,G__246260,G__246261,G__246262,G__246263,G__246264,G__246265,G__246266,G__246267,G__246268,G__246269,G__246270,G__246271,G__246272,G__246273,G__246274,G__246275,G__246276,G__246277,G__246278,G__246279,G__246280,G__246281,G__246282,G__246283,G__246284,G__246285,G__246286,G__246287,G__246288,G__246289,G__246290,G__246291,G__246292,G__246293,G__246294,G__246295,G__246296,G__246297,G__246298,G__246299,G__246300,G__246301,G__246302,G__246303,G__246304,G__246305,G__246306,G__246307,G__246308,G__246309,G__246310,G__246311,G__246312));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__246243,G__246244) : tailrecursion.hoplon.div.call(null,G__246243,G__246244));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__246242) : tailrecursion.hoplon.div.call(null,G__246242));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245898;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245897;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_245896;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_245895;
}})()], 0))], 0)),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(12)], null),(function (){var _STAR_references_STAR_246387 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246388 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246389 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246390 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246391 = cljs.core.PersistentArrayMap.EMPTY;
var G__246392 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following patter is called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pascal",(function (){var G__246393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__246394 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__246393,G__246394) : tailrecursion.hoplon.markdown.simple_node.call(null,G__246393,G__246394));
})(),"s Triangle"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246391,G__246392) : tailrecursion.hoplon.markdown.para_node.call(null,G__246391,G__246392));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246390;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246389;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246388;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246387;
}})(),book.sicp.book_data.image.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$src,"/img/sicp/exercise1_12.gif"], null)], 0)),(function (){var _STAR_references_STAR_246395 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246396 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246397 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246398 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246399 = cljs.core.PersistentArrayMap.EMPTY;
var G__246400 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The numbers at the edge of the triangle are all 1, and each number inside the triangle is the sum of the two numbers above it.",(function (){var G__246401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__246402 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The elements of Pascal",(function (){var G__246403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__246404 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__246403,G__246404) : tailrecursion.hoplon.markdown.simple_node.call(null,G__246403,G__246404));
})(),"s triangle are called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["binomial coefficients"], null)], 0)),", because the \\(n\\)th row consists of the coefficients of the terms in the expansion of \\((x + y)^n\\). This pattern for computing the coefficients appeared in Blaise Pascal",(function (){var G__246405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__246406 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__246405,G__246406) : tailrecursion.hoplon.markdown.simple_node.call(null,G__246405,G__246406));
})(),"s 1653 seminal work on probability theory, ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Trait\u00E9 du triangle arithm\u00E9tique"], null)], 0)),". According to Knuth (1973), the same pattern appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Szu-yuen Y\u00FC-chien"], null)], 0))," (",(function (){var G__246407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__246408 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Precious Mirror of the Four Elements"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__246407,G__246408) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__246407,G__246408));
})(),"), published by the Chinese mathematician Chu Shih-chieh in 1303, in the works of the twelfth-century Persian poet and mathematician Omar Khayyam, and in the works of the twelfth-century Hindu mathematician Bh\u00E1scara \u00C1ch\u00E1rya."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__246401,G__246402) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__246401,G__246402));
})()," Write a procedure that computes elements of Pascal",(function (){var G__246409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__246410 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__246409,G__246410) : tailrecursion.hoplon.markdown.simple_node.call(null,G__246409,G__246410));
})(),"s Triangle by means of a recursive process."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246399,G__246400) : tailrecursion.hoplon.markdown.para_node.call(null,G__246399,G__246400));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246398;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246397;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246396;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246395;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_246411 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246412 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246413 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246414 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246562 = (function (){var G__246563 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__246564 = (function (){var G__246565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__246566 = "(";
var G__246567 = (function (){var G__246634 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__246635 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246634,G__246635) : tailrecursion.hoplon.span.call(null,G__246634,G__246635));
})();
var G__246568 = (function (){var G__246636 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246637 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246636,G__246637) : tailrecursion.hoplon.span.call(null,G__246636,G__246637));
})();
var G__246569 = " [";
var G__246570 = (function (){var G__246638 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246639 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246638,G__246639) : tailrecursion.hoplon.span.call(null,G__246638,G__246639));
})();
var G__246571 = " ";
var G__246572 = (function (){var G__246640 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246641 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246640,G__246641) : tailrecursion.hoplon.span.call(null,G__246640,G__246641));
})();
var G__246573 = "]\n  (";
var G__246574 = (function (){var G__246642 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246643 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246642,G__246643) : tailrecursion.hoplon.span.call(null,G__246642,G__246643));
})();
var G__246575 = "(";
var G__246576 = (function (){var G__246644 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246645 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246644,G__246645) : tailrecursion.hoplon.span.call(null,G__246644,G__246645));
})();
var G__246577 = "(";
var G__246578 = (function (){var G__246646 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246647 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246646,G__246647) : tailrecursion.hoplon.span.call(null,G__246646,G__246647));
})();
var G__246579 = (function (){var G__246648 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246649 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246648,G__246649) : tailrecursion.hoplon.span.call(null,G__246648,G__246649));
})();
var G__246580 = " ";
var G__246581 = (function (){var G__246650 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246651 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246650,G__246651) : tailrecursion.hoplon.span.call(null,G__246650,G__246651));
})();
var G__246582 = ") (";
var G__246583 = (function (){var G__246652 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246653 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246652,G__246653) : tailrecursion.hoplon.span.call(null,G__246652,G__246653));
})();
var G__246584 = (function (){var G__246654 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246655 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246654,G__246655) : tailrecursion.hoplon.span.call(null,G__246654,G__246655));
})();
var G__246585 = " ";
var G__246586 = (function (){var G__246656 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246657 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246656,G__246657) : tailrecursion.hoplon.span.call(null,G__246656,G__246657));
})();
var G__246587 = ") (";
var G__246588 = (function (){var G__246658 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246659 = "< ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246658,G__246659) : tailrecursion.hoplon.span.call(null,G__246658,G__246659));
})();
var G__246589 = (function (){var G__246660 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246661 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246660,G__246661) : tailrecursion.hoplon.span.call(null,G__246660,G__246661));
})();
var G__246590 = " ";
var G__246591 = (function (){var G__246662 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246663 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246662,G__246663) : tailrecursion.hoplon.span.call(null,G__246662,G__246663));
})();
var G__246592 = ")) ";
var G__246593 = (function (){var G__246664 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246665 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246664,G__246665) : tailrecursion.hoplon.span.call(null,G__246664,G__246665));
})();
var G__246594 = "\n        (";
var G__246595 = (function (){var G__246666 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246667 = "or ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246666,G__246667) : tailrecursion.hoplon.span.call(null,G__246666,G__246667));
})();
var G__246596 = "(";
var G__246597 = (function (){var G__246668 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246669 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246668,G__246669) : tailrecursion.hoplon.span.call(null,G__246668,G__246669));
})();
var G__246598 = (function (){var G__246670 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246671 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246670,G__246671) : tailrecursion.hoplon.span.call(null,G__246670,G__246671));
})();
var G__246599 = " ";
var G__246600 = (function (){var G__246672 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246673 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246672,G__246673) : tailrecursion.hoplon.span.call(null,G__246672,G__246673));
})();
var G__246601 = ") (";
var G__246602 = (function (){var G__246674 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246675 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246674,G__246675) : tailrecursion.hoplon.span.call(null,G__246674,G__246675));
})();
var G__246603 = (function (){var G__246676 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246677 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246676,G__246677) : tailrecursion.hoplon.span.call(null,G__246676,G__246677));
})();
var G__246604 = " ";
var G__246605 = (function (){var G__246678 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246679 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246678,G__246679) : tailrecursion.hoplon.span.call(null,G__246678,G__246679));
})();
var G__246606 = ")) ";
var G__246607 = (function (){var G__246680 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246681 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246680,G__246681) : tailrecursion.hoplon.span.call(null,G__246680,G__246681));
})();
var G__246608 = "\n        ";
var G__246609 = (function (){var G__246682 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246683 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246682,G__246683) : tailrecursion.hoplon.span.call(null,G__246682,G__246683));
})();
var G__246610 = " (";
var G__246611 = (function (){var G__246684 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246685 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246684,G__246685) : tailrecursion.hoplon.span.call(null,G__246684,G__246685));
})();
var G__246612 = "(";
var G__246613 = (function (){var G__246686 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__246687 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246686,G__246687) : tailrecursion.hoplon.span.call(null,G__246686,G__246687));
})();
var G__246614 = " (";
var G__246615 = (function (){var G__246688 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246689 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246688,G__246689) : tailrecursion.hoplon.span.call(null,G__246688,G__246689));
})();
var G__246616 = (function (){var G__246690 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246691 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246690,G__246691) : tailrecursion.hoplon.span.call(null,G__246690,G__246691));
})();
var G__246617 = " ";
var G__246618 = (function (){var G__246692 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246693 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246692,G__246693) : tailrecursion.hoplon.span.call(null,G__246692,G__246693));
})();
var G__246619 = ") (";
var G__246620 = (function (){var G__246694 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246695 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246694,G__246695) : tailrecursion.hoplon.span.call(null,G__246694,G__246695));
})();
var G__246621 = (function (){var G__246696 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246697 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246696,G__246697) : tailrecursion.hoplon.span.call(null,G__246696,G__246697));
})();
var G__246622 = " ";
var G__246623 = (function (){var G__246698 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246699 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246698,G__246699) : tailrecursion.hoplon.span.call(null,G__246698,G__246699));
})();
var G__246624 = "))\n                 (";
var G__246625 = (function (){var G__246700 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__246701 = "pascal";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246700,G__246701) : tailrecursion.hoplon.span.call(null,G__246700,G__246701));
})();
var G__246626 = " (";
var G__246627 = (function (){var G__246702 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__246703 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246702,G__246703) : tailrecursion.hoplon.span.call(null,G__246702,G__246703));
})();
var G__246628 = (function (){var G__246704 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246705 = "row";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246704,G__246705) : tailrecursion.hoplon.span.call(null,G__246704,G__246705));
})();
var G__246629 = " ";
var G__246630 = (function (){var G__246706 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__246707 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246706,G__246707) : tailrecursion.hoplon.span.call(null,G__246706,G__246707));
})();
var G__246631 = ") ";
var G__246632 = (function (){var G__246708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__246709 = "column";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__246708,G__246709) : tailrecursion.hoplon.span.call(null,G__246708,G__246709));
})();
var G__246633 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__246565,G__246566,G__246567,G__246568,G__246569,G__246570,G__246571,G__246572,G__246573,G__246574,G__246575,G__246576,G__246577,G__246578,G__246579,G__246580,G__246581,G__246582,G__246583,G__246584,G__246585,G__246586,G__246587,G__246588,G__246589,G__246590,G__246591,G__246592,G__246593,G__246594,G__246595,G__246596,G__246597,G__246598,G__246599,G__246600,G__246601,G__246602,G__246603,G__246604,G__246605,G__246606,G__246607,G__246608,G__246609,G__246610,G__246611,G__246612,G__246613,G__246614,G__246615,G__246616,G__246617,G__246618,G__246619,G__246620,G__246621,G__246622,G__246623,G__246624,G__246625,G__246626,G__246627,G__246628,G__246629,G__246630,G__246631,G__246632,G__246633) : tailrecursion.hoplon.pre.call(null,G__246565,G__246566,G__246567,G__246568,G__246569,G__246570,G__246571,G__246572,G__246573,G__246574,G__246575,G__246576,G__246577,G__246578,G__246579,G__246580,G__246581,G__246582,G__246583,G__246584,G__246585,G__246586,G__246587,G__246588,G__246589,G__246590,G__246591,G__246592,G__246593,G__246594,G__246595,G__246596,G__246597,G__246598,G__246599,G__246600,G__246601,G__246602,G__246603,G__246604,G__246605,G__246606,G__246607,G__246608,G__246609,G__246610,G__246611,G__246612,G__246613,G__246614,G__246615,G__246616,G__246617,G__246618,G__246619,G__246620,G__246621,G__246622,G__246623,G__246624,G__246625,G__246626,G__246627,G__246628,G__246629,G__246630,G__246631,G__246632,G__246633));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__246563,G__246564) : tailrecursion.hoplon.div.call(null,G__246563,G__246564));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__246562) : tailrecursion.hoplon.div.call(null,G__246562));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246414;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246413;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246412;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246411;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(13)], null),(function (){var _STAR_references_STAR_246710 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246711 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246712 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246713 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246714 = cljs.core.PersistentArrayMap.EMPTY;
var G__246715 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Prove that \\(Fib(n)\\) is the closest integer to \\(\\phi^n/\\sqrt5\\), where \\(\\phi=\\left(1+\\sqrt5\\right)/2\\). Hint: let \\(\\psi=\\left(1-\\sqrt5\\right)/2\\) Use induction and the definition of the Fibonacci numbers (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),") to prove that \\(Fib(n)=\\left(\\phi^n-\\psi^n\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246714,G__246715) : tailrecursion.hoplon.markdown.para_node.call(null,G__246714,G__246715));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246713;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246712;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246711;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246710;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_246716 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246717 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246718 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246719 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246720 = cljs.core.PersistentArrayMap.EMPTY;
var G__246721 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__246722 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__246723 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__246722,G__246723) : tailrecursion.hoplon.markdown.simple_node.call(null,G__246722,G__246723));
})(),"s pick a natural number \\(n\\) and state our inductive hypothesis:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246720,G__246721) : tailrecursion.hoplon.markdown.para_node.call(null,G__246720,G__246721));
})(),(function (){var G__246724 = cljs.core.PersistentArrayMap.EMPTY;
var G__246725 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Assume that for any \\(k< n\\), \\(Fib(k)=\\left(\\phi^k-\\psi^k\\right)/\\sqrt5\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246724,G__246725) : tailrecursion.hoplon.markdown.para_node.call(null,G__246724,G__246725));
})(),(function (){var G__246726 = cljs.core.PersistentArrayMap.EMPTY;
var G__246727 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 1: \\(n=0\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246726,G__246727) : tailrecursion.hoplon.markdown.para_node.call(null,G__246726,G__246727));
})(),(function (){var G__246728 = cljs.core.PersistentArrayMap.EMPTY;
var G__246729 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then note: \\( Fib(0)= 0 =\\frac{1-1}{\\sqrt5}=\\frac{\\phi^0-\\psi^0}{\\sqrt5}\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246728,G__246729) : tailrecursion.hoplon.markdown.para_node.call(null,G__246728,G__246729));
})(),(function (){var G__246730 = cljs.core.PersistentArrayMap.EMPTY;
var G__246731 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case 2: \\( n = 1\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246730,G__246731) : tailrecursion.hoplon.markdown.para_node.call(null,G__246730,G__246731));
})(),(function (){var G__246732 = cljs.core.PersistentArrayMap.EMPTY;
var G__246733 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then \\(\\frac{\\phi^1-\\psi^1}{\\sqrt5} =\\frac{\\left(\\frac{1+\\sqrt5}{2}\\right)^1-\\left(\\frac{1-\\sqrt5}{2}\\right)^1}{\\sqrt5} =\\frac{\\sqrt5}{\\sqrt5}= 1= Fib(1)\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246732,G__246733) : tailrecursion.hoplon.markdown.para_node.call(null,G__246732,G__246733));
})(),(function (){var G__246734 = cljs.core.PersistentArrayMap.EMPTY;
var G__246735 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Our last case is if \\(n > 1\\):"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246734,G__246735) : tailrecursion.hoplon.markdown.para_node.call(null,G__246734,G__246735));
})(),(function (){var G__246736 = cljs.core.PersistentArrayMap.EMPTY;
var G__246737 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Then, $$\\frac{\\phi^n-\\psi^n}{\\sqrt5} =\\frac{\\phi^{n-2}\\phi^2-\\psi^{n-2}\\psi^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246736,G__246737) : tailrecursion.hoplon.markdown.para_node.call(null,G__246736,G__246737));
})(),(function (){var G__246738 = cljs.core.PersistentArrayMap.EMPTY;
var G__246739 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)^2-\\psi^{n-2}\\left(\\frac{1-\\sqrt5}{2}\\right)^2}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246738,G__246739) : tailrecursion.hoplon.markdown.para_node.call(null,G__246738,G__246739));
})(),(function (){var G__246740 = cljs.core.PersistentArrayMap.EMPTY;
var G__246741 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}\\left(\\frac{6+2\\sqrt5}{4}\\right)-\\psi^{n-2}\\left(\\frac{6-2\\sqrt5}{4}\\right)}{\\sqrt5}$$ "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246740,G__246741) : tailrecursion.hoplon.markdown.para_node.call(null,G__246740,G__246741));
})(),(function (){var G__246742 = cljs.core.PersistentArrayMap.EMPTY;
var G__246743 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=\\frac{\\phi^{n-2}-\\psi^{n-2}}{\\sqrt5}+\\frac{\\phi^{n-2}\\left(\\frac{1+\\sqrt5}{2}\\right)-\\psi^{n-2}\\left(\\frac{1-2\\sqrt5}{2}\\right)}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246742,G__246743) : tailrecursion.hoplon.markdown.para_node.call(null,G__246742,G__246743));
})(),(function (){var G__246744 = cljs.core.PersistentArrayMap.EMPTY;
var G__246745 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+\\frac{\\phi^{n-1}-\\psi^{n-1}}{\\sqrt5}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246744,G__246745) : tailrecursion.hoplon.markdown.para_node.call(null,G__246744,G__246745));
})(),(function (){var G__246746 = cljs.core.PersistentArrayMap.EMPTY;
var G__246747 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n-2)+Fib(n-1)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246746,G__246747) : tailrecursion.hoplon.markdown.para_node.call(null,G__246746,G__246747));
})(),(function (){var G__246748 = cljs.core.PersistentArrayMap.EMPTY;
var G__246749 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$=Fib(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246748,G__246749) : tailrecursion.hoplon.markdown.para_node.call(null,G__246748,G__246749));
})(),(function (){var G__246750 = cljs.core.PersistentArrayMap.EMPTY;
var G__246751 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in general, \\(Fib(n)=\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246750,G__246751) : tailrecursion.hoplon.markdown.para_node.call(null,G__246750,G__246751));
})(),(function (){var G__246752 = cljs.core.PersistentArrayMap.EMPTY;
var G__246753 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Now, to prove that \\(Fib(n)\\) is the integer closest to \\(\\phi^n/\\sqrt5\\). First we note that since \\(\\psi^2< 0.4\\), \\(\\sqrt5>1\\) and \\(\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\) is an integer, we know for any \\(n\\geq2\\), "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246752,G__246753) : tailrecursion.hoplon.markdown.para_node.call(null,G__246752,G__246753));
})(),(function (){var G__246754 = cljs.core.PersistentArrayMap.EMPTY;
var G__246755 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\left|\\frac{\\phi^n}{\\sqrt5}-Fib(n)\\right| =\\left|\\frac{\\phi^n}{\\sqrt5}-\\frac{\\phi^n-\\psi^n}{\\sqrt5}\\right| =\\left|\\frac{\\psi^n}{\\sqrt5}\\right|< 0.4$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246754,G__246755) : tailrecursion.hoplon.markdown.para_node.call(null,G__246754,G__246755));
})(),(function (){var G__246756 = cljs.core.PersistentArrayMap.EMPTY;
var G__246757 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that the closest integer to \\(\\frac{\\phi^n}{\\sqrt5}\\) must be \\(Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246756,G__246757) : tailrecursion.hoplon.markdown.para_node.call(null,G__246756,G__246757));
})(),(function (){var G__246758 = cljs.core.PersistentArrayMap.EMPTY;
var G__246759 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As for when \\(n< 2\\), we can check one by one."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246758,G__246759) : tailrecursion.hoplon.markdown.para_node.call(null,G__246758,G__246759));
})(),(function (){var G__246760 = cljs.core.PersistentArrayMap.EMPTY;
var G__246761 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n = 0\\): \\(\\frac{1}{\\sqrt5}< 0.45\\), so that the closest integer is 0 (\\(Fib(0)\\))."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246760,G__246761) : tailrecursion.hoplon.markdown.para_node.call(null,G__246760,G__246761));
})(),(function (){var G__246762 = cljs.core.PersistentArrayMap.EMPTY;
var G__246763 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Case \\(n=1\\): \\(\\frac{\\frac{1+\\sqrt5}{2}}{\\sqrt5}\\approx0.72\\), so that the closest integer is \\(Fib(1)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246762,G__246763) : tailrecursion.hoplon.markdown.para_node.call(null,G__246762,G__246763));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246719;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246718;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246717;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246716;
}})()], 0))], 0))], 0));
var G__238156 = "";
var G__238157 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Orders of Growth"], null),(function (){var _STAR_references_STAR_246764 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246765 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246766 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246767 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246768 = cljs.core.PersistentArrayMap.EMPTY;
var G__246769 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The previous examples illustrate that processes can differ considerably in the rates at which they consume computational resources. One convenient way to describe this difference is to use the notion of ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["order of growth"], null)], 0))," to obtain a gross measure of the resources required by a process as the inputs become larger."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246768,G__246769) : tailrecursion.hoplon.markdown.para_node.call(null,G__246768,G__246769));
})(),(function (){var G__246770 = cljs.core.PersistentArrayMap.EMPTY;
var G__246771 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let \\(n\\) be a parameter that measures the size of the problem, and let \\(R(n)\\) be the amount of resources the process requires for a problem of size \\(n\\). In our previous examples we took \\(n\\) to be the number for which a given function is to be computed, but there are other possibilities. For instance, if our goal is to compute an approximation to the square root of a number, we might take \\(n\\) to be the number of digits accuracy required. For matrix multiplication we might take \\(n\\) to be the number of rows in the matrices. In general there are a number of properties of the problem with respect to which it will be desirable to analyze a given process. Similarly, \\(R(n)\\) might measure the number of internal storage registers used, the number of elementary machine operations performed, and so on. In computers that do only a fixed number of operations at a time, the time required will be proportional to the number of elementary machine operations performed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246770,G__246771) : tailrecursion.hoplon.markdown.para_node.call(null,G__246770,G__246771));
})(),(function (){var G__246772 = cljs.core.PersistentArrayMap.EMPTY;
var G__246773 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We say \\(R(n)\\) has order of growth \\(\\Theta(f(n))\\), written \\(R(n)=\\Theta(f(n))\\) (pronounced ",(function (){var G__246774 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__246775 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["theta of \\(f(n)\\)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__246774,G__246775) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__246774,G__246775));
})(),"), if there are positive constants \\(k_1\\) and \\(k_2\\) independent of \\(n\\) such that"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246772,G__246773) : tailrecursion.hoplon.markdown.para_node.call(null,G__246772,G__246773));
})(),(function (){var G__246776 = cljs.core.PersistentArrayMap.EMPTY;
var G__246777 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$k_1f(n)\\leq R(n)\\leq k_2f(n)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246776,G__246777) : tailrecursion.hoplon.markdown.para_node.call(null,G__246776,G__246777));
})(),(function (){var G__246778 = cljs.core.PersistentArrayMap.EMPTY;
var G__246779 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["for any sufficiently large value of \\(n\\). (In other words, for large \\(n\\), the value of \\(R(n)\\) is sandwiched between \\(k_1f(n)\\) and \\(k_2f(n)\\).)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246778,G__246779) : tailrecursion.hoplon.markdown.para_node.call(null,G__246778,G__246779));
})(),(function (){var G__246780 = cljs.core.PersistentArrayMap.EMPTY;
var G__246781 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For instance, with the linear recursive process for computing factorial described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/1/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.1"], null)], 0))," the number of steps grows proportionally to the input \\(n\\). Thus, the steps required for this process grows as \\(\\Theta(n)\\). We also saw that the space required grows as \\(\\Theta(n)\\). For the iterative factorial, the number of steps is still \\(\\Theta(n)\\) but the space is \\(\\Theta(1)\\) ",(function (){var G__246782 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__246783 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__246782,G__246783) : tailrecursion.hoplon.markdown.simple_node.call(null,G__246782,G__246783));
})()," that is, constant.",(function (){var G__246784 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__246785 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["These statements mask a great deal of oversimplification. For instance, if we count process steps as ",(function (){var G__246786 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__246787 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["machine operations"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__246786,G__246787) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__246786,G__246787));
})()," we are making the assumption that the number of machine operations needed to perform, say, a multiplication is independent of the size of the numbers to be multiplied, which is false if the numbers are sufficiently large. Similar remarks hold for the estimates of space. Like the design and description of a process, the analysis of a process can be carried out at various levels of abstraction."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__246784,G__246785) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__246784,G__246785));
})()," The tree-recursive Fibonacci computation requires \\(\\Theta(\\phi^n)\\) steps and space \\(\\Theta(n)\\), where \\(\\phi\\) is the golden ratio described in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246780,G__246781) : tailrecursion.hoplon.markdown.para_node.call(null,G__246780,G__246781));
})(),(function (){var G__246788 = cljs.core.PersistentArrayMap.EMPTY;
var G__246789 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Orders of growth provide only a crude description of the behavior of a process. For example, a process requiring \\(n^2\\) steps and a process requiring \\(1000n^2\\) steps and a process requiring \\(3n^2+10n+17\\) steps all have \\(\\Theta(n^2)\\) order of growth. On the other hand, order of growth provides a useful indication of how we may expect the behavior of the process to change as we change the size of the problem. For a \\(\\Theta(n)\\) (linear) process, doubling the size will roughly double the amount of resources used. For an exponential process, each increment in problem size will multiply the resource utilization by a constant factor. In the remainder of section 1.2 we will examine two algorithms whose order of growth is logarithmic, so that doubling the problem size increases the resource requirment by a constant amount."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246788,G__246789) : tailrecursion.hoplon.markdown.para_node.call(null,G__246788,G__246789));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246767;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246766;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246765;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246764;
}})()], 0));
var G__238158 = "";
var G__238159 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"14-15"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(14)], null),(function (){var _STAR_references_STAR_246790 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246791 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246792 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246793 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246794 = cljs.core.PersistentArrayMap.EMPTY;
var G__246795 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Draw the tree illustrating the process generated by the ",(function (){var G__246796 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"count-change"], null);
var G__246797 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__246796,G__246797) : tailrecursion.hoplon.markdown.code_node.call(null,G__246796,G__246797));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0))," in making change for 11 cents. What are the orders of growth of the space and number of steps used by this process as the amount to be changed increases?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246794,G__246795) : tailrecursion.hoplon.markdown.para_node.call(null,G__246794,G__246795));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246793;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246792;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246791;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246790;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_246798 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246799 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246800 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246801 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246802 = cljs.core.PersistentArrayMap.EMPTY;
var G__246803 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Things will go here (once I get this LaTeX thing all sorted out)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246802,G__246803) : tailrecursion.hoplon.markdown.para_node.call(null,G__246802,G__246803));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246801;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246800;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246799;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246798;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(15)], null),(function (){var _STAR_references_STAR_246804 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246805 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_246806 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_246807 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__246808 = cljs.core.PersistentArrayMap.EMPTY;
var G__246809 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The sine of an angle (specified in radians) can be computed by making use of the approximation \\(\\sin x\\approx x\\) if \\(x\\) is sufficiently small, and the trigonometric identity"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246808,G__246809) : tailrecursion.hoplon.markdown.para_node.call(null,G__246808,G__246809));
})(),(function (){var G__246810 = cljs.core.PersistentArrayMap.EMPTY;
var G__246811 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\sin x = 3\\sin\\frac{x}{3}-4\\sin^3\\frac{x}{3}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246810,G__246811) : tailrecursion.hoplon.markdown.para_node.call(null,G__246810,G__246811));
})(),(function (){var G__246812 = cljs.core.PersistentArrayMap.EMPTY;
var G__246813 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to reduce the size of the argument of \\(\\sin\\). (For purposes of this exerise an angle is considered ",(function (){var G__246814 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__246815 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sufficiently small"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__246814,G__246815) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__246814,G__246815));
})()," if its magnitude is not greater than 0.1 radians.) These ideas are incorporated in the following procedures:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__246812,G__246813) : tailrecursion.hoplon.markdown.para_node.call(null,G__246812,G__246813));
})(),(function (){var G__246945 = (function (){var G__246946 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__246947 = (function (){var G__246948 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__246949 = "(";
var G__246950 = (function (){var G__247009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247010 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247009,G__247010) : tailrecursion.hoplon.span.call(null,G__247009,G__247010));
})();
var G__246951 = (function (){var G__247011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247012 = "cub";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247011,G__247012) : tailrecursion.hoplon.span.call(null,G__247011,G__247012));
})();
var G__246952 = " [";
var G__246953 = (function (){var G__247013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247014 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247013,G__247014) : tailrecursion.hoplon.span.call(null,G__247013,G__247014));
})();
var G__246954 = "] (";
var G__246955 = (function (){var G__247015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247016 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247015,G__247016) : tailrecursion.hoplon.span.call(null,G__247015,G__247016));
})();
var G__246956 = (function (){var G__247017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247018 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247017,G__247018) : tailrecursion.hoplon.span.call(null,G__247017,G__247018));
})();
var G__246957 = " ";
var G__246958 = (function (){var G__247019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247020 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247019,G__247020) : tailrecursion.hoplon.span.call(null,G__247019,G__247020));
})();
var G__246959 = " ";
var G__246960 = (function (){var G__247021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247022 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247021,G__247022) : tailrecursion.hoplon.span.call(null,G__247021,G__247022));
})();
var G__246961 = "))\n(";
var G__246962 = (function (){var G__247023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247024 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247023,G__247024) : tailrecursion.hoplon.span.call(null,G__247023,G__247024));
})();
var G__246963 = (function (){var G__247025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247026 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247025,G__247026) : tailrecursion.hoplon.span.call(null,G__247025,G__247026));
})();
var G__246964 = " [";
var G__246965 = (function (){var G__247027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247028 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247027,G__247028) : tailrecursion.hoplon.span.call(null,G__247027,G__247028));
})();
var G__246966 = "] (";
var G__246967 = (function (){var G__247029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247030 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247029,G__247030) : tailrecursion.hoplon.span.call(null,G__247029,G__247030));
})();
var G__246968 = "(";
var G__246969 = (function (){var G__247031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247032 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247031,G__247032) : tailrecursion.hoplon.span.call(null,G__247031,G__247032));
})();
var G__246970 = (function (){var G__247033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247034 = "3";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247033,G__247034) : tailrecursion.hoplon.span.call(null,G__247033,G__247034));
})();
var G__246971 = " ";
var G__246972 = (function (){var G__247035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247036 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247035,G__247036) : tailrecursion.hoplon.span.call(null,G__247035,G__247036));
})();
var G__246973 = ") (";
var G__246974 = (function (){var G__247037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247038 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247037,G__247038) : tailrecursion.hoplon.span.call(null,G__247037,G__247038));
})();
var G__246975 = (function (){var G__247039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247040 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247039,G__247040) : tailrecursion.hoplon.span.call(null,G__247039,G__247040));
})();
var G__246976 = " (";
var G__246977 = (function (){var G__247041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247042 = "cube";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247041,G__247042) : tailrecursion.hoplon.span.call(null,G__247041,G__247042));
})();
var G__246978 = " ";
var G__246979 = (function (){var G__247043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247044 = "x";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247043,G__247044) : tailrecursion.hoplon.span.call(null,G__247043,G__247044));
})();
var G__246980 = "))))\n(";
var G__246981 = (function (){var G__247045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247046 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247045,G__247046) : tailrecursion.hoplon.span.call(null,G__247045,G__247046));
})();
var G__246982 = (function (){var G__247047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247048 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247047,G__247048) : tailrecursion.hoplon.span.call(null,G__247047,G__247048));
})();
var G__246983 = " [";
var G__246984 = (function (){var G__247049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247050 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247049,G__247050) : tailrecursion.hoplon.span.call(null,G__247049,G__247050));
})();
var G__246985 = "]\n  (";
var G__246986 = (function (){var G__247051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247052 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247051,G__247052) : tailrecursion.hoplon.span.call(null,G__247051,G__247052));
})();
var G__246987 = "(";
var G__246988 = (function (){var G__247053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247054 = "not ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247053,G__247054) : tailrecursion.hoplon.span.call(null,G__247053,G__247054));
})();
var G__246989 = "(";
var G__246990 = (function (){var G__247055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247056 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247055,G__247056) : tailrecursion.hoplon.span.call(null,G__247055,G__247056));
})();
var G__246991 = "(";
var G__246992 = (function (){var G__247057 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247058 = "abs";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247057,G__247058) : tailrecursion.hoplon.span.call(null,G__247057,G__247058));
})();
var G__246993 = " ";
var G__246994 = (function (){var G__247059 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247060 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247059,G__247060) : tailrecursion.hoplon.span.call(null,G__247059,G__247060));
})();
var G__246995 = ") ";
var G__246996 = (function (){var G__247061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247062 = "0.1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247061,G__247062) : tailrecursion.hoplon.span.call(null,G__247061,G__247062));
})();
var G__246997 = "))\n      ";
var G__246998 = (function (){var G__247063 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247064 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247063,G__247064) : tailrecursion.hoplon.span.call(null,G__247063,G__247064));
})();
var G__246999 = "\n      (";
var G__247000 = (function (){var G__247065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247066 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247065,G__247066) : tailrecursion.hoplon.span.call(null,G__247065,G__247066));
})();
var G__247001 = " (";
var G__247002 = (function (){var G__247067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247068 = "sine";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247067,G__247068) : tailrecursion.hoplon.span.call(null,G__247067,G__247068));
})();
var G__247003 = " (";
var G__247004 = (function (){var G__247069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247070 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247069,G__247070) : tailrecursion.hoplon.span.call(null,G__247069,G__247070));
})();
var G__247005 = (function (){var G__247071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247072 = "angle";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247071,G__247072) : tailrecursion.hoplon.span.call(null,G__247071,G__247072));
})();
var G__247006 = " ";
var G__247007 = (function (){var G__247073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247074 = "3.0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247073,G__247074) : tailrecursion.hoplon.span.call(null,G__247073,G__247074));
})();
var G__247008 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$61(G__246948,G__246949,G__246950,G__246951,G__246952,G__246953,G__246954,G__246955,G__246956,G__246957,G__246958,G__246959,G__246960,G__246961,G__246962,G__246963,G__246964,G__246965,G__246966,G__246967,G__246968,G__246969,G__246970,G__246971,G__246972,G__246973,G__246974,G__246975,G__246976,G__246977,G__246978,G__246979,G__246980,G__246981,G__246982,G__246983,G__246984,G__246985,G__246986,G__246987,G__246988,G__246989,G__246990,G__246991,G__246992,G__246993,G__246994,G__246995,G__246996,G__246997,G__246998,G__246999,G__247000,G__247001,G__247002,G__247003,G__247004,G__247005,G__247006,G__247007,G__247008) : tailrecursion.hoplon.pre.call(null,G__246948,G__246949,G__246950,G__246951,G__246952,G__246953,G__246954,G__246955,G__246956,G__246957,G__246958,G__246959,G__246960,G__246961,G__246962,G__246963,G__246964,G__246965,G__246966,G__246967,G__246968,G__246969,G__246970,G__246971,G__246972,G__246973,G__246974,G__246975,G__246976,G__246977,G__246978,G__246979,G__246980,G__246981,G__246982,G__246983,G__246984,G__246985,G__246986,G__246987,G__246988,G__246989,G__246990,G__246991,G__246992,G__246993,G__246994,G__246995,G__246996,G__246997,G__246998,G__246999,G__247000,G__247001,G__247002,G__247003,G__247004,G__247005,G__247006,G__247007,G__247008));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__246946,G__246947) : tailrecursion.hoplon.div.call(null,G__246946,G__246947));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__246945) : tailrecursion.hoplon.div.call(null,G__246945));
})(),(function (){var G__247075 = cljs.core.PersistentArrayMap.EMPTY;
var G__247076 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a. How many times is the procedure \\(p\\) applied when ",(function (){var G__247077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sine\n12.15)"], null);
var G__247078 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247077,G__247078) : tailrecursion.hoplon.markdown.code_node.call(null,G__247077,G__247078));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247075,G__247076) : tailrecursion.hoplon.markdown.para_node.call(null,G__247075,G__247076));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246807;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246806;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_246805;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_246804;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_247079 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247080 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_247081 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247082 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__247083 = cljs.core.PersistentArrayMap.EMPTY;
var G__247084 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To do this we first realize that each iteration (until the angle \\(\\theta\\) is less than or equal to 0.1) divides the angle by three. Since this is applicative order, we know that each iteration will call ",(function (){var G__247085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"p"], null);
var G__247086 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247085,G__247086) : tailrecursion.hoplon.markdown.code_node.call(null,G__247085,G__247086));
})()," exactly once. So this reduces to solving the equation,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247083,G__247084) : tailrecursion.hoplon.markdown.para_node.call(null,G__247083,G__247084));
})(),(function (){var G__247087 = cljs.core.PersistentArrayMap.EMPTY;
var G__247088 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$ \\frac{12.15}{3^n}\\leq 0.1 \\iff n\\geq 4.37",(function (){var G__247089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__247090 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__247089,G__247090) : tailrecursion.hoplon.markdown.simple_node.call(null,G__247089,G__247090));
})()," $$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247087,G__247088) : tailrecursion.hoplon.markdown.para_node.call(null,G__247087,G__247088));
})(),(function (){var G__247091 = cljs.core.PersistentArrayMap.EMPTY;
var G__247092 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since we",(function (){var G__247093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__247094 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__247093,G__247094) : tailrecursion.hoplon.markdown.simple_node.call(null,G__247093,G__247094));
})(),"re looking for an integer, we need \\(n=5\\). Hence, ",(function (){var G__247095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"p"], null);
var G__247096 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247095,G__247096) : tailrecursion.hoplon.markdown.code_node.call(null,G__247095,G__247096));
})()," will be applied 5 times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247091,G__247092) : tailrecursion.hoplon.markdown.para_node.call(null,G__247091,G__247092));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247082;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247081;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247080;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247079;
}})()], 0)),"",(function (){var _STAR_references_STAR_247097 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247098 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_247099 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247100 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__247101 = cljs.core.PersistentArrayMap.EMPTY;
var G__247102 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["b. What is the order of growth in space and number of steps (as a function of \\(a\\)) used by the process generated by the ",(function (){var G__247103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"sine"], null);
var G__247104 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247103,G__247104) : tailrecursion.hoplon.markdown.code_node.call(null,G__247103,G__247104));
})()," procedure when ",(function (){var G__247105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(sine a)"], null);
var G__247106 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247105,G__247106) : tailrecursion.hoplon.markdown.code_node.call(null,G__247105,G__247106));
})()," is evaluated?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247101,G__247102) : tailrecursion.hoplon.markdown.para_node.call(null,G__247101,G__247102));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247100;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247099;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247098;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247097;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_247107 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247108 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_247109 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247110 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__247111 = cljs.core.PersistentArrayMap.EMPTY;
var G__247112 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One could realize, just from noting that each step divides the argument by 3, that the order of growth in the number of steps required is logarithmic (doubling the argument only adds at most one more iteration, and hence a fixed number of steps)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247111,G__247112) : tailrecursion.hoplon.markdown.para_node.call(null,G__247111,G__247112));
})(),(function (){var G__247113 = cljs.core.PersistentArrayMap.EMPTY;
var G__247114 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["As far as in the space required, it is also logarithmic because every time you triple the argument, you only add one more iteration."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247113,G__247114) : tailrecursion.hoplon.markdown.para_node.call(null,G__247113,G__247114));
})(),(function (){var G__247115 = cljs.core.PersistentArrayMap.EMPTY;
var G__247116 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So both have \\(\\Theta(\\log x)\\) order of growth."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247115,G__247116) : tailrecursion.hoplon.markdown.para_node.call(null,G__247115,G__247116));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247110;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247109;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247108;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247107;
}})()], 0))], 0))], 0));
var G__238160 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Exponentiation"], null),(function (){var _STAR_references_STAR_247117 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247118 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_247119 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247120 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__247121 = cljs.core.PersistentArrayMap.EMPTY;
var G__247122 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Consider the problem of computing the exponential of a given number. We would like a procedure that takes as arguments a base \\(b\\) and a positive integer exponent \\(n\\) and computes \\(b^n\\). One way to do this is via the recursive definition:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247121,G__247122) : tailrecursion.hoplon.markdown.para_node.call(null,G__247121,G__247122));
})(),(function (){var G__247123 = cljs.core.PersistentArrayMap.EMPTY;
var G__247124 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}b^n =& b\\cdot b^{n-1} \\\\ b^0=&1 \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247123,G__247124) : tailrecursion.hoplon.markdown.para_node.call(null,G__247123,G__247124));
})(),(function (){var G__247125 = cljs.core.PersistentArrayMap.EMPTY;
var G__247126 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Which translates readily into the procedure"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247125,G__247126) : tailrecursion.hoplon.markdown.para_node.call(null,G__247125,G__247126));
})(),(function (){var G__247192 = (function (){var G__247193 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__247194 = (function (){var G__247195 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__247196 = "(";
var G__247197 = (function (){var G__247226 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247227 = "define";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247226,G__247227) : tailrecursion.hoplon.span.call(null,G__247226,G__247227));
})();
var G__247198 = " ";
var G__247199 = (function (){var G__247228 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247229 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247228,G__247229) : tailrecursion.hoplon.span.call(null,G__247228,G__247229));
})();
var G__247200 = " [";
var G__247201 = (function (){var G__247230 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247231 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247230,G__247231) : tailrecursion.hoplon.span.call(null,G__247230,G__247231));
})();
var G__247202 = " ";
var G__247203 = (function (){var G__247232 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247233 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247232,G__247233) : tailrecursion.hoplon.span.call(null,G__247232,G__247233));
})();
var G__247204 = "]\n  (";
var G__247205 = (function (){var G__247234 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247235 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247234,G__247235) : tailrecursion.hoplon.span.call(null,G__247234,G__247235));
})();
var G__247206 = "(";
var G__247207 = (function (){var G__247236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247237 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247236,G__247237) : tailrecursion.hoplon.span.call(null,G__247236,G__247237));
})();
var G__247208 = (function (){var G__247238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247239 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247238,G__247239) : tailrecursion.hoplon.span.call(null,G__247238,G__247239));
})();
var G__247209 = " ";
var G__247210 = (function (){var G__247240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247241 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247240,G__247241) : tailrecursion.hoplon.span.call(null,G__247240,G__247241));
})();
var G__247211 = ")\n      ";
var G__247212 = (function (){var G__247242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247243 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247242,G__247243) : tailrecursion.hoplon.span.call(null,G__247242,G__247243));
})();
var G__247213 = "\n      (";
var G__247214 = (function (){var G__247244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247245 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247244,G__247245) : tailrecursion.hoplon.span.call(null,G__247244,G__247245));
})();
var G__247215 = (function (){var G__247246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247247 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247246,G__247247) : tailrecursion.hoplon.span.call(null,G__247246,G__247247));
})();
var G__247216 = " (";
var G__247217 = (function (){var G__247248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247249 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247248,G__247249) : tailrecursion.hoplon.span.call(null,G__247248,G__247249));
})();
var G__247218 = " ";
var G__247219 = (function (){var G__247250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247251 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247250,G__247251) : tailrecursion.hoplon.span.call(null,G__247250,G__247251));
})();
var G__247220 = " (";
var G__247221 = (function (){var G__247252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247253 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247252,G__247253) : tailrecursion.hoplon.span.call(null,G__247252,G__247253));
})();
var G__247222 = (function (){var G__247254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247255 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247254,G__247255) : tailrecursion.hoplon.span.call(null,G__247254,G__247255));
})();
var G__247223 = " ";
var G__247224 = (function (){var G__247256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247257 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247256,G__247257) : tailrecursion.hoplon.span.call(null,G__247256,G__247257));
})();
var G__247225 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$31(G__247195,G__247196,G__247197,G__247198,G__247199,G__247200,G__247201,G__247202,G__247203,G__247204,G__247205,G__247206,G__247207,G__247208,G__247209,G__247210,G__247211,G__247212,G__247213,G__247214,G__247215,G__247216,G__247217,G__247218,G__247219,G__247220,G__247221,G__247222,G__247223,G__247224,G__247225) : tailrecursion.hoplon.pre.call(null,G__247195,G__247196,G__247197,G__247198,G__247199,G__247200,G__247201,G__247202,G__247203,G__247204,G__247205,G__247206,G__247207,G__247208,G__247209,G__247210,G__247211,G__247212,G__247213,G__247214,G__247215,G__247216,G__247217,G__247218,G__247219,G__247220,G__247221,G__247222,G__247223,G__247224,G__247225));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__247193,G__247194) : tailrecursion.hoplon.div.call(null,G__247193,G__247194));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__247192) : tailrecursion.hoplon.div.call(null,G__247192));
})(),(function (){var G__247258 = cljs.core.PersistentArrayMap.EMPTY;
var G__247259 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is a linear recursive process, which requires \\(\\Theta(n)\\) steps and \\(\\Theta(n)\\) space. Just as with factorial, we can readily formulate an equivalent linear iteration:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247258,G__247259) : tailrecursion.hoplon.markdown.para_node.call(null,G__247258,G__247259));
})(),(function (){var G__247295 = (function (){var G__247296 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__247297 = (function (){var G__247298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__247299 = "(";
var G__247300 = (function (){var G__247315 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247316 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247315,G__247316) : tailrecursion.hoplon.span.call(null,G__247315,G__247316));
})();
var G__247301 = (function (){var G__247317 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247318 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247317,G__247318) : tailrecursion.hoplon.span.call(null,G__247317,G__247318));
})();
var G__247302 = " [";
var G__247303 = (function (){var G__247319 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247320 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247319,G__247320) : tailrecursion.hoplon.span.call(null,G__247319,G__247320));
})();
var G__247304 = " ";
var G__247305 = (function (){var G__247321 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247322 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247321,G__247322) : tailrecursion.hoplon.span.call(null,G__247321,G__247322));
})();
var G__247306 = "]\n  (";
var G__247307 = (function (){var G__247323 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247324 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247323,G__247324) : tailrecursion.hoplon.span.call(null,G__247323,G__247324));
})();
var G__247308 = " ";
var G__247309 = (function (){var G__247325 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247326 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247325,G__247326) : tailrecursion.hoplon.span.call(null,G__247325,G__247326));
})();
var G__247310 = " ";
var G__247311 = (function (){var G__247327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247328 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247327,G__247328) : tailrecursion.hoplon.span.call(null,G__247327,G__247328));
})();
var G__247312 = " ";
var G__247313 = (function (){var G__247329 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247330 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247329,G__247330) : tailrecursion.hoplon.span.call(null,G__247329,G__247330));
})();
var G__247314 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__247298,G__247299,G__247300,G__247301,G__247302,G__247303,G__247304,G__247305,G__247306,G__247307,G__247308,G__247309,G__247310,G__247311,G__247312,G__247313,G__247314) : tailrecursion.hoplon.pre.call(null,G__247298,G__247299,G__247300,G__247301,G__247302,G__247303,G__247304,G__247305,G__247306,G__247307,G__247308,G__247309,G__247310,G__247311,G__247312,G__247313,G__247314));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__247296,G__247297) : tailrecursion.hoplon.div.call(null,G__247296,G__247297));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__247295) : tailrecursion.hoplon.div.call(null,G__247295));
})(),(function (){var G__247331 = cljs.core.PersistentArrayMap.EMPTY;
var G__247332 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["where"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247331,G__247332) : tailrecursion.hoplon.markdown.para_node.call(null,G__247331,G__247332));
})(),(function (){var G__247405 = (function (){var G__247406 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__247407 = (function (){var G__247408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__247409 = "(";
var G__247410 = (function (){var G__247442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247443 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247442,G__247443) : tailrecursion.hoplon.span.call(null,G__247442,G__247443));
})();
var G__247411 = (function (){var G__247444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247445 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247444,G__247445) : tailrecursion.hoplon.span.call(null,G__247444,G__247445));
})();
var G__247412 = " [";
var G__247413 = (function (){var G__247446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247447 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247446,G__247447) : tailrecursion.hoplon.span.call(null,G__247446,G__247447));
})();
var G__247414 = " ";
var G__247415 = (function (){var G__247448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247449 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247448,G__247449) : tailrecursion.hoplon.span.call(null,G__247448,G__247449));
})();
var G__247416 = " ";
var G__247417 = (function (){var G__247450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247451 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247450,G__247451) : tailrecursion.hoplon.span.call(null,G__247450,G__247451));
})();
var G__247418 = "]\n  (";
var G__247419 = (function (){var G__247452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247453 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247452,G__247453) : tailrecursion.hoplon.span.call(null,G__247452,G__247453));
})();
var G__247420 = "(";
var G__247421 = (function (){var G__247454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247455 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247454,G__247455) : tailrecursion.hoplon.span.call(null,G__247454,G__247455));
})();
var G__247422 = (function (){var G__247456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247457 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247456,G__247457) : tailrecursion.hoplon.span.call(null,G__247456,G__247457));
})();
var G__247423 = " ";
var G__247424 = (function (){var G__247458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247459 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247458,G__247459) : tailrecursion.hoplon.span.call(null,G__247458,G__247459));
})();
var G__247425 = ")\n      ";
var G__247426 = (function (){var G__247460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247461 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247460,G__247461) : tailrecursion.hoplon.span.call(null,G__247460,G__247461));
})();
var G__247427 = "\n      (";
var G__247428 = (function (){var G__247462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247463 = "expt-iter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247462,G__247463) : tailrecursion.hoplon.span.call(null,G__247462,G__247463));
})();
var G__247429 = " ";
var G__247430 = (function (){var G__247464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247465 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247464,G__247465) : tailrecursion.hoplon.span.call(null,G__247464,G__247465));
})();
var G__247431 = "\n                 (";
var G__247432 = (function (){var G__247466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247467 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247466,G__247467) : tailrecursion.hoplon.span.call(null,G__247466,G__247467));
})();
var G__247433 = (function (){var G__247468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247469 = "counter";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247468,G__247469) : tailrecursion.hoplon.span.call(null,G__247468,G__247469));
})();
var G__247434 = " ";
var G__247435 = (function (){var G__247470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247471 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247470,G__247471) : tailrecursion.hoplon.span.call(null,G__247470,G__247471));
})();
var G__247436 = ")\n                 (";
var G__247437 = (function (){var G__247472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247473 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247472,G__247473) : tailrecursion.hoplon.span.call(null,G__247472,G__247473));
})();
var G__247438 = (function (){var G__247474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247475 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247474,G__247475) : tailrecursion.hoplon.span.call(null,G__247474,G__247475));
})();
var G__247439 = " ";
var G__247440 = (function (){var G__247476 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247477 = "product";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247476,G__247477) : tailrecursion.hoplon.span.call(null,G__247476,G__247477));
})();
var G__247441 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$34(G__247408,G__247409,G__247410,G__247411,G__247412,G__247413,G__247414,G__247415,G__247416,G__247417,G__247418,G__247419,G__247420,G__247421,G__247422,G__247423,G__247424,G__247425,G__247426,G__247427,G__247428,G__247429,G__247430,G__247431,G__247432,G__247433,G__247434,G__247435,G__247436,G__247437,G__247438,G__247439,G__247440,G__247441) : tailrecursion.hoplon.pre.call(null,G__247408,G__247409,G__247410,G__247411,G__247412,G__247413,G__247414,G__247415,G__247416,G__247417,G__247418,G__247419,G__247420,G__247421,G__247422,G__247423,G__247424,G__247425,G__247426,G__247427,G__247428,G__247429,G__247430,G__247431,G__247432,G__247433,G__247434,G__247435,G__247436,G__247437,G__247438,G__247439,G__247440,G__247441));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__247406,G__247407) : tailrecursion.hoplon.div.call(null,G__247406,G__247407));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__247405) : tailrecursion.hoplon.div.call(null,G__247405));
})(),(function (){var G__247478 = cljs.core.PersistentArrayMap.EMPTY;
var G__247479 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This version requires \\(\\Theta(n)\\) steps and \\(\\Theta(1)\\) space."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247478,G__247479) : tailrecursion.hoplon.markdown.para_node.call(null,G__247478,G__247479));
})(),(function (){var G__247480 = cljs.core.PersistentArrayMap.EMPTY;
var G__247481 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can compute exponentials in fewer steps by using successive squaring. For instance, rather than computing \\(b^8\\) as \\(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot(b\\cdot b))))))\\) we can compute it using three multiplications:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247480,G__247481) : tailrecursion.hoplon.markdown.para_node.call(null,G__247480,G__247481));
})(),(function (){var G__247482 = cljs.core.PersistentArrayMap.EMPTY;
var G__247483 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*} b^2=& b\\cdot b  \\\\ b^4=& b^2\\cdot b^2  \\\\ b^8=& b^4\\cdot b^4\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247482,G__247483) : tailrecursion.hoplon.markdown.para_node.call(null,G__247482,G__247483));
})(),(function (){var G__247484 = cljs.core.PersistentArrayMap.EMPTY;
var G__247485 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This method works fine for exponents that are powers of 2. We can also take advantage of successive squaring in computing exponentials in general if we use the rule:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247484,G__247485) : tailrecursion.hoplon.markdown.para_node.call(null,G__247484,G__247485));
})(),(function (){var G__247486 = cljs.core.PersistentArrayMap.EMPTY;
var G__247487 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  b^n=&(b^{n/2})^2 & \\text{if }& n \\text{ is even} \\\\  b^n=&b\\cdot b^{n-1} & \\text{if }& n \\text{ is odd}\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247486,G__247487) : tailrecursion.hoplon.markdown.para_node.call(null,G__247486,G__247487));
})(),(function (){var G__247488 = cljs.core.PersistentArrayMap.EMPTY;
var G__247489 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can express this method as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247488,G__247489) : tailrecursion.hoplon.markdown.para_node.call(null,G__247488,G__247489));
})(),(function (){var G__247525 = (function (){var G__247526 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__247527 = (function (){var G__247528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__247529 = "(";
var G__247530 = (function (){var G__247545 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247546 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247545,G__247546) : tailrecursion.hoplon.span.call(null,G__247545,G__247546));
})();
var G__247531 = (function (){var G__247547 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247548 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247547,G__247548) : tailrecursion.hoplon.span.call(null,G__247547,G__247548));
})();
var G__247532 = " [";
var G__247533 = (function (){var G__247549 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247550 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247549,G__247550) : tailrecursion.hoplon.span.call(null,G__247549,G__247550));
})();
var G__247534 = "]\n  (";
var G__247535 = (function (){var G__247551 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247552 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247551,G__247552) : tailrecursion.hoplon.span.call(null,G__247551,G__247552));
})();
var G__247536 = "(";
var G__247537 = (function (){var G__247553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247554 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247553,G__247554) : tailrecursion.hoplon.span.call(null,G__247553,G__247554));
})();
var G__247538 = " ";
var G__247539 = (function (){var G__247555 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247556 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247555,G__247556) : tailrecursion.hoplon.span.call(null,G__247555,G__247556));
})();
var G__247540 = " ";
var G__247541 = (function (){var G__247557 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247558 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247557,G__247558) : tailrecursion.hoplon.span.call(null,G__247557,G__247558));
})();
var G__247542 = ") ";
var G__247543 = (function (){var G__247559 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247560 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247559,G__247560) : tailrecursion.hoplon.span.call(null,G__247559,G__247560));
})();
var G__247544 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$17(G__247528,G__247529,G__247530,G__247531,G__247532,G__247533,G__247534,G__247535,G__247536,G__247537,G__247538,G__247539,G__247540,G__247541,G__247542,G__247543,G__247544) : tailrecursion.hoplon.pre.call(null,G__247528,G__247529,G__247530,G__247531,G__247532,G__247533,G__247534,G__247535,G__247536,G__247537,G__247538,G__247539,G__247540,G__247541,G__247542,G__247543,G__247544));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__247526,G__247527) : tailrecursion.hoplon.div.call(null,G__247526,G__247527));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__247525) : tailrecursion.hoplon.div.call(null,G__247525));
})(),(function (){var G__247561 = cljs.core.PersistentArrayMap.EMPTY;
var G__247562 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__247563 = cljs.core.PersistentArrayMap.EMPTY;
var G__247564 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: In Clojure ",(function (){var G__247565 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__247566 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247565,G__247566) : tailrecursion.hoplon.markdown.code_node.call(null,G__247565,G__247566));
})()," takes the place of ",(function (){var G__247567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"remainder"], null);
var G__247568 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247567,G__247568) : tailrecursion.hoplon.markdown.code_node.call(null,G__247567,G__247568));
})()," in Scheme."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247563,G__247564) : tailrecursion.hoplon.markdown.para_node.call(null,G__247563,G__247564));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__247561,G__247562) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__247561,G__247562));
})(),(function (){var G__247569 = cljs.core.PersistentArrayMap.EMPTY;
var G__247570 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process evolved by ",(function (){var G__247571 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__247572 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247571,G__247572) : tailrecursion.hoplon.markdown.code_node.call(null,G__247571,G__247572));
})()," grows logarithmically with \\(n\\) in both space and number of steps. To see this, observe that computing \\(b^{2n}\\) using ",(function (){var G__247573 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__247574 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247573,G__247574) : tailrecursion.hoplon.markdown.code_node.call(null,G__247573,G__247574));
})()," requires only one more multiplication than computing \\(b^n\\). The size of the exponent we can compute therefore doubles (approximately) with every new multiplication we are allowed. Thus the number of multiplications required for an exponent of \\(n\\) grows about as fast as the logarithm of \\(n\\) to the base 2. The process has \\(\\Theta(\\log n)\\) growth.",(function (){var G__247575 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__247576 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["More precisely, the number of multiplications required is equal to 1 less than the log base 2 of \\(n\\) plus the number of ones in the binary representation of \\(n\\). This total is always less than twice \\(\\log_2(n)\\). The arbitrary constants \\(k_1\\) and \\(k_2\\) in the definition of order notation imply that, for a logarithmic process, the base to which logarithms are taken does not matter, so all such processes are described as \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__247575,G__247576) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__247575,G__247576));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247569,G__247570) : tailrecursion.hoplon.markdown.para_node.call(null,G__247569,G__247570));
})(),(function (){var G__247577 = cljs.core.PersistentArrayMap.EMPTY;
var G__247578 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The difference between \\(\\Theta(\\log n) \\) growth and \\(\\Theta(n) \\) growth becomes striking as \\(n \\) becomes large. For example, ",(function (){var G__247579 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__247580 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247579,G__247580) : tailrecursion.hoplon.markdown.code_node.call(null,G__247579,G__247580));
})()," for \\(n=1000 \\) requires only 14 multiplications. ",(function (){var G__247581 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__247582 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["You may wonder why anyone would care about raising numbers to the 1000th power. See section 1.26."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__247581,G__247582) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__247581,G__247582));
})()," It is also possible to use the idea of successive squaring to devise an iterative algorithm that computes exponentials with a logarithmic number of steps (see ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#/sicp/ex/1-16/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.16"], null)], 0)),"), although, as is often the case with iterative algorithms, this is not written down so straightforwardly as the recursive algorithm.",(function (){var G__247583 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__247584 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This iterative algorithm is ancient. It appears in the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chandah-sutra"], null)], 0))," by \u00C1ch\u00E1rya Pingala, written before 200 B.C. See Knuth 1981, section 4.6.3, for a full discussion and analysis of this and other methods of exponentiation."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__247583,G__247584) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__247583,G__247584));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247577,G__247578) : tailrecursion.hoplon.markdown.para_node.call(null,G__247577,G__247578));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247120;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247119;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247118;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247117;
}})()], 0));
var G__238161 = "";
var G__238162 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"16-19"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(16)], null),(function (){var _STAR_references_STAR_247585 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247586 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_247587 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247588 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__247589 = cljs.core.PersistentArrayMap.EMPTY;
var G__247590 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Design a procedure that evolves an iterative exponentiation process that uses successive squaring and uses a logarithmic number of steps, as does ",(function (){var G__247591 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__247592 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247591,G__247592) : tailrecursion.hoplon.markdown.code_node.call(null,G__247591,G__247592));
})(),". (Hint: Using the observations that \\((b^{n/2})^2=(b^2)^{n/2}\\), keep, along with the exponent \\(n\\) and the base \\(b\\), an additional state variable \\(a\\), and define the state transformation in such a way that the product \\(ab^n\\) is unchanged from state to state. At the beginning of the process \\(a\\) is taken to be 1, and the answer is given by the value of \\(a\\) at the end of the process. In general, the technique of defining an ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["invariant quantity"], null)], 0))," that remains unchanged from state to state is a powerful way to think about the design of iterative algorithms.)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247589,G__247590) : tailrecursion.hoplon.markdown.para_node.call(null,G__247589,G__247590));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247588;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247587;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247586;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247585;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_247593 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247594 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_247595 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247596 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__247744 = (function (){var G__247745 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__247746 = (function (){var G__247747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__247748 = "(";
var G__247749 = (function (){var G__247818 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247819 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247818,G__247819) : tailrecursion.hoplon.span.call(null,G__247818,G__247819));
})();
var G__247750 = (function (){var G__247820 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247821 = "expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247820,G__247821) : tailrecursion.hoplon.span.call(null,G__247820,G__247821));
})();
var G__247751 = " [";
var G__247752 = (function (){var G__247822 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247823 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247822,G__247823) : tailrecursion.hoplon.span.call(null,G__247822,G__247823));
})();
var G__247753 = " ";
var G__247754 = (function (){var G__247824 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247825 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247824,G__247825) : tailrecursion.hoplon.span.call(null,G__247824,G__247825));
})();
var G__247755 = "]\n  (";
var G__247756 = (function (){var G__247826 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247827 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247826,G__247827) : tailrecursion.hoplon.span.call(null,G__247826,G__247827));
})();
var G__247757 = "[";
var G__247758 = (function (){var G__247828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247829 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247828,G__247829) : tailrecursion.hoplon.span.call(null,G__247828,G__247829));
})();
var G__247759 = "     ";
var G__247760 = (function (){var G__247830 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247831 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247830,G__247831) : tailrecursion.hoplon.span.call(null,G__247830,G__247831));
})();
var G__247761 = "\n         ";
var G__247762 = (function (){var G__247832 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247833 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247832,G__247833) : tailrecursion.hoplon.span.call(null,G__247832,G__247833));
})();
var G__247763 = " ";
var G__247764 = (function (){var G__247834 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247835 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247834,G__247835) : tailrecursion.hoplon.span.call(null,G__247834,G__247835));
})();
var G__247765 = "\n         ";
var G__247766 = (function (){var G__247836 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247837 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247836,G__247837) : tailrecursion.hoplon.span.call(null,G__247836,G__247837));
})();
var G__247767 = " ";
var G__247768 = (function (){var G__247838 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247839 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247838,G__247839) : tailrecursion.hoplon.span.call(null,G__247838,G__247839));
})();
var G__247769 = "]\n    (";
var G__247770 = (function (){var G__247840 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247841 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247840,G__247841) : tailrecursion.hoplon.span.call(null,G__247840,G__247841));
})();
var G__247771 = "(";
var G__247772 = (function (){var G__247842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247843 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247842,G__247843) : tailrecursion.hoplon.span.call(null,G__247842,G__247843));
})();
var G__247773 = (function (){var G__247844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247845 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247844,G__247845) : tailrecursion.hoplon.span.call(null,G__247844,G__247845));
})();
var G__247774 = " ";
var G__247775 = (function (){var G__247846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247847 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247846,G__247847) : tailrecursion.hoplon.span.call(null,G__247846,G__247847));
})();
var G__247776 = ") ";
var G__247777 = (function (){var G__247848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247849 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247848,G__247849) : tailrecursion.hoplon.span.call(null,G__247848,G__247849));
})();
var G__247778 = "\n          (";
var G__247779 = (function (){var G__247850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247851 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247850,G__247851) : tailrecursion.hoplon.span.call(null,G__247850,G__247851));
})();
var G__247780 = "(";
var G__247781 = (function (){var G__247852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247853 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247852,G__247853) : tailrecursion.hoplon.span.call(null,G__247852,G__247853));
})();
var G__247782 = " ";
var G__247783 = (function (){var G__247854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247855 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247854,G__247855) : tailrecursion.hoplon.span.call(null,G__247854,G__247855));
})();
var G__247784 = " ";
var G__247785 = (function (){var G__247856 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247857 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247856,G__247857) : tailrecursion.hoplon.span.call(null,G__247856,G__247857));
})();
var G__247786 = ") ";
var G__247787 = (function (){var G__247858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247859 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247858,G__247859) : tailrecursion.hoplon.span.call(null,G__247858,G__247859));
})();
var G__247788 = ") (";
var G__247789 = (function (){var G__247860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247861 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247860,G__247861) : tailrecursion.hoplon.span.call(null,G__247860,G__247861));
})();
var G__247790 = " (";
var G__247791 = (function (){var G__247862 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247863 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247862,G__247863) : tailrecursion.hoplon.span.call(null,G__247862,G__247863));
})();
var G__247792 = " ";
var G__247793 = (function (){var G__247864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247865 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247864,G__247865) : tailrecursion.hoplon.span.call(null,G__247864,G__247865));
})();
var G__247794 = ") (";
var G__247795 = (function (){var G__247866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247867 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247866,G__247867) : tailrecursion.hoplon.span.call(null,G__247866,G__247867));
})();
var G__247796 = (function (){var G__247868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247869 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247868,G__247869) : tailrecursion.hoplon.span.call(null,G__247868,G__247869));
})();
var G__247797 = " ";
var G__247798 = (function (){var G__247870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247871 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247870,G__247871) : tailrecursion.hoplon.span.call(null,G__247870,G__247871));
})();
var G__247799 = ") ";
var G__247800 = (function (){var G__247872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247873 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247872,G__247873) : tailrecursion.hoplon.span.call(null,G__247872,G__247873));
})();
var G__247801 = ")\n          ";
var G__247802 = (function (){var G__247874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247875 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247874,G__247875) : tailrecursion.hoplon.span.call(null,G__247874,G__247875));
})();
var G__247803 = " (";
var G__247804 = (function (){var G__247876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__247877 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247876,G__247877) : tailrecursion.hoplon.span.call(null,G__247876,G__247877));
})();
var G__247805 = " ";
var G__247806 = (function (){var G__247878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247879 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247878,G__247879) : tailrecursion.hoplon.span.call(null,G__247878,G__247879));
})();
var G__247807 = " (";
var G__247808 = (function (){var G__247880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247881 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247880,G__247881) : tailrecursion.hoplon.span.call(null,G__247880,G__247881));
})();
var G__247809 = (function (){var G__247882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247883 = "exponent";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247882,G__247883) : tailrecursion.hoplon.span.call(null,G__247882,G__247883));
})();
var G__247810 = " ";
var G__247811 = (function (){var G__247884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__247885 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247884,G__247885) : tailrecursion.hoplon.span.call(null,G__247884,G__247885));
})();
var G__247812 = ") (";
var G__247813 = (function (){var G__247886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__247887 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247886,G__247887) : tailrecursion.hoplon.span.call(null,G__247886,G__247887));
})();
var G__247814 = (function (){var G__247888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247889 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247888,G__247889) : tailrecursion.hoplon.span.call(null,G__247888,G__247889));
})();
var G__247815 = " ";
var G__247816 = (function (){var G__247890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__247891 = "accumulator";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247890,G__247891) : tailrecursion.hoplon.span.call(null,G__247890,G__247891));
})();
var G__247817 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$71(G__247747,G__247748,G__247749,G__247750,G__247751,G__247752,G__247753,G__247754,G__247755,G__247756,G__247757,G__247758,G__247759,G__247760,G__247761,G__247762,G__247763,G__247764,G__247765,G__247766,G__247767,G__247768,G__247769,G__247770,G__247771,G__247772,G__247773,G__247774,G__247775,G__247776,G__247777,G__247778,G__247779,G__247780,G__247781,G__247782,G__247783,G__247784,G__247785,G__247786,G__247787,G__247788,G__247789,G__247790,G__247791,G__247792,G__247793,G__247794,G__247795,G__247796,G__247797,G__247798,G__247799,G__247800,G__247801,G__247802,G__247803,G__247804,G__247805,G__247806,G__247807,G__247808,G__247809,G__247810,G__247811,G__247812,G__247813,G__247814,G__247815,G__247816,G__247817) : tailrecursion.hoplon.pre.call(null,G__247747,G__247748,G__247749,G__247750,G__247751,G__247752,G__247753,G__247754,G__247755,G__247756,G__247757,G__247758,G__247759,G__247760,G__247761,G__247762,G__247763,G__247764,G__247765,G__247766,G__247767,G__247768,G__247769,G__247770,G__247771,G__247772,G__247773,G__247774,G__247775,G__247776,G__247777,G__247778,G__247779,G__247780,G__247781,G__247782,G__247783,G__247784,G__247785,G__247786,G__247787,G__247788,G__247789,G__247790,G__247791,G__247792,G__247793,G__247794,G__247795,G__247796,G__247797,G__247798,G__247799,G__247800,G__247801,G__247802,G__247803,G__247804,G__247805,G__247806,G__247807,G__247808,G__247809,G__247810,G__247811,G__247812,G__247813,G__247814,G__247815,G__247816,G__247817));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__247745,G__247746) : tailrecursion.hoplon.div.call(null,G__247745,G__247746));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__247744) : tailrecursion.hoplon.div.call(null,G__247744));
})(),(function (){var G__247892 = cljs.core.PersistentArrayMap.EMPTY;
var G__247893 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: Due to the fact that Clojure is not tail-recursive, in order to avoid a stack overflow, we want to avoid recursion whenever possible. These are the perils of working with a hosted language."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247892,G__247893) : tailrecursion.hoplon.markdown.para_node.call(null,G__247892,G__247893));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247596;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247595;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247594;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247593;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(17)], null),(function (){var _STAR_references_STAR_247894 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247895 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_247896 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_247897 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__247898 = cljs.core.PersistentArrayMap.EMPTY;
var G__247899 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The exponentiation algorithms in this section are based on performing exponentiation by means of repeated multiplication. In a similar way, one can perform integer multiplication by means of repeated addition. The following multiplication procedure (in which it is assumed that our language can only add, not multiply) is analogous to the ",(function (){var G__247900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expt"], null);
var G__247901 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__247900,G__247901) : tailrecursion.hoplon.markdown.code_node.call(null,G__247900,G__247901));
})()," procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__247898,G__247899) : tailrecursion.hoplon.markdown.para_node.call(null,G__247898,G__247899));
})(),(function (){var G__247965 = (function (){var G__247966 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__247967 = (function (){var G__247968 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__247969 = "(";
var G__247970 = (function (){var G__247997 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__247998 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247997,G__247998) : tailrecursion.hoplon.span.call(null,G__247997,G__247998));
})();
var G__247971 = (function (){var G__247999 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248000 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__247999,G__248000) : tailrecursion.hoplon.span.call(null,G__247999,G__248000));
})();
var G__247972 = "[";
var G__247973 = (function (){var G__248001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248002 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248001,G__248002) : tailrecursion.hoplon.span.call(null,G__248001,G__248002));
})();
var G__247974 = " ";
var G__247975 = (function (){var G__248003 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248004 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248003,G__248004) : tailrecursion.hoplon.span.call(null,G__248003,G__248004));
})();
var G__247976 = "]\n  (";
var G__247977 = (function (){var G__248005 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__248006 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248005,G__248006) : tailrecursion.hoplon.span.call(null,G__248005,G__248006));
})();
var G__247978 = "(";
var G__247979 = (function (){var G__248007 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248008 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248007,G__248008) : tailrecursion.hoplon.span.call(null,G__248007,G__248008));
})();
var G__247980 = (function (){var G__248009 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248010 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248009,G__248010) : tailrecursion.hoplon.span.call(null,G__248009,G__248010));
})();
var G__247981 = " ";
var G__247982 = (function (){var G__248011 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248012 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248011,G__248012) : tailrecursion.hoplon.span.call(null,G__248011,G__248012));
})();
var G__247983 = ")\n      ";
var G__247984 = (function (){var G__248013 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248014 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248013,G__248014) : tailrecursion.hoplon.span.call(null,G__248013,G__248014));
})();
var G__247985 = "\n      (";
var G__247986 = (function (){var G__248015 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248016 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248015,G__248016) : tailrecursion.hoplon.span.call(null,G__248015,G__248016));
})();
var G__247987 = (function (){var G__248017 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248018 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248017,G__248018) : tailrecursion.hoplon.span.call(null,G__248017,G__248018));
})();
var G__247988 = " (";
var G__247989 = (function (){var G__248019 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248020 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248019,G__248020) : tailrecursion.hoplon.span.call(null,G__248019,G__248020));
})();
var G__247990 = (function (){var G__248021 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248022 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248021,G__248022) : tailrecursion.hoplon.span.call(null,G__248021,G__248022));
})();
var G__247991 = " (";
var G__247992 = (function (){var G__248023 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248024 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248023,G__248024) : tailrecursion.hoplon.span.call(null,G__248023,G__248024));
})();
var G__247993 = (function (){var G__248025 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248026 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248025,G__248026) : tailrecursion.hoplon.span.call(null,G__248025,G__248026));
})();
var G__247994 = " ";
var G__247995 = (function (){var G__248027 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248028 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248027,G__248028) : tailrecursion.hoplon.span.call(null,G__248027,G__248028));
})();
var G__247996 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$29(G__247968,G__247969,G__247970,G__247971,G__247972,G__247973,G__247974,G__247975,G__247976,G__247977,G__247978,G__247979,G__247980,G__247981,G__247982,G__247983,G__247984,G__247985,G__247986,G__247987,G__247988,G__247989,G__247990,G__247991,G__247992,G__247993,G__247994,G__247995,G__247996) : tailrecursion.hoplon.pre.call(null,G__247968,G__247969,G__247970,G__247971,G__247972,G__247973,G__247974,G__247975,G__247976,G__247977,G__247978,G__247979,G__247980,G__247981,G__247982,G__247983,G__247984,G__247985,G__247986,G__247987,G__247988,G__247989,G__247990,G__247991,G__247992,G__247993,G__247994,G__247995,G__247996));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__247966,G__247967) : tailrecursion.hoplon.div.call(null,G__247966,G__247967));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__247965) : tailrecursion.hoplon.div.call(null,G__247965));
})(),(function (){var G__248029 = cljs.core.PersistentArrayMap.EMPTY;
var G__248030 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm takes a number of steps that is linear in ",(function (){var G__248031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"b"], null);
var G__248032 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__248031,G__248032) : tailrecursion.hoplon.markdown.code_node.call(null,G__248031,G__248032));
})(),". Now suppose we include, together with addition, operations ",(function (){var G__248033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"double"], null);
var G__248034 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__248033,G__248034) : tailrecursion.hoplon.markdown.code_node.call(null,G__248033,G__248034));
})(),", which doubles an integer, and ",(function (){var G__248035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"halve"], null);
var G__248036 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__248035,G__248036) : tailrecursion.hoplon.markdown.code_node.call(null,G__248035,G__248036));
})(),", which divides an (even) integer by 2. Using these, design a multiplication procedure analogous to ",(function (){var G__248037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__248038 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__248037,G__248038) : tailrecursion.hoplon.markdown.code_node.call(null,G__248037,G__248038));
})()," that uses a logarithmic number of steps."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248029,G__248030) : tailrecursion.hoplon.markdown.para_node.call(null,G__248029,G__248030));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247897;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247896;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_247895;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_247894;
}})(),book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_248039 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248040 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_248041 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248042 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__248186 = (function (){var G__248187 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__248188 = (function (){var G__248189 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__248190 = "(";
var G__248191 = (function (){var G__248258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__248259 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248258,G__248259) : tailrecursion.hoplon.span.call(null,G__248258,G__248259));
})();
var G__248192 = (function (){var G__248260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248261 = "fast-mult";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248260,G__248261) : tailrecursion.hoplon.span.call(null,G__248260,G__248261));
})();
var G__248193 = " [";
var G__248194 = (function (){var G__248262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248263 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248262,G__248263) : tailrecursion.hoplon.span.call(null,G__248262,G__248263));
})();
var G__248195 = " ";
var G__248196 = (function (){var G__248264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248265 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248264,G__248265) : tailrecursion.hoplon.span.call(null,G__248264,G__248265));
})();
var G__248197 = "]\n  (";
var G__248198 = (function (){var G__248266 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__248267 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248266,G__248267) : tailrecursion.hoplon.span.call(null,G__248266,G__248267));
})();
var G__248199 = "[";
var G__248200 = (function (){var G__248268 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248269 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248268,G__248269) : tailrecursion.hoplon.span.call(null,G__248268,G__248269));
})();
var G__248201 = " ";
var G__248202 = (function (){var G__248270 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248271 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248270,G__248271) : tailrecursion.hoplon.span.call(null,G__248270,G__248271));
})();
var G__248203 = "\n         ";
var G__248204 = (function (){var G__248272 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248273 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248272,G__248273) : tailrecursion.hoplon.span.call(null,G__248272,G__248273));
})();
var G__248205 = " ";
var G__248206 = (function (){var G__248274 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248275 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248274,G__248275) : tailrecursion.hoplon.span.call(null,G__248274,G__248275));
})();
var G__248207 = "\n         ";
var G__248208 = (function (){var G__248276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248277 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248276,G__248277) : tailrecursion.hoplon.span.call(null,G__248276,G__248277));
})();
var G__248209 = "   ";
var G__248210 = (function (){var G__248278 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248279 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248278,G__248279) : tailrecursion.hoplon.span.call(null,G__248278,G__248279));
})();
var G__248211 = "]\n    (";
var G__248212 = (function (){var G__248280 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248281 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248280,G__248281) : tailrecursion.hoplon.span.call(null,G__248280,G__248281));
})();
var G__248213 = "(";
var G__248214 = (function (){var G__248282 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248283 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248282,G__248283) : tailrecursion.hoplon.span.call(null,G__248282,G__248283));
})();
var G__248215 = (function (){var G__248284 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248285 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248284,G__248285) : tailrecursion.hoplon.span.call(null,G__248284,G__248285));
})();
var G__248216 = " ";
var G__248217 = (function (){var G__248286 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248287 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248286,G__248287) : tailrecursion.hoplon.span.call(null,G__248286,G__248287));
})();
var G__248218 = ") ";
var G__248219 = (function (){var G__248288 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248289 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248288,G__248289) : tailrecursion.hoplon.span.call(null,G__248288,G__248289));
})();
var G__248220 = "\n          (";
var G__248221 = (function (){var G__248290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248291 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248290,G__248291) : tailrecursion.hoplon.span.call(null,G__248290,G__248291));
})();
var G__248222 = "(";
var G__248223 = (function (){var G__248292 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248293 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248292,G__248293) : tailrecursion.hoplon.span.call(null,G__248292,G__248293));
})();
var G__248224 = " ";
var G__248225 = (function (){var G__248294 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248295 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248294,G__248295) : tailrecursion.hoplon.span.call(null,G__248294,G__248295));
})();
var G__248226 = " ";
var G__248227 = (function (){var G__248296 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248297 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248296,G__248297) : tailrecursion.hoplon.span.call(null,G__248296,G__248297));
})();
var G__248228 = ") ";
var G__248229 = (function (){var G__248298 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248299 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248298,G__248299) : tailrecursion.hoplon.span.call(null,G__248298,G__248299));
})();
var G__248230 = ") (";
var G__248231 = (function (){var G__248300 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248301 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248300,G__248301) : tailrecursion.hoplon.span.call(null,G__248300,G__248301));
})();
var G__248232 = " (";
var G__248233 = (function (){var G__248302 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248303 = "halve";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248302,G__248303) : tailrecursion.hoplon.span.call(null,G__248302,G__248303));
})();
var G__248234 = " ";
var G__248235 = (function (){var G__248304 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248305 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248304,G__248305) : tailrecursion.hoplon.span.call(null,G__248304,G__248305));
})();
var G__248236 = ") (";
var G__248237 = (function (){var G__248306 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248307 = "double ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248306,G__248307) : tailrecursion.hoplon.span.call(null,G__248306,G__248307));
})();
var G__248238 = (function (){var G__248308 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248309 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248308,G__248309) : tailrecursion.hoplon.span.call(null,G__248308,G__248309));
})();
var G__248239 = ") ";
var G__248240 = (function (){var G__248310 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248311 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248310,G__248311) : tailrecursion.hoplon.span.call(null,G__248310,G__248311));
})();
var G__248241 = ")\n          ";
var G__248242 = (function (){var G__248312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248313 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248312,G__248313) : tailrecursion.hoplon.span.call(null,G__248312,G__248313));
})();
var G__248243 = " (";
var G__248244 = (function (){var G__248314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248315 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248314,G__248315) : tailrecursion.hoplon.span.call(null,G__248314,G__248315));
})();
var G__248245 = " (";
var G__248246 = (function (){var G__248316 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248317 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248316,G__248317) : tailrecursion.hoplon.span.call(null,G__248316,G__248317));
})();
var G__248247 = (function (){var G__248318 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248319 = "thing1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248318,G__248319) : tailrecursion.hoplon.span.call(null,G__248318,G__248319));
})();
var G__248248 = " ";
var G__248249 = (function (){var G__248320 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248321 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248320,G__248321) : tailrecursion.hoplon.span.call(null,G__248320,G__248321));
})();
var G__248250 = ") ";
var G__248251 = (function (){var G__248322 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248323 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248322,G__248323) : tailrecursion.hoplon.span.call(null,G__248322,G__248323));
})();
var G__248252 = " (";
var G__248253 = (function (){var G__248324 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248325 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248324,G__248325) : tailrecursion.hoplon.span.call(null,G__248324,G__248325));
})();
var G__248254 = (function (){var G__248326 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248327 = "thing2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248326,G__248327) : tailrecursion.hoplon.span.call(null,G__248326,G__248327));
})();
var G__248255 = " ";
var G__248256 = (function (){var G__248328 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248329 = "accu";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248328,G__248329) : tailrecursion.hoplon.span.call(null,G__248328,G__248329));
})();
var G__248257 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$69(G__248189,G__248190,G__248191,G__248192,G__248193,G__248194,G__248195,G__248196,G__248197,G__248198,G__248199,G__248200,G__248201,G__248202,G__248203,G__248204,G__248205,G__248206,G__248207,G__248208,G__248209,G__248210,G__248211,G__248212,G__248213,G__248214,G__248215,G__248216,G__248217,G__248218,G__248219,G__248220,G__248221,G__248222,G__248223,G__248224,G__248225,G__248226,G__248227,G__248228,G__248229,G__248230,G__248231,G__248232,G__248233,G__248234,G__248235,G__248236,G__248237,G__248238,G__248239,G__248240,G__248241,G__248242,G__248243,G__248244,G__248245,G__248246,G__248247,G__248248,G__248249,G__248250,G__248251,G__248252,G__248253,G__248254,G__248255,G__248256,G__248257) : tailrecursion.hoplon.pre.call(null,G__248189,G__248190,G__248191,G__248192,G__248193,G__248194,G__248195,G__248196,G__248197,G__248198,G__248199,G__248200,G__248201,G__248202,G__248203,G__248204,G__248205,G__248206,G__248207,G__248208,G__248209,G__248210,G__248211,G__248212,G__248213,G__248214,G__248215,G__248216,G__248217,G__248218,G__248219,G__248220,G__248221,G__248222,G__248223,G__248224,G__248225,G__248226,G__248227,G__248228,G__248229,G__248230,G__248231,G__248232,G__248233,G__248234,G__248235,G__248236,G__248237,G__248238,G__248239,G__248240,G__248241,G__248242,G__248243,G__248244,G__248245,G__248246,G__248247,G__248248,G__248249,G__248250,G__248251,G__248252,G__248253,G__248254,G__248255,G__248256,G__248257));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__248187,G__248188) : tailrecursion.hoplon.div.call(null,G__248187,G__248188));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__248186) : tailrecursion.hoplon.div.call(null,G__248186));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248042;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248041;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248040;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248039;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(18)], null),(function (){var _STAR_references_STAR_248330 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248331 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_248332 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248333 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__248334 = cljs.core.PersistentArrayMap.EMPTY;
var G__248335 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using the results of exercises 1.16 and 1.17, devise a procedure that generates an iterative process for multiplying two integers in terms of adding, doubling, and halving and uses a logarithmic number of steps.",(function (){var G__248336 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__248337 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This algorithm, which is sometimes known as the ",(function (){var G__248338 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__248339 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Russian peasant method"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__248338,G__248339) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__248338,G__248339));
})()," of multiplication, is ancient. Examples of its use are found in the Rhind Papyrus, one of the two oldest mathematical documents in existence, written about 1700 B.C. (and copied from an even older document) by an Egyptian scribe named A",(function (){var G__248340 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248341 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248340,G__248341) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248340,G__248341));
})(),"h-mose."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__248336,G__248337) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__248336,G__248337));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248334,G__248335) : tailrecursion.hoplon.markdown.para_node.call(null,G__248334,G__248335));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248333;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248332;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248331;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248330;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_248342 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248343 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_248344 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248345 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__248346 = cljs.core.PersistentArrayMap.EMPTY;
var G__248347 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It",(function (){var G__248348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248349 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248348,G__248349) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248348,G__248349));
})(),"s exactly the same as the one above."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248346,G__248347) : tailrecursion.hoplon.markdown.para_node.call(null,G__248346,G__248347));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248345;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248344;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248343;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248342;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(19)], null),(function (){var _STAR_references_STAR_248350 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248351 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_248352 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248353 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__248354 = cljs.core.PersistentArrayMap.EMPTY;
var G__248355 = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, ["There is a clever algorithm for computing the Fibonacci numbers in a logarithmic number of steps. Recall the transformation of the state variables \\(a\\) and \\(b\\) in the ",(function (){var G__248356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fib-iter"], null);
var G__248357 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__248356,G__248357) : tailrecursion.hoplon.markdown.code_node.call(null,G__248356,G__248357));
})()," process of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/2/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.2"], null)], 0)),": \\(a\\to a + b\\) and \\(b\\to a\\). Call this transformation \\(T\\), and observe that applying \\(T\\) over and over again \\(n\\) times, starting with 0 and 1, produces the pair \\(Fib(n)\\) and \\(Fib(n+1)\\). In other words, the Fibonacci numbers are produced by applying \\(T^n\\), the nth power of the transformation \\(T\\), starting with the pair (0,1). Now consider \\(T\\) to be the special case of \\(p = 0\\) and \\(q = 1\\) in a family of transformations \\(T_{pq}\\), where \\(T_{pq}\\) transforms the pair (a,b) according to \\(a\\to ap + bq\\) and \\(b\\to aq + bq + bp\\) (so that \\(T_{pq}(a,b)=(ap+bq,aq+bq+bp)\\)). Show that if we apply such a transformation \\(T_{pq}\\) twice, the effect is the same as using a single transformation \\(T_{p\u2019q\u2019}\\) of the same form, and compute \\(p\u2019\\) and \\(q\u2019\\) in terms of \\(p\\) and \\(q\\). This gives us an explicit way to square these transformations, and thus we can compute \\(T^n\\) using successive squaring, as in the ",(function (){var G__248358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__248359 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__248358,G__248359) : tailrecursion.hoplon.markdown.code_node.call(null,G__248358,G__248359));
})()," procedure. Put this all together to complete the following procedure, which runs in a logarithmic number of steps:",(function (){var G__248360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__248361 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This exercise was suggested to us by Joe Stoy, based on an example in Kaldewaij 1990."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__248360,G__248361) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__248360,G__248361));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248354,G__248355) : tailrecursion.hoplon.markdown.para_node.call(null,G__248354,G__248355));
})(),(function (){var G__248564 = (function (){var G__248565 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__248566 = (function (){var G__248567 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__248568 = "(";
var G__248569 = (function (){var G__248663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__248664 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248663,G__248664) : tailrecursion.hoplon.span.call(null,G__248663,G__248664));
})();
var G__248570 = (function (){var G__248665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248666 = "fib";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248665,G__248666) : tailrecursion.hoplon.span.call(null,G__248665,G__248666));
})();
var G__248571 = " [";
var G__248572 = (function (){var G__248667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248668 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248667,G__248668) : tailrecursion.hoplon.span.call(null,G__248667,G__248668));
})();
var G__248573 = "]\n  (";
var G__248574 = (function (){var G__248669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__248670 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248669,G__248670) : tailrecursion.hoplon.span.call(null,G__248669,G__248670));
})();
var G__248575 = "[";
var G__248576 = (function (){var G__248671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248672 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248671,G__248672) : tailrecursion.hoplon.span.call(null,G__248671,G__248672));
})();
var G__248577 = " ";
var G__248578 = (function (){var G__248673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248674 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248673,G__248674) : tailrecursion.hoplon.span.call(null,G__248673,G__248674));
})();
var G__248579 = "\n         ";
var G__248580 = (function (){var G__248675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248676 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248675,G__248676) : tailrecursion.hoplon.span.call(null,G__248675,G__248676));
})();
var G__248581 = " ";
var G__248582 = (function (){var G__248677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248678 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248677,G__248678) : tailrecursion.hoplon.span.call(null,G__248677,G__248678));
})();
var G__248583 = "\n         ";
var G__248584 = (function (){var G__248679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248680 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248679,G__248680) : tailrecursion.hoplon.span.call(null,G__248679,G__248680));
})();
var G__248585 = " ";
var G__248586 = (function (){var G__248681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248682 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248681,G__248682) : tailrecursion.hoplon.span.call(null,G__248681,G__248682));
})();
var G__248587 = "\n         ";
var G__248588 = (function (){var G__248683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248684 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248683,G__248684) : tailrecursion.hoplon.span.call(null,G__248683,G__248684));
})();
var G__248589 = " ";
var G__248590 = (function (){var G__248685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248686 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248685,G__248686) : tailrecursion.hoplon.span.call(null,G__248685,G__248686));
})();
var G__248591 = "\n         ";
var G__248592 = (function (){var G__248687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248688 = "count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248687,G__248688) : tailrecursion.hoplon.span.call(null,G__248687,G__248688));
})();
var G__248593 = (function (){var G__248689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248690 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248689,G__248690) : tailrecursion.hoplon.span.call(null,G__248689,G__248690));
})();
var G__248594 = "]\n    (";
var G__248595 = (function (){var G__248691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248692 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248691,G__248692) : tailrecursion.hoplon.span.call(null,G__248691,G__248692));
})();
var G__248596 = "(";
var G__248597 = (function (){var G__248693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248694 = "= count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248693,G__248694) : tailrecursion.hoplon.span.call(null,G__248693,G__248694));
})();
var G__248598 = (function (){var G__248695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248696 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248695,G__248696) : tailrecursion.hoplon.span.call(null,G__248695,G__248696));
})();
var G__248599 = ") ";
var G__248600 = (function (){var G__248697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248698 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248697,G__248698) : tailrecursion.hoplon.span.call(null,G__248697,G__248698));
})();
var G__248601 = "\n          (";
var G__248602 = (function (){var G__248699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248700 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248699,G__248700) : tailrecursion.hoplon.span.call(null,G__248699,G__248700));
})();
var G__248603 = " ";
var G__248604 = (function (){var G__248701 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248702 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248701,G__248702) : tailrecursion.hoplon.span.call(null,G__248701,G__248702));
})();
var G__248605 = ") (";
var G__248606 = (function (){var G__248703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248704 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248703,G__248704) : tailrecursion.hoplon.span.call(null,G__248703,G__248704));
})();
var G__248607 = " ";
var G__248608 = (function (){var G__248705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248706 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248705,G__248706) : tailrecursion.hoplon.span.call(null,G__248705,G__248706));
})();
var G__248609 = "  ";
var G__248610 = (function (){var G__248707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__248708 = "; compute p'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248707,G__248708) : tailrecursion.hoplon.span.call(null,G__248707,G__248708));
})();
var G__248611 = "\n                               ";
var G__248612 = (function (){var G__248709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248710 = "<??>";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248709,G__248710) : tailrecursion.hoplon.span.call(null,G__248709,G__248710));
})();
var G__248613 = "  ";
var G__248614 = (function (){var G__248711 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #408080; font-style: italic"], null);
var G__248712 = "; compute q'";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248711,G__248712) : tailrecursion.hoplon.span.call(null,G__248711,G__248712));
})();
var G__248615 = "\n                               ";
var G__248616 = (function (){var G__248713 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248714 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248713,G__248714) : tailrecursion.hoplon.span.call(null,G__248713,G__248714));
})();
var G__248617 = "\n                               ";
var G__248618 = (function (){var G__248715 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248716 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248715,G__248716) : tailrecursion.hoplon.span.call(null,G__248715,G__248716));
})();
var G__248619 = "\n                               (";
var G__248620 = (function (){var G__248717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248718 = "/ count ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248717,G__248718) : tailrecursion.hoplon.span.call(null,G__248717,G__248718));
})();
var G__248621 = (function (){var G__248719 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248720 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248719,G__248720) : tailrecursion.hoplon.span.call(null,G__248719,G__248720));
})();
var G__248622 = "))\n          ";
var G__248623 = (function (){var G__248721 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248722 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248721,G__248722) : tailrecursion.hoplon.span.call(null,G__248721,G__248722));
})();
var G__248624 = " (";
var G__248625 = (function (){var G__248723 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248724 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248723,G__248724) : tailrecursion.hoplon.span.call(null,G__248723,G__248724));
})();
var G__248626 = " ";
var G__248627 = (function (){var G__248725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248726 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248725,G__248726) : tailrecursion.hoplon.span.call(null,G__248725,G__248726));
})();
var G__248628 = "\n                       ";
var G__248629 = (function (){var G__248727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248728 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248727,G__248728) : tailrecursion.hoplon.span.call(null,G__248727,G__248728));
})();
var G__248630 = "\n                       (";
var G__248631 = (function (){var G__248729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248730 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248729,G__248730) : tailrecursion.hoplon.span.call(null,G__248729,G__248730));
})();
var G__248632 = "(";
var G__248633 = (function (){var G__248731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248732 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248731,G__248732) : tailrecursion.hoplon.span.call(null,G__248731,G__248732));
})();
var G__248634 = (function (){var G__248733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248734 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248733,G__248734) : tailrecursion.hoplon.span.call(null,G__248733,G__248734));
})();
var G__248635 = " ";
var G__248636 = (function (){var G__248735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248736 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248735,G__248736) : tailrecursion.hoplon.span.call(null,G__248735,G__248736));
})();
var G__248637 = ") (";
var G__248638 = (function (){var G__248737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248738 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248737,G__248738) : tailrecursion.hoplon.span.call(null,G__248737,G__248738));
})();
var G__248639 = (function (){var G__248739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248740 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248739,G__248740) : tailrecursion.hoplon.span.call(null,G__248739,G__248740));
})();
var G__248640 = " ";
var G__248641 = (function (){var G__248741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248742 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248741,G__248742) : tailrecursion.hoplon.span.call(null,G__248741,G__248742));
})();
var G__248642 = "))\n                       (";
var G__248643 = (function (){var G__248743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248744 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248743,G__248744) : tailrecursion.hoplon.span.call(null,G__248743,G__248744));
})();
var G__248644 = "(";
var G__248645 = (function (){var G__248745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248746 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248745,G__248746) : tailrecursion.hoplon.span.call(null,G__248745,G__248746));
})();
var G__248646 = (function (){var G__248747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248748 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248747,G__248748) : tailrecursion.hoplon.span.call(null,G__248747,G__248748));
})();
var G__248647 = " ";
var G__248648 = (function (){var G__248749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248750 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248749,G__248750) : tailrecursion.hoplon.span.call(null,G__248749,G__248750));
})();
var G__248649 = ") (";
var G__248650 = (function (){var G__248751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248752 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248751,G__248752) : tailrecursion.hoplon.span.call(null,G__248751,G__248752));
})();
var G__248651 = (function (){var G__248753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248754 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248753,G__248754) : tailrecursion.hoplon.span.call(null,G__248753,G__248754));
})();
var G__248652 = " ";
var G__248653 = (function (){var G__248755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248756 = "q";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248755,G__248756) : tailrecursion.hoplon.span.call(null,G__248755,G__248756));
})();
var G__248654 = ") (";
var G__248655 = (function (){var G__248757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248758 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248757,G__248758) : tailrecursion.hoplon.span.call(null,G__248757,G__248758));
})();
var G__248656 = (function (){var G__248759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248760 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248759,G__248760) : tailrecursion.hoplon.span.call(null,G__248759,G__248760));
})();
var G__248657 = " ";
var G__248658 = (function (){var G__248761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248762 = "p";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248761,G__248762) : tailrecursion.hoplon.span.call(null,G__248761,G__248762));
})();
var G__248659 = "))\n                       (";
var G__248660 = (function (){var G__248763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248764 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248763,G__248764) : tailrecursion.hoplon.span.call(null,G__248763,G__248764));
})();
var G__248661 = (function (){var G__248765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248766 = "count";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248765,G__248766) : tailrecursion.hoplon.span.call(null,G__248765,G__248766));
})();
var G__248662 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$96(G__248567,G__248568,G__248569,G__248570,G__248571,G__248572,G__248573,G__248574,G__248575,G__248576,G__248577,G__248578,G__248579,G__248580,G__248581,G__248582,G__248583,G__248584,G__248585,G__248586,G__248587,G__248588,G__248589,G__248590,G__248591,G__248592,G__248593,G__248594,G__248595,G__248596,G__248597,G__248598,G__248599,G__248600,G__248601,G__248602,G__248603,G__248604,G__248605,G__248606,G__248607,G__248608,G__248609,G__248610,G__248611,G__248612,G__248613,G__248614,G__248615,G__248616,G__248617,G__248618,G__248619,G__248620,G__248621,G__248622,G__248623,G__248624,G__248625,G__248626,G__248627,G__248628,G__248629,G__248630,G__248631,G__248632,G__248633,G__248634,G__248635,G__248636,G__248637,G__248638,G__248639,G__248640,G__248641,G__248642,G__248643,G__248644,G__248645,G__248646,G__248647,G__248648,G__248649,G__248650,G__248651,G__248652,G__248653,G__248654,G__248655,G__248656,G__248657,G__248658,G__248659,G__248660,G__248661,G__248662) : tailrecursion.hoplon.pre.call(null,G__248567,G__248568,G__248569,G__248570,G__248571,G__248572,G__248573,G__248574,G__248575,G__248576,G__248577,G__248578,G__248579,G__248580,G__248581,G__248582,G__248583,G__248584,G__248585,G__248586,G__248587,G__248588,G__248589,G__248590,G__248591,G__248592,G__248593,G__248594,G__248595,G__248596,G__248597,G__248598,G__248599,G__248600,G__248601,G__248602,G__248603,G__248604,G__248605,G__248606,G__248607,G__248608,G__248609,G__248610,G__248611,G__248612,G__248613,G__248614,G__248615,G__248616,G__248617,G__248618,G__248619,G__248620,G__248621,G__248622,G__248623,G__248624,G__248625,G__248626,G__248627,G__248628,G__248629,G__248630,G__248631,G__248632,G__248633,G__248634,G__248635,G__248636,G__248637,G__248638,G__248639,G__248640,G__248641,G__248642,G__248643,G__248644,G__248645,G__248646,G__248647,G__248648,G__248649,G__248650,G__248651,G__248652,G__248653,G__248654,G__248655,G__248656,G__248657,G__248658,G__248659,G__248660,G__248661,G__248662));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__248565,G__248566) : tailrecursion.hoplon.div.call(null,G__248565,G__248566));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__248564) : tailrecursion.hoplon.div.call(null,G__248564));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248353;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248352;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248351;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248350;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_248767 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248768 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_248769 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248770 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__248771 = cljs.core.PersistentArrayMap.EMPTY;
var G__248772 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Let",(function (){var G__248773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248774 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248773,G__248774) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248773,G__248774));
})(),"s find what \\(p",(function (){var G__248775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248776 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248775,G__248776) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248775,G__248776));
})(),",q",(function (){var G__248777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248778 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248777,G__248778) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248777,G__248778));
})(),"\\) are."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248771,G__248772) : tailrecursion.hoplon.markdown.para_node.call(null,G__248771,G__248772));
})(),(function (){var G__248779 = cljs.core.PersistentArrayMap.EMPTY;
var G__248780 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}T_{pq}^2(a,b)=&T_{pq}(ap+bq,aq+bq+bp) \\\\=&((ap+bq)p+(aq+bq+bp)q,(ap+bq)q+(aq+bq+bp)(q+p)) \\\\=&(ap^2+bpq+aq^2+bq^2+bpq, apq+bq^2+aq^2+apq+b(q+p)^2) \\\\=&(a(p^2+q^2)+b(q^2+2pq),a(q^2+2pq)+b(p^2+2q^2+2pq))\\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248779,G__248780) : tailrecursion.hoplon.markdown.para_node.call(null,G__248779,G__248780));
})(),(function (){var G__248781 = cljs.core.PersistentArrayMap.EMPTY;
var G__248782 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So that, \\(p",(function (){var G__248783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248784 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248783,G__248784) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248783,G__248784));
})(),"=p^2+q^2\\) and \\(q",(function (){var G__248785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248786 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248785,G__248786) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248785,G__248786));
})(),"=q^2+2pq\\) and our missing pieces of code are, ",(function (){var G__248787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (square p) (square q))"], null);
var G__248788 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__248787,G__248788) : tailrecursion.hoplon.markdown.code_node.call(null,G__248787,G__248788));
})()," and ",(function (){var G__248789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ (square q)\n(* 2 p q))"], null);
var G__248790 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__248789,G__248790) : tailrecursion.hoplon.markdown.code_node.call(null,G__248789,G__248790));
})()," respectively."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248781,G__248782) : tailrecursion.hoplon.markdown.para_node.call(null,G__248781,G__248782));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248770;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248769;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248768;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248767;
}})()], 0))], 0))], 0));
var G__238163 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Greatest Common Divisors"], null),(function (){var _STAR_references_STAR_248791 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248792 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_248793 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_248794 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__248795 = cljs.core.PersistentArrayMap.EMPTY;
var G__248796 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The greatest common divisor (GCD) of two integers \\(a\\) and \\(b\\) is defined to be the largest integer that divides both \\(a\\) and \\(b\\) with no remainder. For example, the GCD of 16 and 28 is 4. In chapter 2, when we investigate how to implement rational-number arithmetic, we will need to be able to compute GCDs in order to reduce rational numbers to lowest terms. (To reduce a rational number to lowest terms, we must divide both the numerator and the denominator by their GCD. For example, 16/28 reduces to 4/7.) One way to find the GCD of two integers is to factor them and search for common factors, but there is a famous algorithm that is much more efficient."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248795,G__248796) : tailrecursion.hoplon.markdown.para_node.call(null,G__248795,G__248796));
})(),(function (){var G__248797 = cljs.core.PersistentArrayMap.EMPTY;
var G__248798 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The idea of the algorithm is based on the observation that, if \\(r\\) is the remainder when \\(a\\) is divided by \\(b\\), then the common divisors of \\(a\\) and \\(b\\) are precisely the same as the common divisors of \\(b\\) and \\(r\\). Thus, we can use the equation"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248797,G__248798) : tailrecursion.hoplon.markdown.para_node.call(null,G__248797,G__248798));
})(),(function (){var G__248799 = cljs.core.PersistentArrayMap.EMPTY;
var G__248800 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$GCD(a,b)=GCD(b,r)$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248799,G__248800) : tailrecursion.hoplon.markdown.para_node.call(null,G__248799,G__248800));
})(),(function (){var G__248801 = cljs.core.PersistentArrayMap.EMPTY;
var G__248802 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["to successively reduce the problem of computing a GCD to the problem of computing the GCD of smaller and smaller pairs of integers. For example,"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248801,G__248802) : tailrecursion.hoplon.markdown.para_node.call(null,G__248801,G__248802));
})(),(function (){var G__248803 = cljs.core.PersistentArrayMap.EMPTY;
var G__248804 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["$$\\begin{align*}  GCD(206,40)=&GCD(40,6)  \\\\=&GCD(6,4)  \\\\=&GCD(4,2)  \\\\=&GCD(2,0)  \\\\=&2  \\end{align*}$$"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248803,G__248804) : tailrecursion.hoplon.markdown.para_node.call(null,G__248803,G__248804));
})(),(function (){var G__248805 = cljs.core.PersistentArrayMap.EMPTY;
var G__248806 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["reduces GCD(206,40) to GCD(2,0), which is 2. It is possible to show that starting with any two positive integers and performing repeated reductions will always eventually produce a pair where the second number is 0. Then the GCD is the other number in the pair. This method for computing the GCD is known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__248807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248808 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248807,G__248808) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248807,G__248808));
})(),"s Algorithm"], null)], 0)),".",(function (){var G__248809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__248810 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Euclid",(function (){var G__248811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248812 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248811,G__248812) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248811,G__248812));
})(),"s Algorithm is so called because it appears in Euclid",(function (){var G__248813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248814 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248813,G__248814) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248813,G__248814));
})(),"s ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Elements"], null)], 0))," (Book 7, ca. 300 B.C.). According to Knuth (1973), it can be considered the oldest known nontrivial algorithm. The ancient Egyptian method of multiplication (exercise 1.18) is surely older, but, as Knuth explains, Euclid",(function (){var G__248815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248816 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248815,G__248816) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248815,G__248816));
})(),"s algorithm is the oldest known to have been presented as a general algorithm, rather than as a set of illustrative examples."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__248809,G__248810) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__248809,G__248810));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248805,G__248806) : tailrecursion.hoplon.markdown.para_node.call(null,G__248805,G__248806));
})(),(function (){var G__248817 = cljs.core.PersistentArrayMap.EMPTY;
var G__248818 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["It is easy to express Euclid",(function (){var G__248819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__248820 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__248819,G__248820) : tailrecursion.hoplon.markdown.simple_node.call(null,G__248819,G__248820));
})(),"s Algorithm as a procedure:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248817,G__248818) : tailrecursion.hoplon.markdown.para_node.call(null,G__248817,G__248818));
})(),(function (){var G__248879 = (function (){var G__248880 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__248881 = (function (){var G__248882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__248883 = "(";
var G__248884 = (function (){var G__248910 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__248911 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248910,G__248911) : tailrecursion.hoplon.span.call(null,G__248910,G__248911));
})();
var G__248885 = (function (){var G__248912 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248913 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248912,G__248913) : tailrecursion.hoplon.span.call(null,G__248912,G__248913));
})();
var G__248886 = " [";
var G__248887 = (function (){var G__248914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248915 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248914,G__248915) : tailrecursion.hoplon.span.call(null,G__248914,G__248915));
})();
var G__248888 = " ";
var G__248889 = (function (){var G__248916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248917 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248916,G__248917) : tailrecursion.hoplon.span.call(null,G__248916,G__248917));
})();
var G__248890 = "]\n  (";
var G__248891 = (function (){var G__248918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__248919 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248918,G__248919) : tailrecursion.hoplon.span.call(null,G__248918,G__248919));
})();
var G__248892 = "(";
var G__248893 = (function (){var G__248920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__248921 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248920,G__248921) : tailrecursion.hoplon.span.call(null,G__248920,G__248921));
})();
var G__248894 = (function (){var G__248922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248923 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248922,G__248923) : tailrecursion.hoplon.span.call(null,G__248922,G__248923));
})();
var G__248895 = " ";
var G__248896 = (function (){var G__248924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__248925 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248924,G__248925) : tailrecursion.hoplon.span.call(null,G__248924,G__248925));
})();
var G__248897 = ")\n      ";
var G__248898 = (function (){var G__248926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248927 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248926,G__248927) : tailrecursion.hoplon.span.call(null,G__248926,G__248927));
})();
var G__248899 = "\n      (";
var G__248900 = (function (){var G__248928 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248929 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248928,G__248929) : tailrecursion.hoplon.span.call(null,G__248928,G__248929));
})();
var G__248901 = " ";
var G__248902 = (function (){var G__248930 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248931 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248930,G__248931) : tailrecursion.hoplon.span.call(null,G__248930,G__248931));
})();
var G__248903 = " (";
var G__248904 = (function (){var G__248932 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__248933 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248932,G__248933) : tailrecursion.hoplon.span.call(null,G__248932,G__248933));
})();
var G__248905 = " ";
var G__248906 = (function (){var G__248934 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248935 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248934,G__248935) : tailrecursion.hoplon.span.call(null,G__248934,G__248935));
})();
var G__248907 = " ";
var G__248908 = (function (){var G__248936 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__248937 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__248936,G__248937) : tailrecursion.hoplon.span.call(null,G__248936,G__248937));
})();
var G__248909 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__248882,G__248883,G__248884,G__248885,G__248886,G__248887,G__248888,G__248889,G__248890,G__248891,G__248892,G__248893,G__248894,G__248895,G__248896,G__248897,G__248898,G__248899,G__248900,G__248901,G__248902,G__248903,G__248904,G__248905,G__248906,G__248907,G__248908,G__248909) : tailrecursion.hoplon.pre.call(null,G__248882,G__248883,G__248884,G__248885,G__248886,G__248887,G__248888,G__248889,G__248890,G__248891,G__248892,G__248893,G__248894,G__248895,G__248896,G__248897,G__248898,G__248899,G__248900,G__248901,G__248902,G__248903,G__248904,G__248905,G__248906,G__248907,G__248908,G__248909));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__248880,G__248881) : tailrecursion.hoplon.div.call(null,G__248880,G__248881));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__248879) : tailrecursion.hoplon.div.call(null,G__248879));
})(),(function (){var G__248938 = cljs.core.PersistentArrayMap.EMPTY;
var G__248939 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Or using recur, "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__248938,G__248939) : tailrecursion.hoplon.markdown.para_node.call(null,G__248938,G__248939));
})(),(function (){var G__248998 = (function (){var G__248999 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__249000 = (function (){var G__249001 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__249002 = "(";
var G__249003 = (function (){var G__249029 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__249030 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249029,G__249030) : tailrecursion.hoplon.span.call(null,G__249029,G__249030));
})();
var G__249004 = (function (){var G__249031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249032 = "gcd";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249031,G__249032) : tailrecursion.hoplon.span.call(null,G__249031,G__249032));
})();
var G__249005 = " [";
var G__249006 = (function (){var G__249033 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249034 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249033,G__249034) : tailrecursion.hoplon.span.call(null,G__249033,G__249034));
})();
var G__249007 = " ";
var G__249008 = (function (){var G__249035 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249036 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249035,G__249036) : tailrecursion.hoplon.span.call(null,G__249035,G__249036));
})();
var G__249009 = "]\n  (";
var G__249010 = (function (){var G__249037 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__249038 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249037,G__249038) : tailrecursion.hoplon.span.call(null,G__249037,G__249038));
})();
var G__249011 = "(";
var G__249012 = (function (){var G__249039 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249040 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249039,G__249040) : tailrecursion.hoplon.span.call(null,G__249039,G__249040));
})();
var G__249013 = (function (){var G__249041 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249042 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249041,G__249042) : tailrecursion.hoplon.span.call(null,G__249041,G__249042));
})();
var G__249014 = " ";
var G__249015 = (function (){var G__249043 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249044 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249043,G__249044) : tailrecursion.hoplon.span.call(null,G__249043,G__249044));
})();
var G__249016 = ")\n      ";
var G__249017 = (function (){var G__249045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249046 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249045,G__249046) : tailrecursion.hoplon.span.call(null,G__249045,G__249046));
})();
var G__249018 = "\n      (";
var G__249019 = (function (){var G__249047 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249048 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249047,G__249048) : tailrecursion.hoplon.span.call(null,G__249047,G__249048));
})();
var G__249020 = " ";
var G__249021 = (function (){var G__249049 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249050 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249049,G__249050) : tailrecursion.hoplon.span.call(null,G__249049,G__249050));
})();
var G__249022 = " (";
var G__249023 = (function (){var G__249051 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249052 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249051,G__249052) : tailrecursion.hoplon.span.call(null,G__249051,G__249052));
})();
var G__249024 = " ";
var G__249025 = (function (){var G__249053 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249054 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249053,G__249054) : tailrecursion.hoplon.span.call(null,G__249053,G__249054));
})();
var G__249026 = " ";
var G__249027 = (function (){var G__249055 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249056 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249055,G__249056) : tailrecursion.hoplon.span.call(null,G__249055,G__249056));
})();
var G__249028 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$28(G__249001,G__249002,G__249003,G__249004,G__249005,G__249006,G__249007,G__249008,G__249009,G__249010,G__249011,G__249012,G__249013,G__249014,G__249015,G__249016,G__249017,G__249018,G__249019,G__249020,G__249021,G__249022,G__249023,G__249024,G__249025,G__249026,G__249027,G__249028) : tailrecursion.hoplon.pre.call(null,G__249001,G__249002,G__249003,G__249004,G__249005,G__249006,G__249007,G__249008,G__249009,G__249010,G__249011,G__249012,G__249013,G__249014,G__249015,G__249016,G__249017,G__249018,G__249019,G__249020,G__249021,G__249022,G__249023,G__249024,G__249025,G__249026,G__249027,G__249028));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__248999,G__249000) : tailrecursion.hoplon.div.call(null,G__248999,G__249000));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__248998) : tailrecursion.hoplon.div.call(null,G__248998));
})(),(function (){var G__249057 = cljs.core.PersistentArrayMap.EMPTY;
var G__249058 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This generates an iterative process, whose number of steps grows as the logarithm of the numbers involved."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249057,G__249058) : tailrecursion.hoplon.markdown.para_node.call(null,G__249057,G__249058));
})(),(function (){var G__249059 = cljs.core.PersistentArrayMap.EMPTY;
var G__249060 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The fact that the number of steps required by Euclid",(function (){var G__249061 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249062 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249061,G__249062) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249061,G__249062));
})(),"s Algorithm has a logarithmic growth bears an interesting relation to the Fibonacci numbers:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249059,G__249060) : tailrecursion.hoplon.markdown.para_node.call(null,G__249059,G__249060));
})(),(function (){var G__249063 = cljs.core.PersistentArrayMap.EMPTY;
var G__249064 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"**",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lam\u00E9",(function (){var G__249065 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249066 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249065,G__249066) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249065,G__249066));
})(),"s Theorem:"], null)], 0))," If Euclid",(function (){var G__249067 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249068 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249067,G__249068) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249067,G__249068));
})(),"s Algorithm requires \\(k\\) steps to compute the GCD of some pair, then the smaller number in the pair must be greater than or equal to the \\(k\\)th Fibonacci number.",(function (){var G__249069 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__249070 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can prove this by induction. Let",(function (){var G__249071 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249072 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249071,G__249072) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249071,G__249072));
})(),"s pick an arbitrary natural number \\(n\\), and assume that for any \\(k<n\\), if a pair of natural numbers \\(a>b>0\\) requires \\(k\\) steps of Euclid",(function (){var G__249073 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249074 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249073,G__249074) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249073,G__249074));
})(),"s algorithm to compute their GCD, then both \\(a\\) and \\(b\\) are greater than or equal to \\(Fib(k)\\). Now we take a pair, \\((a_n,b_n)\\) that takes \\(n\\) steps. If \\(n=0\\), then we know we started with zero and we",(function (){var G__249075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249076 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249075,G__249076) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249075,G__249076));
})(),"re done. If \\(n=1\\), then \\(b|a\\), and since neither of them are 0, we",(function (){var G__249077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249078 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249077,G__249078) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249077,G__249078));
})(),"re done. Otherwise, we note that every time we apply an iteration of the algorithm \\((a_n,b_n)\\to(a_{n-1},b_{n-1})\\), where \\(a_{n-1}=b_n\\) and \\(a_n=q\\cdot b_n+b_{n-1}\\) for some integer \\(q>0\\). Now we note, if we apply two iterations, \\((a_n,b_n)\\to (a_{n-2},b_{n-2})\\), where \\(a_{n-2}=b_{n-1}\\) and \\(a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\) and \\(s>0\\). So we",(function (){var G__249079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249080 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249079,G__249080) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249079,G__249080));
})(),"ve concluded \\(b_n=a_{n-1}=s\\cdot b_{n-1}+b_{n-2}\\geq b_{n-1}+b_{n-2}\\), which by assumption are greater than \\(Fib(n-1)\\) and \\(Fib(n-2)\\) respectively. Hence, \\(a_n>b_n\\geq Fib(n-1)+Fib(n-2)=Fib(n)\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__249069,G__249070) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__249069,G__249070));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249063,G__249064) : tailrecursion.hoplon.markdown.para_node.call(null,G__249063,G__249064));
})(),(function (){var G__249081 = cljs.core.PersistentArrayMap.EMPTY;
var G__249082 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can use this theorem to get an order-of-growth estimate for Euclid",(function (){var G__249083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249084 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249083,G__249084) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249083,G__249084));
})(),"s Algorithm. Let \\(n\\) be the smaller of the two inputs to the procedure. If the process takes \\(k\\) steps, then we must have \\(n\\geq Fib(k)\\approx\\phi^k/\\sqrt5\\). Therefore the smaller of steps \\(k\\) grows as the logarithm (to the base \\(\\phi\\)) of \\(n\\). Hence, the order of growth is \\(\\Theta(\\log n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249081,G__249082) : tailrecursion.hoplon.markdown.para_node.call(null,G__249081,G__249082));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248794;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248793;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_248792;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_248791;
}})()], 0));
var G__238164 = "";
var G__238165 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"20"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_249085 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249086 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_249087 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249088 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__249089 = cljs.core.PersistentArrayMap.EMPTY;
var G__249090 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The process that a procedure generates is of course dependent on the rules used by the interpreter. As an example, consider the iterative ",(function (){var G__249091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"gcd"], null);
var G__249092 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249091,G__249092) : tailrecursion.hoplon.markdown.code_node.call(null,G__249091,G__249092));
})()," procedure given above. Suppose we were to interpret this procedure using normal-order evaluation, as discussed in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/5/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.5"], null)], 0)),". (The normal-order-evaluation rule for ",(function (){var G__249093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__249094 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249093,G__249094) : tailrecursion.hoplon.markdown.code_node.call(null,G__249093,G__249094));
})()," is described in exercise 1.5.) Using the substitution method (for normal order), illustrate the process generated in evaluating ",(function (){var G__249095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(gcd 206\n40)"], null);
var G__249096 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249095,G__249096) : tailrecursion.hoplon.markdown.code_node.call(null,G__249095,G__249096));
})()," and indicate the ",(function (){var G__249097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__249098 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249097,G__249098) : tailrecursion.hoplon.markdown.code_node.call(null,G__249097,G__249098));
})()," operations that are actually performed. How many ",(function (){var G__249099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__249100 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249099,G__249100) : tailrecursion.hoplon.markdown.code_node.call(null,G__249099,G__249100));
})()," operations are actually performed in the normal-order evaluation of ",(function (){var G__249101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(gcd 206 40)"], null);
var G__249102 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249101,G__249102) : tailrecursion.hoplon.markdown.code_node.call(null,G__249101,G__249102));
})(),"? In the applicative-order evaluation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249089,G__249090) : tailrecursion.hoplon.markdown.para_node.call(null,G__249089,G__249090));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249088;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249087;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249086;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249085;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_249103 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249104 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_249105 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249106 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__249107 = cljs.core.PersistentArrayMap.EMPTY;
var G__249108 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For applicative order evaluation:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249107,G__249108) : tailrecursion.hoplon.markdown.para_node.call(null,G__249107,G__249108));
})(),(function (){var G__249292 = (function (){var G__249293 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__249294 = (function (){var G__249295 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__249296 = "(";
var G__249297 = (function (){var G__249386 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249387 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249386,G__249387) : tailrecursion.hoplon.span.call(null,G__249386,G__249387));
})();
var G__249298 = " ";
var G__249299 = (function (){var G__249388 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249389 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249388,G__249389) : tailrecursion.hoplon.span.call(null,G__249388,G__249389));
})();
var G__249300 = " ";
var G__249301 = (function (){var G__249390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249391 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249390,G__249391) : tailrecursion.hoplon.span.call(null,G__249390,G__249391));
})();
var G__249302 = ") ";
var G__249303 = (function (){var G__249392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249393 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249392,G__249393) : tailrecursion.hoplon.span.call(null,G__249392,G__249393));
})();
var G__249304 = "(";
var G__249305 = (function (){var G__249394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249395 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249394,G__249395) : tailrecursion.hoplon.span.call(null,G__249394,G__249395));
})();
var G__249306 = " ";
var G__249307 = (function (){var G__249396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249397 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249396,G__249397) : tailrecursion.hoplon.span.call(null,G__249396,G__249397));
})();
var G__249308 = " (";
var G__249309 = (function (){var G__249398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249399 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249398,G__249399) : tailrecursion.hoplon.span.call(null,G__249398,G__249399));
})();
var G__249310 = " ";
var G__249311 = (function (){var G__249400 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249401 = "206";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249400,G__249401) : tailrecursion.hoplon.span.call(null,G__249400,G__249401));
})();
var G__249312 = " ";
var G__249313 = (function (){var G__249402 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249403 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249402,G__249403) : tailrecursion.hoplon.span.call(null,G__249402,G__249403));
})();
var G__249314 = "))\n             ";
var G__249315 = (function (){var G__249404 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249405 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249404,G__249405) : tailrecursion.hoplon.span.call(null,G__249404,G__249405));
})();
var G__249316 = "(";
var G__249317 = (function (){var G__249406 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249407 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249406,G__249407) : tailrecursion.hoplon.span.call(null,G__249406,G__249407));
})();
var G__249318 = " ";
var G__249319 = (function (){var G__249408 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249409 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249408,G__249409) : tailrecursion.hoplon.span.call(null,G__249408,G__249409));
})();
var G__249320 = " ";
var G__249321 = (function (){var G__249410 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249411 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249410,G__249411) : tailrecursion.hoplon.span.call(null,G__249410,G__249411));
})();
var G__249322 = ")\n             ";
var G__249323 = (function (){var G__249412 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249413 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249412,G__249413) : tailrecursion.hoplon.span.call(null,G__249412,G__249413));
})();
var G__249324 = "(";
var G__249325 = (function (){var G__249414 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249415 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249414,G__249415) : tailrecursion.hoplon.span.call(null,G__249414,G__249415));
})();
var G__249326 = " ";
var G__249327 = (function (){var G__249416 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249417 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249416,G__249417) : tailrecursion.hoplon.span.call(null,G__249416,G__249417));
})();
var G__249328 = " (";
var G__249329 = (function (){var G__249418 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249419 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249418,G__249419) : tailrecursion.hoplon.span.call(null,G__249418,G__249419));
})();
var G__249330 = " ";
var G__249331 = (function (){var G__249420 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249421 = "40";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249420,G__249421) : tailrecursion.hoplon.span.call(null,G__249420,G__249421));
})();
var G__249332 = " ";
var G__249333 = (function (){var G__249422 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249423 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249422,G__249423) : tailrecursion.hoplon.span.call(null,G__249422,G__249423));
})();
var G__249334 = "))\n             ";
var G__249335 = (function (){var G__249424 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249425 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249424,G__249425) : tailrecursion.hoplon.span.call(null,G__249424,G__249425));
})();
var G__249336 = "(";
var G__249337 = (function (){var G__249426 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249427 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249426,G__249427) : tailrecursion.hoplon.span.call(null,G__249426,G__249427));
})();
var G__249338 = " ";
var G__249339 = (function (){var G__249428 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249429 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249428,G__249429) : tailrecursion.hoplon.span.call(null,G__249428,G__249429));
})();
var G__249340 = " ";
var G__249341 = (function (){var G__249430 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249431 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249430,G__249431) : tailrecursion.hoplon.span.call(null,G__249430,G__249431));
})();
var G__249342 = "\n             ";
var G__249343 = (function (){var G__249432 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249433 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249432,G__249433) : tailrecursion.hoplon.span.call(null,G__249432,G__249433));
})();
var G__249344 = "(";
var G__249345 = (function (){var G__249434 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249435 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249434,G__249435) : tailrecursion.hoplon.span.call(null,G__249434,G__249435));
})();
var G__249346 = " ";
var G__249347 = (function (){var G__249436 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249437 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249436,G__249437) : tailrecursion.hoplon.span.call(null,G__249436,G__249437));
})();
var G__249348 = " (";
var G__249349 = (function (){var G__249438 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249439 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249438,G__249439) : tailrecursion.hoplon.span.call(null,G__249438,G__249439));
})();
var G__249350 = " ";
var G__249351 = (function (){var G__249440 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249441 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249440,G__249441) : tailrecursion.hoplon.span.call(null,G__249440,G__249441));
})();
var G__249352 = " ";
var G__249353 = (function (){var G__249442 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249443 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249442,G__249443) : tailrecursion.hoplon.span.call(null,G__249442,G__249443));
})();
var G__249354 = "))\n             ";
var G__249355 = (function (){var G__249444 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249445 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249444,G__249445) : tailrecursion.hoplon.span.call(null,G__249444,G__249445));
})();
var G__249356 = "(";
var G__249357 = (function (){var G__249446 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249447 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249446,G__249447) : tailrecursion.hoplon.span.call(null,G__249446,G__249447));
})();
var G__249358 = " ";
var G__249359 = (function (){var G__249448 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249449 = "4";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249448,G__249449) : tailrecursion.hoplon.span.call(null,G__249448,G__249449));
})();
var G__249360 = " ";
var G__249361 = (function (){var G__249450 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249451 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249450,G__249451) : tailrecursion.hoplon.span.call(null,G__249450,G__249451));
})();
var G__249362 = ")\n             ";
var G__249363 = (function (){var G__249452 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249453 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249452,G__249453) : tailrecursion.hoplon.span.call(null,G__249452,G__249453));
})();
var G__249364 = "(";
var G__249365 = (function (){var G__249454 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249455 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249454,G__249455) : tailrecursion.hoplon.span.call(null,G__249454,G__249455));
})();
var G__249366 = " ";
var G__249367 = (function (){var G__249456 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249457 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249456,G__249457) : tailrecursion.hoplon.span.call(null,G__249456,G__249457));
})();
var G__249368 = " (";
var G__249369 = (function (){var G__249458 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249459 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249458,G__249459) : tailrecursion.hoplon.span.call(null,G__249458,G__249459));
})();
var G__249370 = " ";
var G__249371 = (function (){var G__249460 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249461 = "6";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249460,G__249461) : tailrecursion.hoplon.span.call(null,G__249460,G__249461));
})();
var G__249372 = " ";
var G__249373 = (function (){var G__249462 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249463 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249462,G__249463) : tailrecursion.hoplon.span.call(null,G__249462,G__249463));
})();
var G__249374 = "))\n             ";
var G__249375 = (function (){var G__249464 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249465 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249464,G__249465) : tailrecursion.hoplon.span.call(null,G__249464,G__249465));
})();
var G__249376 = "(";
var G__249377 = (function (){var G__249466 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249467 = "GCD";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249466,G__249467) : tailrecursion.hoplon.span.call(null,G__249466,G__249467));
})();
var G__249378 = " ";
var G__249379 = (function (){var G__249468 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249469 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249468,G__249469) : tailrecursion.hoplon.span.call(null,G__249468,G__249469));
})();
var G__249380 = " ";
var G__249381 = (function (){var G__249470 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249471 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249470,G__249471) : tailrecursion.hoplon.span.call(null,G__249470,G__249471));
})();
var G__249382 = ")\n             ";
var G__249383 = (function (){var G__249472 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249473 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249472,G__249473) : tailrecursion.hoplon.span.call(null,G__249472,G__249473));
})();
var G__249384 = (function (){var G__249474 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249475 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249474,G__249475) : tailrecursion.hoplon.span.call(null,G__249474,G__249475));
})();
var G__249385 = "\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$91(G__249295,G__249296,G__249297,G__249298,G__249299,G__249300,G__249301,G__249302,G__249303,G__249304,G__249305,G__249306,G__249307,G__249308,G__249309,G__249310,G__249311,G__249312,G__249313,G__249314,G__249315,G__249316,G__249317,G__249318,G__249319,G__249320,G__249321,G__249322,G__249323,G__249324,G__249325,G__249326,G__249327,G__249328,G__249329,G__249330,G__249331,G__249332,G__249333,G__249334,G__249335,G__249336,G__249337,G__249338,G__249339,G__249340,G__249341,G__249342,G__249343,G__249344,G__249345,G__249346,G__249347,G__249348,G__249349,G__249350,G__249351,G__249352,G__249353,G__249354,G__249355,G__249356,G__249357,G__249358,G__249359,G__249360,G__249361,G__249362,G__249363,G__249364,G__249365,G__249366,G__249367,G__249368,G__249369,G__249370,G__249371,G__249372,G__249373,G__249374,G__249375,G__249376,G__249377,G__249378,G__249379,G__249380,G__249381,G__249382,G__249383,G__249384,G__249385) : tailrecursion.hoplon.pre.call(null,G__249295,G__249296,G__249297,G__249298,G__249299,G__249300,G__249301,G__249302,G__249303,G__249304,G__249305,G__249306,G__249307,G__249308,G__249309,G__249310,G__249311,G__249312,G__249313,G__249314,G__249315,G__249316,G__249317,G__249318,G__249319,G__249320,G__249321,G__249322,G__249323,G__249324,G__249325,G__249326,G__249327,G__249328,G__249329,G__249330,G__249331,G__249332,G__249333,G__249334,G__249335,G__249336,G__249337,G__249338,G__249339,G__249340,G__249341,G__249342,G__249343,G__249344,G__249345,G__249346,G__249347,G__249348,G__249349,G__249350,G__249351,G__249352,G__249353,G__249354,G__249355,G__249356,G__249357,G__249358,G__249359,G__249360,G__249361,G__249362,G__249363,G__249364,G__249365,G__249366,G__249367,G__249368,G__249369,G__249370,G__249371,G__249372,G__249373,G__249374,G__249375,G__249376,G__249377,G__249378,G__249379,G__249380,G__249381,G__249382,G__249383,G__249384,G__249385));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__249293,G__249294) : tailrecursion.hoplon.div.call(null,G__249293,G__249294));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__249292) : tailrecursion.hoplon.div.call(null,G__249292));
})(),(function (){var G__249476 = cljs.core.PersistentArrayMap.EMPTY;
var G__249477 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["So, in applicative order, ",(function (){var G__249478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__249479 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249478,G__249479) : tailrecursion.hoplon.markdown.code_node.call(null,G__249478,G__249479));
})()," is only called four times."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249476,G__249477) : tailrecursion.hoplon.markdown.para_node.call(null,G__249476,G__249477));
})(),(function (){var G__249480 = cljs.core.PersistentArrayMap.EMPTY;
var G__249481 = new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, ["For normal-order evaluation it would start with ",(function (){var G__249482 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= 40 0)"], null);
var G__249483 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249482,G__249483) : tailrecursion.hoplon.markdown.code_node.call(null,G__249482,G__249483));
})()," which would lead it to ",(function (){var G__249484 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD 40 (mod 206 40))"], null);
var G__249485 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249484,G__249485) : tailrecursion.hoplon.markdown.code_node.call(null,G__249484,G__249485));
})()," without computing the ",(function (){var G__249486 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__249487 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249486,G__249487) : tailrecursion.hoplon.markdown.code_node.call(null,G__249486,G__249487));
})()," yet. Then it evaluates ",(function (){var G__249488 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod 206 40) 0)"], null);
var G__249489 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249488,G__249489) : tailrecursion.hoplon.markdown.code_node.call(null,G__249488,G__249489));
})()," with our first ",(function (){var G__249490 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__249491 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249490,G__249491) : tailrecursion.hoplon.markdown.code_node.call(null,G__249490,G__249491));
})()," evaluation. Then it calls ",(function (){var G__249492 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD (mod 206 40) (mod 40 (mod 206 40)))"], null);
var G__249493 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249492,G__249493) : tailrecursion.hoplon.markdown.code_node.call(null,G__249492,G__249493));
})()," without computing the ",(function (){var G__249494 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mods"], null);
var G__249495 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249494,G__249495) : tailrecursion.hoplon.markdown.code_node.call(null,G__249494,G__249495));
})(),", which evaluates ",(function (){var G__249496 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod 40 (mod 206\n40)) 0)"], null);
var G__249497 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249496,G__249497) : tailrecursion.hoplon.markdown.code_node.call(null,G__249496,G__249497));
})()," which gives us our second and third calls for ",(function (){var G__249498 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__249499 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249498,G__249499) : tailrecursion.hoplon.markdown.code_node.call(null,G__249498,G__249499));
})()," and calls ",(function (){var G__249500 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(GCD (mod 40 (mod 206 40)) (mod (mod 206 40) (mod 40 (mod 206\n40))))"], null);
var G__249501 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249500,G__249501) : tailrecursion.hoplon.markdown.code_node.call(null,G__249500,G__249501));
})()," without evaluating the arguments. This calls ",(function (){var G__249502 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(= (mod (mod\n206 40) (mod 40 (mod 206 40))) 0)"], null);
var G__249503 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249502,G__249503) : tailrecursion.hoplon.markdown.code_node.call(null,G__249502,G__249503));
})()," and so on."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249480,G__249481) : tailrecursion.hoplon.markdown.para_node.call(null,G__249480,G__249481));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249106;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249105;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249104;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249103;
}})()], 0))], 0))], 0));
var G__238166 = "";
var G__238167 = book.sicp.book_data.subsect.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Example: Testing for Primality"], null),(function (){var _STAR_references_STAR_249504 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249505 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_249506 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249507 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__249508 = cljs.core.PersistentArrayMap.EMPTY;
var G__249509 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This section describes two methods for checking the primality of an integer \\(n\\), one with order of growth \\(\\Theta(\\sqrt n)\\), and a ",(function (){var G__249510 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__249511 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__249510,G__249511) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__249510,G__249511));
})()," algorithm with order of growth \\(\\Theta(\\log n)\\). The exercises at the end of this section suggest programming projects based on these algorithms."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249508,G__249509) : tailrecursion.hoplon.markdown.para_node.call(null,G__249508,G__249509));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249507;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249506;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249505;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249504;
}})()], 0));
var G__238168 = "";
var G__238169 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Searching for Divisors"], null),(function (){var _STAR_references_STAR_249512 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249513 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_249514 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249515 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__249516 = cljs.core.PersistentArrayMap.EMPTY;
var G__249517 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Since ancient times, mathematicians have been fascinated by the problems concerning prime numbers, and many people have worked on the problem of determining ways to test if numbers are prime. One way to test if a number is prime is to find the number",(function (){var G__249518 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249519 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249518,G__249519) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249518,G__249519));
})(),"s divisors. The following program finds the smallest integral divisor (greater than 1) of a given number \\(n\\). It does this in a straightforward way, by testing \\(n\\) for divisibility by successive integers starting with 2."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249516,G__249517) : tailrecursion.hoplon.markdown.para_node.call(null,G__249516,G__249517));
})(),(function (){var G__249656 = (function (){var G__249657 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__249658 = (function (){var G__249659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__249660 = "(";
var G__249661 = (function (){var G__249725 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__249726 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249725,G__249726) : tailrecursion.hoplon.span.call(null,G__249725,G__249726));
})();
var G__249662 = (function (){var G__249727 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249728 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249727,G__249728) : tailrecursion.hoplon.span.call(null,G__249727,G__249728));
})();
var G__249663 = " [";
var G__249664 = (function (){var G__249729 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249730 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249729,G__249730) : tailrecursion.hoplon.span.call(null,G__249729,G__249730));
})();
var G__249665 = " ";
var G__249666 = (function (){var G__249731 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249732 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249731,G__249732) : tailrecursion.hoplon.span.call(null,G__249731,G__249732));
})();
var G__249667 = "]\n  (";
var G__249668 = (function (){var G__249733 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249734 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249733,G__249734) : tailrecursion.hoplon.span.call(null,G__249733,G__249734));
})();
var G__249669 = "(";
var G__249670 = (function (){var G__249735 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249736 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249735,G__249736) : tailrecursion.hoplon.span.call(null,G__249735,G__249736));
})();
var G__249671 = " ";
var G__249672 = (function (){var G__249737 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249738 = "b";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249737,G__249738) : tailrecursion.hoplon.span.call(null,G__249737,G__249738));
})();
var G__249673 = " ";
var G__249674 = (function (){var G__249739 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249740 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249739,G__249740) : tailrecursion.hoplon.span.call(null,G__249739,G__249740));
})();
var G__249675 = ") ";
var G__249676 = (function (){var G__249741 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249742 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249741,G__249742) : tailrecursion.hoplon.span.call(null,G__249741,G__249742));
})();
var G__249677 = "))\n(";
var G__249678 = (function (){var G__249743 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__249744 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249743,G__249744) : tailrecursion.hoplon.span.call(null,G__249743,G__249744));
})();
var G__249679 = (function (){var G__249745 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249746 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249745,G__249746) : tailrecursion.hoplon.span.call(null,G__249745,G__249746));
})();
var G__249680 = " [";
var G__249681 = (function (){var G__249747 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249748 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249747,G__249748) : tailrecursion.hoplon.span.call(null,G__249747,G__249748));
})();
var G__249682 = " ";
var G__249683 = (function (){var G__249749 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249750 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249749,G__249750) : tailrecursion.hoplon.span.call(null,G__249749,G__249750));
})();
var G__249684 = "]\n  (";
var G__249685 = (function (){var G__249751 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249752 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249751,G__249752) : tailrecursion.hoplon.span.call(null,G__249751,G__249752));
})();
var G__249686 = "(";
var G__249687 = (function (){var G__249753 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249754 = "> ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249753,G__249754) : tailrecursion.hoplon.span.call(null,G__249753,G__249754));
})();
var G__249688 = "(";
var G__249689 = (function (){var G__249755 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249756 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249755,G__249756) : tailrecursion.hoplon.span.call(null,G__249755,G__249756));
})();
var G__249690 = " ";
var G__249691 = (function (){var G__249757 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249758 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249757,G__249758) : tailrecursion.hoplon.span.call(null,G__249757,G__249758));
})();
var G__249692 = ") ";
var G__249693 = (function (){var G__249759 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249760 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249759,G__249760) : tailrecursion.hoplon.span.call(null,G__249759,G__249760));
})();
var G__249694 = ") ";
var G__249695 = (function (){var G__249761 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249762 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249761,G__249762) : tailrecursion.hoplon.span.call(null,G__249761,G__249762));
})();
var G__249696 = "\n        (";
var G__249697 = (function (){var G__249763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249764 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249763,G__249764) : tailrecursion.hoplon.span.call(null,G__249763,G__249764));
})();
var G__249698 = " ";
var G__249699 = (function (){var G__249765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249766 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249765,G__249766) : tailrecursion.hoplon.span.call(null,G__249765,G__249766));
})();
var G__249700 = " ";
var G__249701 = (function (){var G__249767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249768 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249767,G__249768) : tailrecursion.hoplon.span.call(null,G__249767,G__249768));
})();
var G__249702 = ") ";
var G__249703 = (function (){var G__249769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249770 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249769,G__249770) : tailrecursion.hoplon.span.call(null,G__249769,G__249770));
})();
var G__249704 = "\n        ";
var G__249705 = (function (){var G__249771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249772 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249771,G__249772) : tailrecursion.hoplon.span.call(null,G__249771,G__249772));
})();
var G__249706 = " (";
var G__249707 = (function (){var G__249773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249774 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249773,G__249774) : tailrecursion.hoplon.span.call(null,G__249773,G__249774));
})();
var G__249708 = " ";
var G__249709 = (function (){var G__249775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249776 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249775,G__249776) : tailrecursion.hoplon.span.call(null,G__249775,G__249776));
})();
var G__249710 = " (";
var G__249711 = (function (){var G__249777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249778 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249777,G__249778) : tailrecursion.hoplon.span.call(null,G__249777,G__249778));
})();
var G__249712 = (function (){var G__249779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249780 = "test-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249779,G__249780) : tailrecursion.hoplon.span.call(null,G__249779,G__249780));
})();
var G__249713 = "))))\n(";
var G__249714 = (function (){var G__249781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__249782 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249781,G__249782) : tailrecursion.hoplon.span.call(null,G__249781,G__249782));
})();
var G__249715 = (function (){var G__249783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249784 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249783,G__249784) : tailrecursion.hoplon.span.call(null,G__249783,G__249784));
})();
var G__249716 = " [";
var G__249717 = (function (){var G__249785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249786 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249785,G__249786) : tailrecursion.hoplon.span.call(null,G__249785,G__249786));
})();
var G__249718 = "]\n  (";
var G__249719 = (function (){var G__249787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249788 = "find-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249787,G__249788) : tailrecursion.hoplon.span.call(null,G__249787,G__249788));
})();
var G__249720 = " ";
var G__249721 = (function (){var G__249789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249790 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249789,G__249790) : tailrecursion.hoplon.span.call(null,G__249789,G__249790));
})();
var G__249722 = " ";
var G__249723 = (function (){var G__249791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__249792 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249791,G__249792) : tailrecursion.hoplon.span.call(null,G__249791,G__249792));
})();
var G__249724 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$66(G__249659,G__249660,G__249661,G__249662,G__249663,G__249664,G__249665,G__249666,G__249667,G__249668,G__249669,G__249670,G__249671,G__249672,G__249673,G__249674,G__249675,G__249676,G__249677,G__249678,G__249679,G__249680,G__249681,G__249682,G__249683,G__249684,G__249685,G__249686,G__249687,G__249688,G__249689,G__249690,G__249691,G__249692,G__249693,G__249694,G__249695,G__249696,G__249697,G__249698,G__249699,G__249700,G__249701,G__249702,G__249703,G__249704,G__249705,G__249706,G__249707,G__249708,G__249709,G__249710,G__249711,G__249712,G__249713,G__249714,G__249715,G__249716,G__249717,G__249718,G__249719,G__249720,G__249721,G__249722,G__249723,G__249724) : tailrecursion.hoplon.pre.call(null,G__249659,G__249660,G__249661,G__249662,G__249663,G__249664,G__249665,G__249666,G__249667,G__249668,G__249669,G__249670,G__249671,G__249672,G__249673,G__249674,G__249675,G__249676,G__249677,G__249678,G__249679,G__249680,G__249681,G__249682,G__249683,G__249684,G__249685,G__249686,G__249687,G__249688,G__249689,G__249690,G__249691,G__249692,G__249693,G__249694,G__249695,G__249696,G__249697,G__249698,G__249699,G__249700,G__249701,G__249702,G__249703,G__249704,G__249705,G__249706,G__249707,G__249708,G__249709,G__249710,G__249711,G__249712,G__249713,G__249714,G__249715,G__249716,G__249717,G__249718,G__249719,G__249720,G__249721,G__249722,G__249723,G__249724));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__249657,G__249658) : tailrecursion.hoplon.div.call(null,G__249657,G__249658));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__249656) : tailrecursion.hoplon.div.call(null,G__249656));
})(),(function (){var G__249793 = cljs.core.PersistentArrayMap.EMPTY;
var G__249794 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["We can test whether a number is prime as follows: \\(n\\) is prime if and only if \\(n\\) is its own smallest divisor."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249793,G__249794) : tailrecursion.hoplon.markdown.para_node.call(null,G__249793,G__249794));
})(),(function (){var G__249825 = (function (){var G__249826 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__249827 = (function (){var G__249828 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__249829 = "(";
var G__249830 = (function (){var G__249842 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__249843 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249842,G__249843) : tailrecursion.hoplon.span.call(null,G__249842,G__249843));
})();
var G__249831 = (function (){var G__249844 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249845 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249844,G__249845) : tailrecursion.hoplon.span.call(null,G__249844,G__249845));
})();
var G__249832 = " [";
var G__249833 = (function (){var G__249846 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249847 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249846,G__249847) : tailrecursion.hoplon.span.call(null,G__249846,G__249847));
})();
var G__249834 = "]\n  (";
var G__249835 = (function (){var G__249848 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__249849 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249848,G__249849) : tailrecursion.hoplon.span.call(null,G__249848,G__249849));
})();
var G__249836 = (function (){var G__249850 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249851 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249850,G__249851) : tailrecursion.hoplon.span.call(null,G__249850,G__249851));
})();
var G__249837 = " (";
var G__249838 = (function (){var G__249852 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__249853 = "smallest-divisor";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249852,G__249853) : tailrecursion.hoplon.span.call(null,G__249852,G__249853));
})();
var G__249839 = " ";
var G__249840 = (function (){var G__249854 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__249855 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__249854,G__249855) : tailrecursion.hoplon.span.call(null,G__249854,G__249855));
})();
var G__249841 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$14(G__249828,G__249829,G__249830,G__249831,G__249832,G__249833,G__249834,G__249835,G__249836,G__249837,G__249838,G__249839,G__249840,G__249841) : tailrecursion.hoplon.pre.call(null,G__249828,G__249829,G__249830,G__249831,G__249832,G__249833,G__249834,G__249835,G__249836,G__249837,G__249838,G__249839,G__249840,G__249841));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__249826,G__249827) : tailrecursion.hoplon.div.call(null,G__249826,G__249827));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__249825) : tailrecursion.hoplon.div.call(null,G__249825));
})(),(function (){var G__249856 = cljs.core.PersistentArrayMap.EMPTY;
var G__249857 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The end test for ",(function (){var G__249858 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"find-divisor"], null);
var G__249859 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__249858,G__249859) : tailrecursion.hoplon.markdown.code_node.call(null,G__249858,G__249859));
})()," is based on the fact that if \\(n\\) is not prime it must have a divisor less than or equal to \\(\\sqrt n\\).",(function (){var G__249860 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__249861 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(d\\) is a divisor of \\(n\\), then so id \\(n/d\\). But \\(d\\) and \\(n/d\\) cannot both be greater than \\(\\sqrt n\\)."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__249860,G__249861) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__249860,G__249861));
})()," This means that the algorithm need only test divisors between 1 and \\(\\sqrt n\\). Consequently, the number of steps required to identify \\(n\\) as prime will have order of growth \\(\\Theta (\\sqrt n)\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249856,G__249857) : tailrecursion.hoplon.markdown.para_node.call(null,G__249856,G__249857));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249515;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249514;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249513;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249512;
}})()], 0));
var G__238170 = "";
var G__238171 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"The Fermat Test"], null),(function (){var _STAR_references_STAR_249862 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249863 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_249864 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_249865 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__249866 = cljs.core.PersistentArrayMap.EMPTY;
var G__249867 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The \\(\\Theta(\\log n)\\) primality test is based on a result from number theory known as Fermat",(function (){var G__249868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249869 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249868,G__249869) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249868,G__249869));
})(),"s Little Theorem.",(function (){var G__249870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__249871 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pierre de Fermat (1601-1665) is considered to be the founder of modern number theory. He obtained many important number-theoretic results, but he usually announced just the results, without providing his proofs. Fermat",(function (){var G__249872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249873 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249872,G__249873) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249872,G__249873));
})(),"s Little Theorem was stated in a letter he wrote in 1640. The first published proof was given by Euler in 1736 (and an earlier, identical proof was discovered in the unpublished manuscripts of Leibniz). The most famous of Fermat",(function (){var G__249874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249875 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249874,G__249875) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249874,G__249875));
})(),"s results ",(function (){var G__249876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__249877 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249876,G__249877) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249876,G__249877));
})()," known as Fermat",(function (){var G__249878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249879 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249878,G__249879) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249878,G__249879));
})(),"s Last Theorem ",(function (){var G__249880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$endash], null);
var G__249881 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249880,G__249881) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249880,G__249881));
})()," was jotted down in 1637 in his copy of the book ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Arithmetic"], null)], 0))," (by the third-century Greek mathematician Diophantus) with the remark ",(function (){var G__249882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__249883 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I have discovered a truly remarkable proof, but this margin is too small to contain it."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__249882,G__249883) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__249882,G__249883));
})()," Finding a proof of Fermat",(function (){var G__249884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249885 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249884,G__249885) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249884,G__249885));
})(),"s Last Theorem became one of the most famous challenges in number theory. A complete solution was finally given in 1995 by Andrew Wiles of Princeton University."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__249870,G__249871) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__249870,G__249871));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249866,G__249867) : tailrecursion.hoplon.markdown.para_node.call(null,G__249866,G__249867));
})(),(function (){var G__249886 = cljs.core.PersistentArrayMap.EMPTY;
var G__249887 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"**",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,true], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Fermat",(function (){var G__249888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__249889 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__249888,G__249889) : tailrecursion.hoplon.markdown.simple_node.call(null,G__249888,G__249889));
})(),"s Little Theorem:"], null)], 0))," If \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a\\) raised to the \\(n\\)th power is congruent to \\(a\\) modulo \\(n\\)."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249886,G__249887) : tailrecursion.hoplon.markdown.para_node.call(null,G__249886,G__249887));
})(),(function (){var G__249890 = cljs.core.PersistentArrayMap.EMPTY;
var G__249891 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(Two numbers are said to be ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["congruent modulo"], null)], 0))," \\(n\\) if they both have the same remainder when divided by \\(n\\). The remainder of a number \\(a\\) when divided by \\(n\\) is also referred to as the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["remainder of a modulo n"], null)], 0))," or simply as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a modulo n"], null)], 0)),".)"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249890,G__249891) : tailrecursion.hoplon.markdown.para_node.call(null,G__249890,G__249891));
})(),(function (){var G__249892 = cljs.core.PersistentArrayMap.EMPTY;
var G__249893 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If \\(n\\) is not prime, then, in general, most of the numbers \\(a<n\\) will not satisfy the above relation. This leads to the following algorithm for testing primality: Given a number \\(n\\), pick a random number \\(a<n\\) and compute the remainder of \\(a^n\\) modulo \\(n\\). If the result is not equal to \\(a\\), then \\(n\\) is certainly not prime. If it is \\(a\\), then chances are good that \\(n\\) is prime. Now pick another random number \\(a\\) and test it with the same method. If it also satisfies the equation, then we can be even more confident that \\(n\\) is prime. By trying more and more values of \\(a\\), we can increase our confidence in the result. This algorithm is known as the Fermat test."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249892,G__249893) : tailrecursion.hoplon.markdown.para_node.call(null,G__249892,G__249893));
})(),(function (){var G__249894 = cljs.core.PersistentArrayMap.EMPTY;
var G__249895 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["To implement the Fermat test, we need a procedure that computes the exponential of a number modulo another number:"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__249894,G__249895) : tailrecursion.hoplon.markdown.para_node.call(null,G__249894,G__249895));
})(),(function (){var G__250015 = (function (){var G__250016 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__250017 = (function (){var G__250018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__250019 = "(";
var G__250020 = (function (){var G__250075 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250076 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250075,G__250076) : tailrecursion.hoplon.span.call(null,G__250075,G__250076));
})();
var G__250021 = (function (){var G__250077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250078 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250077,G__250078) : tailrecursion.hoplon.span.call(null,G__250077,G__250078));
})();
var G__250022 = " [";
var G__250023 = (function (){var G__250079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250080 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250079,G__250080) : tailrecursion.hoplon.span.call(null,G__250079,G__250080));
})();
var G__250024 = " ";
var G__250025 = (function (){var G__250081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250082 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250081,G__250082) : tailrecursion.hoplon.span.call(null,G__250081,G__250082));
})();
var G__250026 = " ";
var G__250027 = (function (){var G__250083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250084 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250083,G__250084) : tailrecursion.hoplon.span.call(null,G__250083,G__250084));
})();
var G__250028 = "]\n  (";
var G__250029 = (function (){var G__250085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250086 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250085,G__250086) : tailrecursion.hoplon.span.call(null,G__250085,G__250086));
})();
var G__250030 = "(";
var G__250031 = (function (){var G__250087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250088 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250087,G__250088) : tailrecursion.hoplon.span.call(null,G__250087,G__250088));
})();
var G__250032 = (function (){var G__250089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250090 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250089,G__250090) : tailrecursion.hoplon.span.call(null,G__250089,G__250090));
})();
var G__250033 = " ";
var G__250034 = (function (){var G__250091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250092 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250091,G__250092) : tailrecursion.hoplon.span.call(null,G__250091,G__250092));
})();
var G__250035 = ") ";
var G__250036 = (function (){var G__250093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250094 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250093,G__250094) : tailrecursion.hoplon.span.call(null,G__250093,G__250094));
})();
var G__250037 = "\n        (";
var G__250038 = (function (){var G__250095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250096 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250095,G__250096) : tailrecursion.hoplon.span.call(null,G__250095,G__250096));
})();
var G__250039 = " ";
var G__250040 = (function (){var G__250097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250098 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250097,G__250098) : tailrecursion.hoplon.span.call(null,G__250097,G__250098));
})();
var G__250041 = ") (";
var G__250042 = (function (){var G__250099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250100 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250099,G__250100) : tailrecursion.hoplon.span.call(null,G__250099,G__250100));
})();
var G__250043 = " (";
var G__250044 = (function (){var G__250101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250102 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250101,G__250102) : tailrecursion.hoplon.span.call(null,G__250101,G__250102));
})();
var G__250045 = " (";
var G__250046 = (function (){var G__250103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250104 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250103,G__250104) : tailrecursion.hoplon.span.call(null,G__250103,G__250104));
})();
var G__250047 = " ";
var G__250048 = (function (){var G__250105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250106 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250105,G__250106) : tailrecursion.hoplon.span.call(null,G__250105,G__250106));
})();
var G__250049 = " (";
var G__250050 = (function (){var G__250107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250108 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250107,G__250108) : tailrecursion.hoplon.span.call(null,G__250107,G__250108));
})();
var G__250051 = (function (){var G__250109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250110 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250109,G__250110) : tailrecursion.hoplon.span.call(null,G__250109,G__250110));
})();
var G__250052 = " ";
var G__250053 = (function (){var G__250111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250112 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250111,G__250112) : tailrecursion.hoplon.span.call(null,G__250111,G__250112));
})();
var G__250054 = "))) ";
var G__250055 = (function (){var G__250113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250114 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250113,G__250114) : tailrecursion.hoplon.span.call(null,G__250113,G__250114));
})();
var G__250056 = ")\n        ";
var G__250057 = (function (){var G__250115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250116 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250115,G__250116) : tailrecursion.hoplon.span.call(null,G__250115,G__250116));
})();
var G__250058 = " (";
var G__250059 = (function (){var G__250117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250118 = "remainder";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250117,G__250118) : tailrecursion.hoplon.span.call(null,G__250117,G__250118));
})();
var G__250060 = " (";
var G__250061 = (function (){var G__250119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250120 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250119,G__250120) : tailrecursion.hoplon.span.call(null,G__250119,G__250120));
})();
var G__250062 = (function (){var G__250121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250122 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250121,G__250122) : tailrecursion.hoplon.span.call(null,G__250121,G__250122));
})();
var G__250063 = " (";
var G__250064 = (function (){var G__250123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250124 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250123,G__250124) : tailrecursion.hoplon.span.call(null,G__250123,G__250124));
})();
var G__250065 = " ";
var G__250066 = (function (){var G__250125 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250126 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250125,G__250126) : tailrecursion.hoplon.span.call(null,G__250125,G__250126));
})();
var G__250067 = " (";
var G__250068 = (function (){var G__250127 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250128 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250127,G__250128) : tailrecursion.hoplon.span.call(null,G__250127,G__250128));
})();
var G__250069 = (function (){var G__250129 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250130 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250129,G__250130) : tailrecursion.hoplon.span.call(null,G__250129,G__250130));
})();
var G__250070 = " ";
var G__250071 = (function (){var G__250131 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250132 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250131,G__250132) : tailrecursion.hoplon.span.call(null,G__250131,G__250132));
})();
var G__250072 = "))) ";
var G__250073 = (function (){var G__250133 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250134 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250133,G__250134) : tailrecursion.hoplon.span.call(null,G__250133,G__250134));
})();
var G__250074 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$57(G__250018,G__250019,G__250020,G__250021,G__250022,G__250023,G__250024,G__250025,G__250026,G__250027,G__250028,G__250029,G__250030,G__250031,G__250032,G__250033,G__250034,G__250035,G__250036,G__250037,G__250038,G__250039,G__250040,G__250041,G__250042,G__250043,G__250044,G__250045,G__250046,G__250047,G__250048,G__250049,G__250050,G__250051,G__250052,G__250053,G__250054,G__250055,G__250056,G__250057,G__250058,G__250059,G__250060,G__250061,G__250062,G__250063,G__250064,G__250065,G__250066,G__250067,G__250068,G__250069,G__250070,G__250071,G__250072,G__250073,G__250074) : tailrecursion.hoplon.pre.call(null,G__250018,G__250019,G__250020,G__250021,G__250022,G__250023,G__250024,G__250025,G__250026,G__250027,G__250028,G__250029,G__250030,G__250031,G__250032,G__250033,G__250034,G__250035,G__250036,G__250037,G__250038,G__250039,G__250040,G__250041,G__250042,G__250043,G__250044,G__250045,G__250046,G__250047,G__250048,G__250049,G__250050,G__250051,G__250052,G__250053,G__250054,G__250055,G__250056,G__250057,G__250058,G__250059,G__250060,G__250061,G__250062,G__250063,G__250064,G__250065,G__250066,G__250067,G__250068,G__250069,G__250070,G__250071,G__250072,G__250073,G__250074));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__250016,G__250017) : tailrecursion.hoplon.div.call(null,G__250016,G__250017));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__250015) : tailrecursion.hoplon.div.call(null,G__250015));
})(),(function (){var G__250135 = cljs.core.PersistentArrayMap.EMPTY;
var G__250136 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__250137 = cljs.core.PersistentArrayMap.EMPTY;
var G__250138 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Note: This is not tail recursive!"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250137,G__250138) : tailrecursion.hoplon.markdown.para_node.call(null,G__250137,G__250138));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__250135,G__250136) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__250135,G__250136));
})(),(function (){var G__250139 = cljs.core.PersistentArrayMap.EMPTY;
var G__250140 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["This is very similar to the ",(function (){var G__250141 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-expt"], null);
var G__250142 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250141,G__250142) : tailrecursion.hoplon.markdown.code_node.call(null,G__250141,G__250142));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/sect/2/sub/4/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["section 1.2.4"], null)], 0)),". It uses successive squaring, so that the number of steps grows logarithmically with the exponent.",(function (){var G__250143 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__250144 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The reduction steps in the cases where the exponent \\(e\\) is greater than 1 are based on the fact that, for any integers \\(x, y\\), and \\(m\\), we can find the remainder of \\(x\\) times \\(y\\) modulo \\(m\\) by computing separately the remainders of \\(x\\) modulo \\(m\\) and \\(y\\) modulo \\(m\\), multiplying these, and then taking the remainder of the result modulo \\(m\\). For instance, in the case where \\(e\\) is even, we compute \\(b^{e/2}\\pmod m\\), square this, and take the remainder modulo m. This technique is useful because it means we can perform our computation without ever having to deal with numbers much larger than m. (Compare exercise 1.25.)"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__250143,G__250144) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__250143,G__250144));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250139,G__250140) : tailrecursion.hoplon.markdown.para_node.call(null,G__250139,G__250140));
})(),(function (){var G__250145 = cljs.core.PersistentArrayMap.EMPTY;
var G__250146 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The Fermat test is performed by choosing at randum a number \\(a\\) between 1 and \\(n-1\\) inclusive and checking whether the remainder modulo \\(n\\) of the \\(n\\)th power of \\(a\\) is equal to \\(a\\). The random number \\(a\\) is chosen using the procedure ",(function (){var G__250147 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rand-int"], null);
var G__250148 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250147,G__250148) : tailrecursion.hoplon.markdown.code_node.call(null,G__250147,G__250148));
})()," which returns a nonnegative integer less than its integer input. Hence to obtain a random number between 1 and \\(n-1\\), we call ",(function (){var G__250149 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"rand-int"], null);
var G__250150 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250149,G__250150) : tailrecursion.hoplon.markdown.code_node.call(null,G__250149,G__250150));
})()," with an input of \\(n-1\\) and add 1 to the result"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250145,G__250146) : tailrecursion.hoplon.markdown.para_node.call(null,G__250145,G__250146));
})(),(function (){var G__250208 = (function (){var G__250209 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__250210 = (function (){var G__250211 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__250212 = "(";
var G__250213 = (function (){var G__250238 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250239 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250238,G__250239) : tailrecursion.hoplon.span.call(null,G__250238,G__250239));
})();
var G__250214 = (function (){var G__250240 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250241 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250240,G__250241) : tailrecursion.hoplon.span.call(null,G__250240,G__250241));
})();
var G__250215 = " [";
var G__250216 = (function (){var G__250242 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250243 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250242,G__250243) : tailrecursion.hoplon.span.call(null,G__250242,G__250243));
})();
var G__250217 = "]\n  (";
var G__250218 = (function (){var G__250244 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250245 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250244,G__250245) : tailrecursion.hoplon.span.call(null,G__250244,G__250245));
})();
var G__250219 = "(";
var G__250220 = (function (){var G__250246 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250247 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250246,G__250247) : tailrecursion.hoplon.span.call(null,G__250246,G__250247));
})();
var G__250221 = " (";
var G__250222 = (function (){var G__250248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250249 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250248,G__250249) : tailrecursion.hoplon.span.call(null,G__250248,G__250249));
})();
var G__250223 = (function (){var G__250250 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250251 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250250,G__250251) : tailrecursion.hoplon.span.call(null,G__250250,G__250251));
})();
var G__250224 = " (";
var G__250225 = (function (){var G__250252 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250253 = "rand-int ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250252,G__250253) : tailrecursion.hoplon.span.call(null,G__250252,G__250253));
})();
var G__250226 = "(";
var G__250227 = (function (){var G__250254 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250255 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250254,G__250255) : tailrecursion.hoplon.span.call(null,G__250254,G__250255));
})();
var G__250228 = (function (){var G__250256 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250257 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250256,G__250257) : tailrecursion.hoplon.span.call(null,G__250256,G__250257));
})();
var G__250229 = " ";
var G__250230 = (function (){var G__250258 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250259 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250258,G__250259) : tailrecursion.hoplon.span.call(null,G__250258,G__250259));
})();
var G__250231 = ")))\n             ";
var G__250232 = (function (){var G__250260 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250261 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250260,G__250261) : tailrecursion.hoplon.span.call(null,G__250260,G__250261));
})();
var G__250233 = "\n             ";
var G__250234 = (function (){var G__250262 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250263 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250262,G__250263) : tailrecursion.hoplon.span.call(null,G__250262,G__250263));
})();
var G__250235 = ")\n     ";
var G__250236 = (function (){var G__250264 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250265 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250264,G__250265) : tailrecursion.hoplon.span.call(null,G__250264,G__250265));
})();
var G__250237 = ")\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$27(G__250211,G__250212,G__250213,G__250214,G__250215,G__250216,G__250217,G__250218,G__250219,G__250220,G__250221,G__250222,G__250223,G__250224,G__250225,G__250226,G__250227,G__250228,G__250229,G__250230,G__250231,G__250232,G__250233,G__250234,G__250235,G__250236,G__250237) : tailrecursion.hoplon.pre.call(null,G__250211,G__250212,G__250213,G__250214,G__250215,G__250216,G__250217,G__250218,G__250219,G__250220,G__250221,G__250222,G__250223,G__250224,G__250225,G__250226,G__250227,G__250228,G__250229,G__250230,G__250231,G__250232,G__250233,G__250234,G__250235,G__250236,G__250237));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__250209,G__250210) : tailrecursion.hoplon.div.call(null,G__250209,G__250210));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__250208) : tailrecursion.hoplon.div.call(null,G__250208));
})(),(function (){var G__250266 = cljs.core.PersistentArrayMap.EMPTY;
var G__250267 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The following procedure runs the test a given number of times, as specified by a parameter. Its value is true if the test succeeds every time, and false otherwise."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250266,G__250267) : tailrecursion.hoplon.markdown.para_node.call(null,G__250266,G__250267));
})(),(function (){var G__250349 = (function (){var G__250350 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__250351 = (function (){var G__250352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__250353 = "(";
var G__250354 = (function (){var G__250391 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250392 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250391,G__250392) : tailrecursion.hoplon.span.call(null,G__250391,G__250392));
})();
var G__250355 = (function (){var G__250393 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250394 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250393,G__250394) : tailrecursion.hoplon.span.call(null,G__250393,G__250394));
})();
var G__250356 = " [";
var G__250357 = (function (){var G__250395 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250396 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250395,G__250396) : tailrecursion.hoplon.span.call(null,G__250395,G__250396));
})();
var G__250358 = " ";
var G__250359 = (function (){var G__250397 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250398 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250397,G__250398) : tailrecursion.hoplon.span.call(null,G__250397,G__250398));
})();
var G__250360 = "]\n  (";
var G__250361 = (function (){var G__250399 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250400 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250399,G__250400) : tailrecursion.hoplon.span.call(null,G__250399,G__250400));
})();
var G__250362 = "[";
var G__250363 = (function (){var G__250401 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250402 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250401,G__250402) : tailrecursion.hoplon.span.call(null,G__250401,G__250402));
})();
var G__250364 = " ";
var G__250365 = (function (){var G__250403 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250404 = "times";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250403,G__250404) : tailrecursion.hoplon.span.call(null,G__250403,G__250404));
})();
var G__250366 = "]\n    (";
var G__250367 = (function (){var G__250405 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250406 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250405,G__250406) : tailrecursion.hoplon.span.call(null,G__250405,G__250406));
})();
var G__250368 = "(";
var G__250369 = (function (){var G__250407 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250408 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250407,G__250408) : tailrecursion.hoplon.span.call(null,G__250407,G__250408));
})();
var G__250370 = (function (){var G__250409 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250410 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250409,G__250410) : tailrecursion.hoplon.span.call(null,G__250409,G__250410));
})();
var G__250371 = " ";
var G__250372 = (function (){var G__250411 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250412 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250411,G__250412) : tailrecursion.hoplon.span.call(null,G__250411,G__250412));
})();
var G__250373 = ") ";
var G__250374 = (function (){var G__250413 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250414 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250413,G__250414) : tailrecursion.hoplon.span.call(null,G__250413,G__250414));
})();
var G__250375 = "\n          (";
var G__250376 = (function (){var G__250415 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250416 = "fermat-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250415,G__250416) : tailrecursion.hoplon.span.call(null,G__250415,G__250416));
})();
var G__250377 = " ";
var G__250378 = (function (){var G__250417 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250418 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250417,G__250418) : tailrecursion.hoplon.span.call(null,G__250417,G__250418));
})();
var G__250379 = ") (";
var G__250380 = (function (){var G__250419 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250420 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250419,G__250420) : tailrecursion.hoplon.span.call(null,G__250419,G__250420));
})();
var G__250381 = " (";
var G__250382 = (function (){var G__250421 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250422 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250421,G__250422) : tailrecursion.hoplon.span.call(null,G__250421,G__250422));
})();
var G__250383 = (function (){var G__250423 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250424 = "times-left";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250423,G__250424) : tailrecursion.hoplon.span.call(null,G__250423,G__250424));
})();
var G__250384 = " ";
var G__250385 = (function (){var G__250425 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250426 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250425,G__250426) : tailrecursion.hoplon.span.call(null,G__250425,G__250426));
})();
var G__250386 = "))\n          ";
var G__250387 = (function (){var G__250427 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250428 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250427,G__250428) : tailrecursion.hoplon.span.call(null,G__250427,G__250428));
})();
var G__250388 = " ";
var G__250389 = (function (){var G__250429 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250430 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250429,G__250430) : tailrecursion.hoplon.span.call(null,G__250429,G__250430));
})();
var G__250390 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$39(G__250352,G__250353,G__250354,G__250355,G__250356,G__250357,G__250358,G__250359,G__250360,G__250361,G__250362,G__250363,G__250364,G__250365,G__250366,G__250367,G__250368,G__250369,G__250370,G__250371,G__250372,G__250373,G__250374,G__250375,G__250376,G__250377,G__250378,G__250379,G__250380,G__250381,G__250382,G__250383,G__250384,G__250385,G__250386,G__250387,G__250388,G__250389,G__250390) : tailrecursion.hoplon.pre.call(null,G__250352,G__250353,G__250354,G__250355,G__250356,G__250357,G__250358,G__250359,G__250360,G__250361,G__250362,G__250363,G__250364,G__250365,G__250366,G__250367,G__250368,G__250369,G__250370,G__250371,G__250372,G__250373,G__250374,G__250375,G__250376,G__250377,G__250378,G__250379,G__250380,G__250381,G__250382,G__250383,G__250384,G__250385,G__250386,G__250387,G__250388,G__250389,G__250390));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__250350,G__250351) : tailrecursion.hoplon.div.call(null,G__250350,G__250351));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__250349) : tailrecursion.hoplon.div.call(null,G__250349));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249865;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249864;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_249863;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_249862;
}})()], 0));
var G__238172 = "";
var G__238173 = book.sicp.book_data.ssub.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"Probabilistic Methods"], null),(function (){var _STAR_references_STAR_250431 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250432 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_250433 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250434 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__250435 = cljs.core.PersistentArrayMap.EMPTY;
var G__250436 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Ther Fermat test differs in character from most familiar algorithms, in which one computes an answer that is guaranteed to be correct. Here, the answer obtained is only probably correct. More precisely, if \\(n\\) ever fails the Fermat test, we can be certain that \\(n\\) is not prime. But the fact that \\(n\\) passes the test, while an extremely strong indication, is still not a guarantee that \\(n\\) is prime. What we would like to say is that for any number \\(n\\), if we perform the test enough times and find that \\(n\\) always passes the test, then the probability of error in our primality test can be made as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250435,G__250436) : tailrecursion.hoplon.markdown.para_node.call(null,G__250435,G__250436));
})(),(function (){var G__250437 = cljs.core.PersistentArrayMap.EMPTY;
var G__250438 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unfortunately, this assertion is not quite correct. There do exist numbers that fool the Fermat test: numbers \\(n\\) that are note prime and yet have th property that \\(a^n\\) is congruent to \\(a\\) modulo \\(n\\) for all integers \\(a< n\\). Such numbers are extremely rare, so the Fermat test is quite reliable in practice.",(function (){var G__250439 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__250440 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Numbers that fool the Fermat test are called ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Carmichael numbers"], null)], 0)),", and little is known about them other than that they are extremely rare. There are 255 Carmichael numbers below 100,000,000. The smallest few are 561, 1105, 1729, 2465, 2821, and 6601. In testing primality of very large numbers chosen at random, the chance of stumbling upon a value that fools the Fermat test is less than the chance that cosmic radiation will cause the computer to make an error in carrying out a ",(function (){var G__250441 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__250442 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["correct"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__250441,G__250442) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__250441,G__250442));
})()," algorithm. Considering an algorithm to be inadequate for the first reason but not for the second illustrates the difference between mathematics and engineering."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__250439,G__250440) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__250439,G__250440));
})()," There are variations of the Fermat test that cannot be fooled. In these tests, as with the Fermat method, one tests the primality of an integer \\(n\\) by choosing a random integer \\(a< n\\) and checking some condition that depends upon \\(n\\) and \\(a\\). (See ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/exercise/28/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Exercise 1.28"], null)], 0))," for an example of such a test.) On the other hand, in contrast to the Fermat test, one can prove that, for any \\(n\\), the condition does not hold for most of the integers \\(a<n\\) unless \\(n\\) is prime. Thus, if \\(n\\) passes the test for some random choice of \\(a\\), the chances are better than even that \\(n\\) is prime. If \\(n\\) passes the test for two random choices of \\(a\\), the chances are better than 3 out of 4 that \\(n\\) is prime. By running the test with more and more randomly chosen values of \\(a\\) we can make the probability of error as small as we like."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250437,G__250438) : tailrecursion.hoplon.markdown.para_node.call(null,G__250437,G__250438));
})(),(function (){var G__250443 = cljs.core.PersistentArrayMap.EMPTY;
var G__250444 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The existence of tests for which one can prove that the chance of error becomes arbitrarily small has sparked interest in algorithms of this type, which have come to be known as ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["probabilistic algorithms"], null)], 0)),". There is a great deal of research activity in this area and probabilistic algorithms have been ruitfully applied to many fields.",(function (){var G__250445 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double_DASH_angle], null);
var G__250446 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One of the most striking applications of probabilistic prime testing has been to the field of cryptography. Although it is now computationally infeasible to factor an arbitrary 200-digit number, the primality of such a number can be checked in a few seconds with the Fermat test. This fact forms the basis of a technique for constructing ",(function (){var G__250447 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__250448 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["unbreakable codes"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__250447,G__250448) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__250447,G__250448));
})()," suggested by Rivest, Shamir, and Adleman (1977). The resulting ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["RSA algorithm"], null)], 0))," has become a widely used technique for enhancing the security of electronic communications. Because of this and related developments, the study of prime numbers, once considered the epitome of a topic in ",(function (){var G__250449 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__250450 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["pure"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__250449,G__250450) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__250449,G__250450));
})()," mathematics to be studied only for its own sake, now turns out to have important practical applications to cryptography, electronic funds transfer, and information retrieval."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__250445,G__250446) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__250445,G__250446));
})()], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250443,G__250444) : tailrecursion.hoplon.markdown.para_node.call(null,G__250443,G__250444));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250434;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250433;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250432;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250431;
}})()], 0));
var G__238174 = "";
var G__238175 = book.sicp.book_data.exercises.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$title,"21-28"], null),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(21)], null),(function (){var _STAR_references_STAR_250451 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250452 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_250453 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250454 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__250455 = cljs.core.PersistentArrayMap.EMPTY;
var G__250456 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Use the ",(function (){var G__250457 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__250458 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250457,G__250458) : tailrecursion.hoplon.markdown.code_node.call(null,G__250457,G__250458));
})()," procedure to find the smallest divisor of each of the following numbers: 199, 1999,19999."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250455,G__250456) : tailrecursion.hoplon.markdown.para_node.call(null,G__250455,G__250456));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250454;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250453;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250452;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250451;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_250459 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250460 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_250461 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250462 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__250463 = cljs.core.PersistentArrayMap.EMPTY;
var G__250464 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["199 is prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250463,G__250464) : tailrecursion.hoplon.markdown.para_node.call(null,G__250463,G__250464));
})(),(function (){var G__250465 = cljs.core.PersistentArrayMap.EMPTY;
var G__250466 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1999 is also prime."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250465,G__250466) : tailrecursion.hoplon.markdown.para_node.call(null,G__250465,G__250466));
})(),(function (){var G__250467 = cljs.core.PersistentArrayMap.EMPTY;
var G__250468 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["7 is the smallest divisor of 19999"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250467,G__250468) : tailrecursion.hoplon.markdown.para_node.call(null,G__250467,G__250468));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250462;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250461;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250460;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250459;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(22)], null),(function (){var _STAR_references_STAR_250469 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250470 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_250471 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250472 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__250473 = cljs.core.PersistentArrayMap.EMPTY;
var G__250474 = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Most Lisp implementations include a primitive (called ",(function (){var G__250475 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"runtime"], null);
var G__250476 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250475,G__250476) : tailrecursion.hoplon.markdown.code_node.call(null,G__250475,G__250476));
})()," in Scheme) that returns an integer that specifies the amount of time the system has been running (measured, for example, in microseconds). In Clojure, however, there is a function that is better suited for our current needs called ",(function (){var G__250477 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"time"], null);
var G__250478 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250477,G__250478) : tailrecursion.hoplon.markdown.code_node.call(null,G__250477,G__250478));
})()," that evaluates its argument and prints the time it took to evaluate it, then it returns the value of the expression. The following ",(function (){var G__250479 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__250480 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250479,G__250480) : tailrecursion.hoplon.markdown.code_node.call(null,G__250479,G__250480));
})()," procedure, when called with an integer \\(n\\), prints \\(n\\) and checks to see if \\(n\\) is prime while timing the test, prints the time it took to test the primality of the number followed by the value of that test (ie ",(function (){var G__250481 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"true"], null);
var G__250482 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250481,G__250482) : tailrecursion.hoplon.markdown.code_node.call(null,G__250481,G__250482));
})()," or ",(function (){var G__250483 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"false"], null);
var G__250484 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250483,G__250484) : tailrecursion.hoplon.markdown.code_node.call(null,G__250483,G__250484));
})(),"). But in order to successfully accomplish this task, we need to learn about a few more tools in the Clojure toolshed."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250473,G__250474) : tailrecursion.hoplon.markdown.para_node.call(null,G__250473,G__250474));
})(),(function (){var G__250485 = cljs.core.PersistentArrayMap.EMPTY;
var G__250486 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["If you have any questions about the specific functions used in this (or any example), remember to check out ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"http://www.clojuredocs.org",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Clojuredocs.org"], null)], 0)),"."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250485,G__250486) : tailrecursion.hoplon.markdown.para_node.call(null,G__250485,G__250486));
})(),(function (){var G__250525 = (function (){var G__250526 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__250527 = (function (){var G__250528 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__250529 = "(";
var G__250530 = (function (){var G__250546 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250547 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250546,G__250547) : tailrecursion.hoplon.span.call(null,G__250546,G__250547));
})();
var G__250531 = (function (){var G__250548 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250549 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250548,G__250549) : tailrecursion.hoplon.span.call(null,G__250548,G__250549));
})();
var G__250532 = " [";
var G__250533 = (function (){var G__250550 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250551 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250550,G__250551) : tailrecursion.hoplon.span.call(null,G__250550,G__250551));
})();
var G__250534 = "]\n  (";
var G__250535 = (function (){var G__250552 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250553 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250552,G__250553) : tailrecursion.hoplon.span.call(null,G__250552,G__250553));
})();
var G__250536 = "(";
var G__250537 = (function (){var G__250554 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250555 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250554,G__250555) : tailrecursion.hoplon.span.call(null,G__250554,G__250555));
})();
var G__250538 = (function (){var G__250556 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250557 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250556,G__250557) : tailrecursion.hoplon.span.call(null,G__250556,G__250557));
})();
var G__250539 = ") (";
var G__250540 = (function (){var G__250558 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250559 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250558,G__250559) : tailrecursion.hoplon.span.call(null,G__250558,G__250559));
})();
var G__250541 = "(";
var G__250542 = (function (){var G__250560 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250561 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250560,G__250561) : tailrecursion.hoplon.span.call(null,G__250560,G__250561));
})();
var G__250543 = " ";
var G__250544 = (function (){var G__250562 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250563 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250562,G__250563) : tailrecursion.hoplon.span.call(null,G__250562,G__250563));
})();
var G__250545 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__250528,G__250529,G__250530,G__250531,G__250532,G__250533,G__250534,G__250535,G__250536,G__250537,G__250538,G__250539,G__250540,G__250541,G__250542,G__250543,G__250544,G__250545) : tailrecursion.hoplon.pre.call(null,G__250528,G__250529,G__250530,G__250531,G__250532,G__250533,G__250534,G__250535,G__250536,G__250537,G__250538,G__250539,G__250540,G__250541,G__250542,G__250543,G__250544,G__250545));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__250526,G__250527) : tailrecursion.hoplon.div.call(null,G__250526,G__250527));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__250525) : tailrecursion.hoplon.div.call(null,G__250525));
})(),(function (){var G__250564 = cljs.core.PersistentArrayMap.EMPTY;
var G__250565 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__250566 = cljs.core.PersistentArrayMap.EMPTY;
var G__250567 = new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alternatively, if we didn",(function (){var G__250568 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__250569 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__250568,G__250569) : tailrecursion.hoplon.markdown.simple_node.call(null,G__250568,G__250569));
})(),"t want to see the ",(function (){var G__250570 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"true"], null);
var G__250571 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250570,G__250571) : tailrecursion.hoplon.markdown.code_node.call(null,G__250570,G__250571));
})(),"/",(function (){var G__250572 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"false"], null);
var G__250573 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250572,G__250573) : tailrecursion.hoplon.markdown.code_node.call(null,G__250572,G__250573));
})()," at the end, we could put ",(function (){var G__250574 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(do (time (prime? n)) n)"], null);
var G__250575 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250574,G__250575) : tailrecursion.hoplon.markdown.code_node.call(null,G__250574,G__250575));
})(),", which would evaluate the ",(function (){var G__250576 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(time (prime? n))"], null);
var G__250577 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250576,G__250577) : tailrecursion.hoplon.markdown.code_node.call(null,G__250576,G__250577));
})()," procedure, which would print the time it took to determine the primality of \\(n\\), then it would evaluate ",(function (){var G__250578 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__250579 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250578,G__250579) : tailrecursion.hoplon.markdown.code_node.call(null,G__250578,G__250579));
})(),", and return the value, which is ",(function (){var G__250580 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"n"], null);
var G__250581 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250580,G__250581) : tailrecursion.hoplon.markdown.code_node.call(null,G__250580,G__250581));
})()," itself."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250566,G__250567) : tailrecursion.hoplon.markdown.para_node.call(null,G__250566,G__250567));
})()], null);
return (tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.block_quote_node.cljs$core$IFn$_invoke$arity$2(G__250564,G__250565) : tailrecursion.hoplon.markdown.block_quote_node.call(null,G__250564,G__250565));
})(),(function (){var G__250582 = cljs.core.PersistentArrayMap.EMPTY;
var G__250583 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Using this procedure, write a procedure ",(function (){var G__250584 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"search-for-primes"], null);
var G__250585 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250584,G__250585) : tailrecursion.hoplon.markdown.code_node.call(null,G__250584,G__250585));
})()," that checks for the primality of consecutive odd integers in a specific range. Use your procedure to find the three smallest primes larger than 10,000,000,000; larger than 100,000,000,000; larger than 1,000,000,000,000; larger than 10,000,000,000,000. Note the time needed to test each prime. Since the testing algorithm has order of growth of \\(\\Theta(\\sqrt n)\\), you should expect that the testing for primes around 10,000 should take about \\(\\sqrt 10\\) times as long as testing for primes around 1,000. Do your timing data bear this out? How well do the data for 100,000 and 1,000,000 support the \\(\\sqrt n\\) prediction? Is your result compatible with the notion that programs on your machine run in the time proportional to the number of steps required for the computation?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250582,G__250583) : tailrecursion.hoplon.markdown.para_node.call(null,G__250582,G__250583));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250472;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250471;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250470;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250469;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_250586 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250587 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_250588 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250589 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__250705 = (function (){var G__250706 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__250707 = (function (){var G__250708 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__250709 = "(";
var G__250710 = (function (){var G__250763 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250764 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250763,G__250764) : tailrecursion.hoplon.span.call(null,G__250763,G__250764));
})();
var G__250711 = (function (){var G__250765 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250766 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250765,G__250766) : tailrecursion.hoplon.span.call(null,G__250765,G__250766));
})();
var G__250712 = " [";
var G__250713 = (function (){var G__250767 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250768 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250767,G__250768) : tailrecursion.hoplon.span.call(null,G__250767,G__250768));
})();
var G__250714 = " ";
var G__250715 = (function (){var G__250769 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250770 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250769,G__250770) : tailrecursion.hoplon.span.call(null,G__250769,G__250770));
})();
var G__250716 = "]\n  (";
var G__250717 = (function (){var G__250771 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250772 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250771,G__250772) : tailrecursion.hoplon.span.call(null,G__250771,G__250772));
})();
var G__250718 = "[";
var G__250719 = (function (){var G__250773 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250774 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250773,G__250774) : tailrecursion.hoplon.span.call(null,G__250773,G__250774));
})();
var G__250720 = " ";
var G__250721 = (function (){var G__250775 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250776 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250775,G__250776) : tailrecursion.hoplon.span.call(null,G__250775,G__250776));
})();
var G__250722 = "\n         ";
var G__250723 = (function (){var G__250777 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250778 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250777,G__250778) : tailrecursion.hoplon.span.call(null,G__250777,G__250778));
})();
var G__250724 = " ";
var G__250725 = (function (){var G__250779 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250780 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250779,G__250780) : tailrecursion.hoplon.span.call(null,G__250779,G__250780));
})();
var G__250726 = "]\n    (";
var G__250727 = (function (){var G__250781 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250782 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250781,G__250782) : tailrecursion.hoplon.span.call(null,G__250781,G__250782));
})();
var G__250728 = "(";
var G__250729 = (function (){var G__250783 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250784 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250783,G__250784) : tailrecursion.hoplon.span.call(null,G__250783,G__250784));
})();
var G__250730 = (function (){var G__250785 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250786 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250785,G__250786) : tailrecursion.hoplon.span.call(null,G__250785,G__250786));
})();
var G__250731 = " ";
var G__250732 = (function (){var G__250787 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__250788 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250787,G__250788) : tailrecursion.hoplon.span.call(null,G__250787,G__250788));
})();
var G__250733 = ") ";
var G__250734 = (function (){var G__250789 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250790 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250789,G__250790) : tailrecursion.hoplon.span.call(null,G__250789,G__250790));
})();
var G__250735 = "\n          (";
var G__250736 = (function (){var G__250791 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250792 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250791,G__250792) : tailrecursion.hoplon.span.call(null,G__250791,G__250792));
})();
var G__250737 = " ";
var G__250738 = (function (){var G__250793 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250794 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250793,G__250794) : tailrecursion.hoplon.span.call(null,G__250793,G__250794));
})();
var G__250739 = ") (";
var G__250740 = (function (){var G__250795 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__250796 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250795,G__250796) : tailrecursion.hoplon.span.call(null,G__250795,G__250796));
})();
var G__250741 = "(";
var G__250742 = (function (){var G__250797 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250798 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250797,G__250798) : tailrecursion.hoplon.span.call(null,G__250797,G__250798));
})();
var G__250743 = " ";
var G__250744 = (function (){var G__250799 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250800 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250799,G__250800) : tailrecursion.hoplon.span.call(null,G__250799,G__250800));
})();
var G__250745 = ") (";
var G__250746 = (function (){var G__250801 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250802 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250801,G__250802) : tailrecursion.hoplon.span.call(null,G__250801,G__250802));
})();
var G__250747 = " (";
var G__250748 = (function (){var G__250803 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250804 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250803,G__250804) : tailrecursion.hoplon.span.call(null,G__250803,G__250804));
})();
var G__250749 = (function (){var G__250805 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250806 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250805,G__250806) : tailrecursion.hoplon.span.call(null,G__250805,G__250806));
})();
var G__250750 = ") (";
var G__250751 = (function (){var G__250807 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250808 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250807,G__250808) : tailrecursion.hoplon.span.call(null,G__250807,G__250808));
})();
var G__250752 = (function (){var G__250809 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250810 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250809,G__250810) : tailrecursion.hoplon.span.call(null,G__250809,G__250810));
})();
var G__250753 = ")))\n          ";
var G__250754 = (function (){var G__250811 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250812 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250811,G__250812) : tailrecursion.hoplon.span.call(null,G__250811,G__250812));
})();
var G__250755 = " (";
var G__250756 = (function (){var G__250813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__250814 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250813,G__250814) : tailrecursion.hoplon.span.call(null,G__250813,G__250814));
})();
var G__250757 = " (";
var G__250758 = (function (){var G__250815 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__250816 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250815,G__250816) : tailrecursion.hoplon.span.call(null,G__250815,G__250816));
})();
var G__250759 = (function (){var G__250817 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250818 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250817,G__250818) : tailrecursion.hoplon.span.call(null,G__250817,G__250818));
})();
var G__250760 = ") ";
var G__250761 = (function (){var G__250819 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__250820 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__250819,G__250820) : tailrecursion.hoplon.span.call(null,G__250819,G__250820));
})();
var G__250762 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$55(G__250708,G__250709,G__250710,G__250711,G__250712,G__250713,G__250714,G__250715,G__250716,G__250717,G__250718,G__250719,G__250720,G__250721,G__250722,G__250723,G__250724,G__250725,G__250726,G__250727,G__250728,G__250729,G__250730,G__250731,G__250732,G__250733,G__250734,G__250735,G__250736,G__250737,G__250738,G__250739,G__250740,G__250741,G__250742,G__250743,G__250744,G__250745,G__250746,G__250747,G__250748,G__250749,G__250750,G__250751,G__250752,G__250753,G__250754,G__250755,G__250756,G__250757,G__250758,G__250759,G__250760,G__250761,G__250762) : tailrecursion.hoplon.pre.call(null,G__250708,G__250709,G__250710,G__250711,G__250712,G__250713,G__250714,G__250715,G__250716,G__250717,G__250718,G__250719,G__250720,G__250721,G__250722,G__250723,G__250724,G__250725,G__250726,G__250727,G__250728,G__250729,G__250730,G__250731,G__250732,G__250733,G__250734,G__250735,G__250736,G__250737,G__250738,G__250739,G__250740,G__250741,G__250742,G__250743,G__250744,G__250745,G__250746,G__250747,G__250748,G__250749,G__250750,G__250751,G__250752,G__250753,G__250754,G__250755,G__250756,G__250757,G__250758,G__250759,G__250760,G__250761,G__250762));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__250706,G__250707) : tailrecursion.hoplon.div.call(null,G__250706,G__250707));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__250705) : tailrecursion.hoplon.div.call(null,G__250705));
})(),(function (){var G__250821 = cljs.core.PersistentArrayMap.EMPTY;
var G__250822 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["And I leave the observations to you."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250821,G__250822) : tailrecursion.hoplon.markdown.para_node.call(null,G__250821,G__250822));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250589;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250588;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250587;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250586;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(23)], null),(function (){var _STAR_references_STAR_250823 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250824 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_250825 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250826 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__250827 = cljs.core.PersistentArrayMap.EMPTY;
var G__250828 = new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, ["The ",(function (){var G__250829 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__250830 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250829,G__250830) : tailrecursion.hoplon.markdown.code_node.call(null,G__250829,G__250830));
})()," procedure shown at the start of this section does lots of needless testing: After it checks to see if the number is divisible by 2 there is no point in checking to see if it is divisible by any larger even numbers. This suggests that the values used for ",(function (){var G__250831 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"test-divisor"], null);
var G__250832 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250831,G__250832) : tailrecursion.hoplon.markdown.code_node.call(null,G__250831,G__250832));
})()," should not be 2,3,4,5,6,",(function (){var G__250833 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__250834 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__250833,G__250834) : tailrecursion.hoplon.markdown.simple_node.call(null,G__250833,G__250834));
})(),", but rather, 2,3,5,7,9,",(function (){var G__250835 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$ellipsis], null);
var G__250836 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__250835,G__250836) : tailrecursion.hoplon.markdown.simple_node.call(null,G__250835,G__250836));
})(),". To implement this chance, define a procedure ",(function (){var G__250837 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"next"], null);
var G__250838 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250837,G__250838) : tailrecursion.hoplon.markdown.code_node.call(null,G__250837,G__250838));
})()," that returns 3 if its input is equal to 2 and otherwise returns its input plus 2. Modify the ",(function (){var G__250839 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest divisor"], null);
var G__250840 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250839,G__250840) : tailrecursion.hoplon.markdown.code_node.call(null,G__250839,G__250840));
})()," procedure to use ",(function (){var G__250841 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(next\ntest-divisor)"], null);
var G__250842 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250841,G__250842) : tailrecursion.hoplon.markdown.code_node.call(null,G__250841,G__250842));
})()," instead of ",(function (){var G__250843 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(+ test-divisor 1)"], null);
var G__250844 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250843,G__250844) : tailrecursion.hoplon.markdown.code_node.call(null,G__250843,G__250844));
})()," or ",(function (){var G__250845 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(inc\ntest-divisor)"], null);
var G__250846 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250845,G__250846) : tailrecursion.hoplon.markdown.code_node.call(null,G__250845,G__250846));
})(),". With ",(function (){var G__250847 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__250848 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250847,G__250848) : tailrecursion.hoplon.markdown.code_node.call(null,G__250847,G__250848));
})()," incorporating this modified version of ",(function (){var G__250849 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"smallest-divisor"], null);
var G__250850 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__250849,G__250850) : tailrecursion.hoplon.markdown.code_node.call(null,G__250849,G__250850));
})(),", run the test for each of the 12 primes found in ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/22/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0)),". Since this modification halves the number of test steps, you should expect it to run about twice as fast. Is this expectation confirmed? If not, what is the ovserved ration of the speeds of the two algorithms, and how do you explain the fact that it is different from 2? "], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__250827,G__250828) : tailrecursion.hoplon.markdown.para_node.call(null,G__250827,G__250828));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250826;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250825;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250824;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250823;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_250851 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250852 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_250853 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_250854 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251015 = (function (){var G__251016 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__251017 = (function (){var G__251018 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__251019 = "(";
var G__251020 = (function (){var G__251094 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251095 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251094,G__251095) : tailrecursion.hoplon.span.call(null,G__251094,G__251095));
})();
var G__251021 = (function (){var G__251096 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251097 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251096,G__251097) : tailrecursion.hoplon.span.call(null,G__251096,G__251097));
})();
var G__251022 = "[";
var G__251023 = (function (){var G__251098 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251099 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251098,G__251099) : tailrecursion.hoplon.span.call(null,G__251098,G__251099));
})();
var G__251024 = "]\n  (";
var G__251025 = (function (){var G__251100 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251101 = "if ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251100,G__251101) : tailrecursion.hoplon.span.call(null,G__251100,G__251101));
})();
var G__251026 = "(";
var G__251027 = (function (){var G__251102 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251103 = "divides?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251102,G__251103) : tailrecursion.hoplon.span.call(null,G__251102,G__251103));
})();
var G__251028 = " ";
var G__251029 = (function (){var G__251104 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251105 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251104,G__251105) : tailrecursion.hoplon.span.call(null,G__251104,G__251105));
})();
var G__251030 = " ";
var G__251031 = (function (){var G__251106 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251107 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251106,G__251107) : tailrecursion.hoplon.span.call(null,G__251106,G__251107));
})();
var G__251032 = ")\n      (";
var G__251033 = (function (){var G__251108 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251109 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251108,G__251109) : tailrecursion.hoplon.span.call(null,G__251108,G__251109));
})();
var G__251034 = (function (){var G__251110 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251111 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251110,G__251111) : tailrecursion.hoplon.span.call(null,G__251110,G__251111));
})();
var G__251035 = ")\n      (";
var G__251036 = (function (){var G__251112 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251113 = "+ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251112,G__251113) : tailrecursion.hoplon.span.call(null,G__251112,G__251113));
})();
var G__251037 = (function (){var G__251114 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251115 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251114,G__251115) : tailrecursion.hoplon.span.call(null,G__251114,G__251115));
})();
var G__251038 = " ";
var G__251039 = (function (){var G__251116 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251117 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251116,G__251117) : tailrecursion.hoplon.span.call(null,G__251116,G__251117));
})();
var G__251040 = ")))\n(";
var G__251041 = (function (){var G__251118 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251119 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251118,G__251119) : tailrecursion.hoplon.span.call(null,G__251118,G__251119));
})();
var G__251042 = (function (){var G__251120 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251121 = "search-for-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251120,G__251121) : tailrecursion.hoplon.span.call(null,G__251120,G__251121));
})();
var G__251043 = " [";
var G__251044 = (function (){var G__251122 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251123 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251122,G__251123) : tailrecursion.hoplon.span.call(null,G__251122,G__251123));
})();
var G__251045 = " ";
var G__251046 = (function (){var G__251124 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251125 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251124,G__251125) : tailrecursion.hoplon.span.call(null,G__251124,G__251125));
})();
var G__251047 = "]\n  (";
var G__251048 = (function (){var G__251126 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251127 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251126,G__251127) : tailrecursion.hoplon.span.call(null,G__251126,G__251127));
})();
var G__251049 = "[";
var G__251050 = (function (){var G__251128 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251129 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251128,G__251129) : tailrecursion.hoplon.span.call(null,G__251128,G__251129));
})();
var G__251051 = " ";
var G__251052 = (function (){var G__251130 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251131 = "starting-number";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251130,G__251131) : tailrecursion.hoplon.span.call(null,G__251130,G__251131));
})();
var G__251053 = "\n         ";
var G__251054 = (function (){var G__251132 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251133 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251132,G__251133) : tailrecursion.hoplon.span.call(null,G__251132,G__251133));
})();
var G__251055 = " ";
var G__251056 = (function (){var G__251134 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251135 = "number-of-primes";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251134,G__251135) : tailrecursion.hoplon.span.call(null,G__251134,G__251135));
})();
var G__251057 = "]\n    (";
var G__251058 = (function (){var G__251136 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251137 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251136,G__251137) : tailrecursion.hoplon.span.call(null,G__251136,G__251137));
})();
var G__251059 = "(";
var G__251060 = (function (){var G__251138 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251139 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251138,G__251139) : tailrecursion.hoplon.span.call(null,G__251138,G__251139));
})();
var G__251061 = (function (){var G__251140 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251141 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251140,G__251141) : tailrecursion.hoplon.span.call(null,G__251140,G__251141));
})();
var G__251062 = " ";
var G__251063 = (function (){var G__251142 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251143 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251142,G__251143) : tailrecursion.hoplon.span.call(null,G__251142,G__251143));
})();
var G__251064 = ") ";
var G__251065 = (function (){var G__251144 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251145 = "nil";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251144,G__251145) : tailrecursion.hoplon.span.call(null,G__251144,G__251145));
})();
var G__251066 = "\n          (";
var G__251067 = (function (){var G__251146 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251147 = "prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251146,G__251147) : tailrecursion.hoplon.span.call(null,G__251146,G__251147));
})();
var G__251068 = " ";
var G__251069 = (function (){var G__251148 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251149 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251148,G__251149) : tailrecursion.hoplon.span.call(null,G__251148,G__251149));
})();
var G__251070 = ") (";
var G__251071 = (function (){var G__251150 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251151 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251150,G__251151) : tailrecursion.hoplon.span.call(null,G__251150,G__251151));
})();
var G__251072 = "(";
var G__251073 = (function (){var G__251152 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251153 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251152,G__251153) : tailrecursion.hoplon.span.call(null,G__251152,G__251153));
})();
var G__251074 = " ";
var G__251075 = (function (){var G__251154 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251155 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251154,G__251155) : tailrecursion.hoplon.span.call(null,G__251154,G__251155));
})();
var G__251076 = ") (";
var G__251077 = (function (){var G__251156 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251157 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251156,G__251157) : tailrecursion.hoplon.span.call(null,G__251156,G__251157));
})();
var G__251078 = " (";
var G__251079 = (function (){var G__251158 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251159 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251158,G__251159) : tailrecursion.hoplon.span.call(null,G__251158,G__251159));
})();
var G__251080 = (function (){var G__251160 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251161 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251160,G__251161) : tailrecursion.hoplon.span.call(null,G__251160,G__251161));
})();
var G__251081 = ") (";
var G__251082 = (function (){var G__251162 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251163 = "dec ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251162,G__251163) : tailrecursion.hoplon.span.call(null,G__251162,G__251163));
})();
var G__251083 = (function (){var G__251164 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251165 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251164,G__251165) : tailrecursion.hoplon.span.call(null,G__251164,G__251165));
})();
var G__251084 = ")))\n          ";
var G__251085 = (function (){var G__251166 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251167 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251166,G__251167) : tailrecursion.hoplon.span.call(null,G__251166,G__251167));
})();
var G__251086 = " (";
var G__251087 = (function (){var G__251168 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251169 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251168,G__251169) : tailrecursion.hoplon.span.call(null,G__251168,G__251169));
})();
var G__251088 = " (";
var G__251089 = (function (){var G__251170 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251171 = "next ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251170,G__251171) : tailrecursion.hoplon.span.call(null,G__251170,G__251171));
})();
var G__251090 = (function (){var G__251172 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251173 = "s";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251172,G__251173) : tailrecursion.hoplon.span.call(null,G__251172,G__251173));
})();
var G__251091 = ") ";
var G__251092 = (function (){var G__251174 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251175 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251174,G__251175) : tailrecursion.hoplon.span.call(null,G__251174,G__251175));
})();
var G__251093 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$76(G__251018,G__251019,G__251020,G__251021,G__251022,G__251023,G__251024,G__251025,G__251026,G__251027,G__251028,G__251029,G__251030,G__251031,G__251032,G__251033,G__251034,G__251035,G__251036,G__251037,G__251038,G__251039,G__251040,G__251041,G__251042,G__251043,G__251044,G__251045,G__251046,G__251047,G__251048,G__251049,G__251050,G__251051,G__251052,G__251053,G__251054,G__251055,G__251056,G__251057,G__251058,G__251059,G__251060,G__251061,G__251062,G__251063,G__251064,G__251065,G__251066,G__251067,G__251068,G__251069,G__251070,G__251071,G__251072,G__251073,G__251074,G__251075,G__251076,G__251077,G__251078,G__251079,G__251080,G__251081,G__251082,G__251083,G__251084,G__251085,G__251086,G__251087,G__251088,G__251089,G__251090,G__251091,G__251092,G__251093) : tailrecursion.hoplon.pre.call(null,G__251018,G__251019,G__251020,G__251021,G__251022,G__251023,G__251024,G__251025,G__251026,G__251027,G__251028,G__251029,G__251030,G__251031,G__251032,G__251033,G__251034,G__251035,G__251036,G__251037,G__251038,G__251039,G__251040,G__251041,G__251042,G__251043,G__251044,G__251045,G__251046,G__251047,G__251048,G__251049,G__251050,G__251051,G__251052,G__251053,G__251054,G__251055,G__251056,G__251057,G__251058,G__251059,G__251060,G__251061,G__251062,G__251063,G__251064,G__251065,G__251066,G__251067,G__251068,G__251069,G__251070,G__251071,G__251072,G__251073,G__251074,G__251075,G__251076,G__251077,G__251078,G__251079,G__251080,G__251081,G__251082,G__251083,G__251084,G__251085,G__251086,G__251087,G__251088,G__251089,G__251090,G__251091,G__251092,G__251093));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__251016,G__251017) : tailrecursion.hoplon.div.call(null,G__251016,G__251017));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__251015) : tailrecursion.hoplon.div.call(null,G__251015));
})(),(function (){var G__251176 = cljs.core.PersistentArrayMap.EMPTY;
var G__251177 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Well, we",(function (){var G__251178 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__251179 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__251178,G__251179) : tailrecursion.hoplon.markdown.simple_node.call(null,G__251178,G__251179));
})(),"re not exactly halving the number of steps because each time we have to evaluate the ",(function (){var G__251180 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"if"], null);
var G__251181 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251180,G__251181) : tailrecursion.hoplon.markdown.code_node.call(null,G__251180,G__251181));
})()," statement which includes some division and whatnot. Also there are compiler optimizations invloved, so these things are rough estimates."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251176,G__251177) : tailrecursion.hoplon.markdown.para_node.call(null,G__251176,G__251177));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250854;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250853;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_250852;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_250851;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(24)], null),(function (){var _STAR_references_STAR_251182 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251183 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251184 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251185 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251186 = cljs.core.PersistentArrayMap.EMPTY;
var G__251187 = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Modify the ",(function (){var G__251188 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"timed-prime-test"], null);
var G__251189 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251188,G__251189) : tailrecursion.hoplon.markdown.code_node.call(null,G__251188,G__251189));
})()," procedure of ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/24/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.22"], null)], 0))," to use ",(function (){var G__251190 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-prime?"], null);
var G__251191 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251190,G__251191) : tailrecursion.hoplon.markdown.code_node.call(null,G__251190,G__251191));
})()," (the Fermat method), and test each of the 12 primes you found in that exercise. Since the Fermat test has \\(\\Theta(\\log n)\\) growth, how would you expect the time to test primes near 10,000,000,000,000 to compare with the time needed to test primes near 10,000,000,000? Do your data bear this out? Can you explain any discrepancy you find?"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251186,G__251187) : tailrecursion.hoplon.markdown.para_node.call(null,G__251186,G__251187));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251185;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251184;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251183;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251182;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_251192 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251193 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251194 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251195 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251234 = (function (){var G__251235 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__251236 = (function (){var G__251237 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__251238 = "(";
var G__251239 = (function (){var G__251255 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251256 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251255,G__251256) : tailrecursion.hoplon.span.call(null,G__251255,G__251256));
})();
var G__251240 = (function (){var G__251257 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251258 = "timed-prime-test";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251257,G__251258) : tailrecursion.hoplon.span.call(null,G__251257,G__251258));
})();
var G__251241 = " [";
var G__251242 = (function (){var G__251259 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251260 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251259,G__251260) : tailrecursion.hoplon.span.call(null,G__251259,G__251260));
})();
var G__251243 = "]\n  (";
var G__251244 = (function (){var G__251261 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251262 = "do ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251261,G__251262) : tailrecursion.hoplon.span.call(null,G__251261,G__251262));
})();
var G__251245 = "(";
var G__251246 = (function (){var G__251263 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251264 = "println ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251263,G__251264) : tailrecursion.hoplon.span.call(null,G__251263,G__251264));
})();
var G__251247 = (function (){var G__251265 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251266 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251265,G__251266) : tailrecursion.hoplon.span.call(null,G__251265,G__251266));
})();
var G__251248 = ") (";
var G__251249 = (function (){var G__251267 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251268 = "time ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251267,G__251268) : tailrecursion.hoplon.span.call(null,G__251267,G__251268));
})();
var G__251250 = "(";
var G__251251 = (function (){var G__251269 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251270 = "fast-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251269,G__251270) : tailrecursion.hoplon.span.call(null,G__251269,G__251270));
})();
var G__251252 = " ";
var G__251253 = (function (){var G__251271 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251272 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251271,G__251272) : tailrecursion.hoplon.span.call(null,G__251271,G__251272));
})();
var G__251254 = "))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$18(G__251237,G__251238,G__251239,G__251240,G__251241,G__251242,G__251243,G__251244,G__251245,G__251246,G__251247,G__251248,G__251249,G__251250,G__251251,G__251252,G__251253,G__251254) : tailrecursion.hoplon.pre.call(null,G__251237,G__251238,G__251239,G__251240,G__251241,G__251242,G__251243,G__251244,G__251245,G__251246,G__251247,G__251248,G__251249,G__251250,G__251251,G__251252,G__251253,G__251254));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__251235,G__251236) : tailrecursion.hoplon.div.call(null,G__251235,G__251236));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__251234) : tailrecursion.hoplon.div.call(null,G__251234));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251195;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251194;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251193;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251192;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(25)], null),(function (){var _STAR_references_STAR_251273 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251274 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251275 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251276 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251277 = cljs.core.PersistentArrayMap.EMPTY;
var G__251278 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Alyssa P. Hacker complains that we went to a lot of extra work in writing ",(function (){var G__251279 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__251280 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251279,G__251280) : tailrecursion.hoplon.markdown.code_node.call(null,G__251279,G__251280));
})(),". After all, she says, since we already know how to compute exponentials, we could have simply written"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251277,G__251278) : tailrecursion.hoplon.markdown.para_node.call(null,G__251277,G__251278));
})(),(function (){var G__251324 = (function (){var G__251325 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__251326 = (function (){var G__251327 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__251328 = "(";
var G__251329 = (function (){var G__251348 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251349 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251348,G__251349) : tailrecursion.hoplon.span.call(null,G__251348,G__251349));
})();
var G__251330 = (function (){var G__251350 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251351 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251350,G__251351) : tailrecursion.hoplon.span.call(null,G__251350,G__251351));
})();
var G__251331 = " [";
var G__251332 = (function (){var G__251352 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251353 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251352,G__251353) : tailrecursion.hoplon.span.call(null,G__251352,G__251353));
})();
var G__251333 = " ";
var G__251334 = (function (){var G__251354 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251355 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251354,G__251355) : tailrecursion.hoplon.span.call(null,G__251354,G__251355));
})();
var G__251335 = " ";
var G__251336 = (function (){var G__251356 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251357 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251356,G__251357) : tailrecursion.hoplon.span.call(null,G__251356,G__251357));
})();
var G__251337 = "]\n  (";
var G__251338 = (function (){var G__251358 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251359 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251358,G__251359) : tailrecursion.hoplon.span.call(null,G__251358,G__251359));
})();
var G__251339 = " (";
var G__251340 = (function (){var G__251360 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251361 = "fast-expt";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251360,G__251361) : tailrecursion.hoplon.span.call(null,G__251360,G__251361));
})();
var G__251341 = " ";
var G__251342 = (function (){var G__251362 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251363 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251362,G__251363) : tailrecursion.hoplon.span.call(null,G__251362,G__251363));
})();
var G__251343 = " ";
var G__251344 = (function (){var G__251364 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251365 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251364,G__251365) : tailrecursion.hoplon.span.call(null,G__251364,G__251365));
})();
var G__251345 = ") ";
var G__251346 = (function (){var G__251366 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251367 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251366,G__251367) : tailrecursion.hoplon.span.call(null,G__251366,G__251367));
})();
var G__251347 = "))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$21(G__251327,G__251328,G__251329,G__251330,G__251331,G__251332,G__251333,G__251334,G__251335,G__251336,G__251337,G__251338,G__251339,G__251340,G__251341,G__251342,G__251343,G__251344,G__251345,G__251346,G__251347) : tailrecursion.hoplon.pre.call(null,G__251327,G__251328,G__251329,G__251330,G__251331,G__251332,G__251333,G__251334,G__251335,G__251336,G__251337,G__251338,G__251339,G__251340,G__251341,G__251342,G__251343,G__251344,G__251345,G__251346,G__251347));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__251325,G__251326) : tailrecursion.hoplon.div.call(null,G__251325,G__251326));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__251324) : tailrecursion.hoplon.div.call(null,G__251324));
})(),(function (){var G__251368 = cljs.core.PersistentArrayMap.EMPTY;
var G__251369 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Is she correct? Would this procedure serve as well for our fast prime tester? Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251368,G__251369) : tailrecursion.hoplon.markdown.para_node.call(null,G__251368,G__251369));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251276;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251275;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251274;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251273;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_251370 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251371 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251372 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251373 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251374 = cljs.core.PersistentArrayMap.EMPTY;
var G__251375 = new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Multiplying larger numbers takes longer than the time you save by only computing ",(function (){var G__251376 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"mod"], null);
var G__251377 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251376,G__251377) : tailrecursion.hoplon.markdown.code_node.call(null,G__251376,G__251377));
})()," once. So if the numbers you",(function (){var G__251378 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__251379 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__251378,G__251379) : tailrecursion.hoplon.markdown.simple_node.call(null,G__251378,G__251379));
})(),"re dealing with are sufficiently small, she",(function (){var G__251380 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__251381 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__251380,G__251381) : tailrecursion.hoplon.markdown.simple_node.call(null,G__251380,G__251381));
})(),"s correct. But if we",(function (){var G__251382 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__251383 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__251382,G__251383) : tailrecursion.hoplon.markdown.simple_node.call(null,G__251382,G__251383));
})(),"re trying to use this for our primality test, raising 10,000,000 to the 100,000,000,000,000 would be far more computationally expensive than modding out each time."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251374,G__251375) : tailrecursion.hoplon.markdown.para_node.call(null,G__251374,G__251375));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251373;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251372;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251371;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251370;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(26)], null),(function (){var _STAR_references_STAR_251384 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251385 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251386 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251387 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251388 = cljs.core.PersistentArrayMap.EMPTY;
var G__251389 = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Louis Reasoner is having great difficulty doing ",tailrecursion.hoplon.markdown.exp_link_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$url,"#!/sicp/ch/1/ex/24/",cljs.core.cst$kw$title,""], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["exercise 1.24"], null)], 0)),". His ",(function (){var G__251390 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fast-prime?"], null);
var G__251391 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251390,G__251391) : tailrecursion.hoplon.markdown.code_node.call(null,G__251390,G__251391));
})()," test seems to run more slowly than his ",(function (){var G__251392 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"prime?"], null);
var G__251393 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251392,G__251393) : tailrecursion.hoplon.markdown.code_node.call(null,G__251392,G__251393));
})()," test. Louis calls his friend Eva Lu Ator over to help. When they examine Louis",(function (){var G__251394 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__251395 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__251394,G__251395) : tailrecursion.hoplon.markdown.simple_node.call(null,G__251394,G__251395));
})(),"s code, they find that he has rewritten the ",(function (){var G__251396 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__251397 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251396,G__251397) : tailrecursion.hoplon.markdown.code_node.call(null,G__251396,G__251397));
})()," procedure to use an explicit multiplication, rather than calling ",(function (){var G__251398 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"square"], null);
var G__251399 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251398,G__251399) : tailrecursion.hoplon.markdown.code_node.call(null,G__251398,G__251399));
})(),":"], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251388,G__251389) : tailrecursion.hoplon.markdown.para_node.call(null,G__251388,G__251389));
})(),(function (){var G__251550 = (function (){var G__251551 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__251552 = (function (){var G__251553 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__251554 = "(";
var G__251555 = (function (){var G__251625 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251626 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251625,G__251626) : tailrecursion.hoplon.span.call(null,G__251625,G__251626));
})();
var G__251556 = (function (){var G__251627 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251628 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251627,G__251628) : tailrecursion.hoplon.span.call(null,G__251627,G__251628));
})();
var G__251557 = " [";
var G__251558 = (function (){var G__251629 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251630 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251629,G__251630) : tailrecursion.hoplon.span.call(null,G__251629,G__251630));
})();
var G__251559 = " ";
var G__251560 = (function (){var G__251631 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251632 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251631,G__251632) : tailrecursion.hoplon.span.call(null,G__251631,G__251632));
})();
var G__251561 = " ";
var G__251562 = (function (){var G__251633 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251634 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251633,G__251634) : tailrecursion.hoplon.span.call(null,G__251633,G__251634));
})();
var G__251563 = "]\n  (";
var G__251564 = (function (){var G__251635 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251636 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251635,G__251636) : tailrecursion.hoplon.span.call(null,G__251635,G__251636));
})();
var G__251565 = "(";
var G__251566 = (function (){var G__251637 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251638 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251637,G__251638) : tailrecursion.hoplon.span.call(null,G__251637,G__251638));
})();
var G__251567 = (function (){var G__251639 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251640 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251639,G__251640) : tailrecursion.hoplon.span.call(null,G__251639,G__251640));
})();
var G__251568 = " ";
var G__251569 = (function (){var G__251641 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251642 = "0";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251641,G__251642) : tailrecursion.hoplon.span.call(null,G__251641,G__251642));
})();
var G__251570 = ") ";
var G__251571 = (function (){var G__251643 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251644 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251643,G__251644) : tailrecursion.hoplon.span.call(null,G__251643,G__251644));
})();
var G__251572 = "\n        (";
var G__251573 = (function (){var G__251645 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251646 = "even?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251645,G__251646) : tailrecursion.hoplon.span.call(null,G__251645,G__251646));
})();
var G__251574 = " ";
var G__251575 = (function (){var G__251647 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251648 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251647,G__251648) : tailrecursion.hoplon.span.call(null,G__251647,G__251648));
})();
var G__251576 = ") (";
var G__251577 = (function (){var G__251649 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251650 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251649,G__251650) : tailrecursion.hoplon.span.call(null,G__251649,G__251650));
})();
var G__251578 = " (";
var G__251579 = (function (){var G__251651 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251652 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251651,G__251652) : tailrecursion.hoplon.span.call(null,G__251651,G__251652));
})();
var G__251580 = "(";
var G__251581 = (function (){var G__251653 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251654 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251653,G__251654) : tailrecursion.hoplon.span.call(null,G__251653,G__251654));
})();
var G__251582 = " ";
var G__251583 = (function (){var G__251655 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251656 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251655,G__251656) : tailrecursion.hoplon.span.call(null,G__251655,G__251656));
})();
var G__251584 = " (";
var G__251585 = (function (){var G__251657 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251658 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251657,G__251658) : tailrecursion.hoplon.span.call(null,G__251657,G__251658));
})();
var G__251586 = (function (){var G__251659 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251660 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251659,G__251660) : tailrecursion.hoplon.span.call(null,G__251659,G__251660));
})();
var G__251587 = " ";
var G__251588 = (function (){var G__251661 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251662 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251661,G__251662) : tailrecursion.hoplon.span.call(null,G__251661,G__251662));
})();
var G__251589 = ") ";
var G__251590 = (function (){var G__251663 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251664 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251663,G__251664) : tailrecursion.hoplon.span.call(null,G__251663,G__251664));
})();
var G__251591 = ")\n                            (";
var G__251592 = (function (){var G__251665 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251666 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251665,G__251666) : tailrecursion.hoplon.span.call(null,G__251665,G__251666));
})();
var G__251593 = " ";
var G__251594 = (function (){var G__251667 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251668 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251667,G__251668) : tailrecursion.hoplon.span.call(null,G__251667,G__251668));
})();
var G__251595 = " (";
var G__251596 = (function (){var G__251669 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251670 = "/ ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251669,G__251670) : tailrecursion.hoplon.span.call(null,G__251669,G__251670));
})();
var G__251597 = (function (){var G__251671 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251672 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251671,G__251672) : tailrecursion.hoplon.span.call(null,G__251671,G__251672));
})();
var G__251598 = " ";
var G__251599 = (function (){var G__251673 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251674 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251673,G__251674) : tailrecursion.hoplon.span.call(null,G__251673,G__251674));
})();
var G__251600 = ") ";
var G__251601 = (function (){var G__251675 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251676 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251675,G__251676) : tailrecursion.hoplon.span.call(null,G__251675,G__251676));
})();
var G__251602 = "))\n                         ";
var G__251603 = (function (){var G__251677 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251678 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251677,G__251678) : tailrecursion.hoplon.span.call(null,G__251677,G__251678));
})();
var G__251604 = ")\n        ";
var G__251605 = (function (){var G__251679 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251680 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251679,G__251680) : tailrecursion.hoplon.span.call(null,G__251679,G__251680));
})();
var G__251606 = " (";
var G__251607 = (function (){var G__251681 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251682 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251681,G__251682) : tailrecursion.hoplon.span.call(null,G__251681,G__251682));
})();
var G__251608 = " (";
var G__251609 = (function (){var G__251683 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251684 = "* ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251683,G__251684) : tailrecursion.hoplon.span.call(null,G__251683,G__251684));
})();
var G__251610 = (function (){var G__251685 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251686 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251685,G__251686) : tailrecursion.hoplon.span.call(null,G__251685,G__251686));
})();
var G__251611 = " (";
var G__251612 = (function (){var G__251687 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251688 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251687,G__251688) : tailrecursion.hoplon.span.call(null,G__251687,G__251688));
})();
var G__251613 = " ";
var G__251614 = (function (){var G__251689 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251690 = "base";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251689,G__251690) : tailrecursion.hoplon.span.call(null,G__251689,G__251690));
})();
var G__251615 = " (";
var G__251616 = (function (){var G__251691 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251692 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251691,G__251692) : tailrecursion.hoplon.span.call(null,G__251691,G__251692));
})();
var G__251617 = (function (){var G__251693 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251694 = "exp";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251693,G__251694) : tailrecursion.hoplon.span.call(null,G__251693,G__251694));
})();
var G__251618 = " ";
var G__251619 = (function (){var G__251695 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251696 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251695,G__251696) : tailrecursion.hoplon.span.call(null,G__251695,G__251696));
})();
var G__251620 = ") ";
var G__251621 = (function (){var G__251697 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251698 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251697,G__251698) : tailrecursion.hoplon.span.call(null,G__251697,G__251698));
})();
var G__251622 = ")) ";
var G__251623 = (function (){var G__251699 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251700 = "m";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251699,G__251700) : tailrecursion.hoplon.span.call(null,G__251699,G__251700));
})();
var G__251624 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$72(G__251553,G__251554,G__251555,G__251556,G__251557,G__251558,G__251559,G__251560,G__251561,G__251562,G__251563,G__251564,G__251565,G__251566,G__251567,G__251568,G__251569,G__251570,G__251571,G__251572,G__251573,G__251574,G__251575,G__251576,G__251577,G__251578,G__251579,G__251580,G__251581,G__251582,G__251583,G__251584,G__251585,G__251586,G__251587,G__251588,G__251589,G__251590,G__251591,G__251592,G__251593,G__251594,G__251595,G__251596,G__251597,G__251598,G__251599,G__251600,G__251601,G__251602,G__251603,G__251604,G__251605,G__251606,G__251607,G__251608,G__251609,G__251610,G__251611,G__251612,G__251613,G__251614,G__251615,G__251616,G__251617,G__251618,G__251619,G__251620,G__251621,G__251622,G__251623,G__251624) : tailrecursion.hoplon.pre.call(null,G__251553,G__251554,G__251555,G__251556,G__251557,G__251558,G__251559,G__251560,G__251561,G__251562,G__251563,G__251564,G__251565,G__251566,G__251567,G__251568,G__251569,G__251570,G__251571,G__251572,G__251573,G__251574,G__251575,G__251576,G__251577,G__251578,G__251579,G__251580,G__251581,G__251582,G__251583,G__251584,G__251585,G__251586,G__251587,G__251588,G__251589,G__251590,G__251591,G__251592,G__251593,G__251594,G__251595,G__251596,G__251597,G__251598,G__251599,G__251600,G__251601,G__251602,G__251603,G__251604,G__251605,G__251606,G__251607,G__251608,G__251609,G__251610,G__251611,G__251612,G__251613,G__251614,G__251615,G__251616,G__251617,G__251618,G__251619,G__251620,G__251621,G__251622,G__251623,G__251624));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__251551,G__251552) : tailrecursion.hoplon.div.call(null,G__251551,G__251552));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__251550) : tailrecursion.hoplon.div.call(null,G__251550));
})(),(function (){var G__251701 = cljs.core.PersistentArrayMap.EMPTY;
var G__251702 = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251703 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__251704 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I don",(function (){var G__251705 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__251706 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__251705,G__251706) : tailrecursion.hoplon.markdown.simple_node.call(null,G__251705,G__251706));
})(),"t see what difference that could make,"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__251703,G__251704) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__251703,G__251704));
})()," says Louis. ",(function (){var G__251707 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__251708 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I do."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__251707,G__251708) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__251707,G__251708));
})()," says Eva. ",(function (){var G__251709 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__251710 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["By writing the procedure like that, you have transformed the \\(\\Theta(\\log n)\\) process into a \\(\\Theta(n)\\) process."], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__251709,G__251710) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__251709,G__251710));
})()," Explain."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251701,G__251702) : tailrecursion.hoplon.markdown.para_node.call(null,G__251701,G__251702));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251387;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251386;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251385;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251384;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_251711 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251712 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251713 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251714 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251715 = cljs.core.PersistentArrayMap.EMPTY;
var G__251716 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Remember the applicative order evaluation model. Every time the exponent is even, ",(function (){var G__251717 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"(expmod base (/ exp 2) m)"], null);
var G__251718 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251717,G__251718) : tailrecursion.hoplon.markdown.code_node.call(null,G__251717,G__251718));
})()," is computed twice, causing two branches of the same computation to occur."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251715,G__251716) : tailrecursion.hoplon.markdown.para_node.call(null,G__251715,G__251716));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251714;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251713;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251712;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251711;
}})()], 0))], 0)),"",book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(27)], null),(function (){var _STAR_references_STAR_251719 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251720 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251721 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251722 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251723 = cljs.core.PersistentArrayMap.EMPTY;
var G__251724 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Demonstrate that these Carmichael numbers: 561, 1105, 1729, 2465, 2821, 6601, really do fool the Fermat test. That is, write a procedure that takes an integer \\(n\\) and tests whether an is congruent to \\(a\\) modulo \\(n\\) for every \\(a<n\\), and try your procedure on the given Carmichael numbers."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251723,G__251724) : tailrecursion.hoplon.markdown.para_node.call(null,G__251723,G__251724));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251722;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251721;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251720;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251719;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_251725 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251726 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251727 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251728 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251818 = (function (){var G__251819 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__251820 = (function (){var G__251821 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__251822 = "(";
var G__251823 = (function (){var G__251864 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251865 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251864,G__251865) : tailrecursion.hoplon.span.call(null,G__251864,G__251865));
})();
var G__251824 = (function (){var G__251866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251867 = "carmichael-check";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251866,G__251867) : tailrecursion.hoplon.span.call(null,G__251866,G__251867));
})();
var G__251825 = " [";
var G__251826 = (function (){var G__251868 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251869 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251868,G__251869) : tailrecursion.hoplon.span.call(null,G__251868,G__251869));
})();
var G__251827 = "]\n  (";
var G__251828 = (function (){var G__251870 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__251871 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251870,G__251871) : tailrecursion.hoplon.span.call(null,G__251870,G__251871));
})();
var G__251829 = "[";
var G__251830 = (function (){var G__251872 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251873 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251872,G__251873) : tailrecursion.hoplon.span.call(null,G__251872,G__251873));
})();
var G__251831 = " ";
var G__251832 = (function (){var G__251874 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__251875 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251874,G__251875) : tailrecursion.hoplon.span.call(null,G__251874,G__251875));
})();
var G__251833 = "]\n    (";
var G__251834 = (function (){var G__251876 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251877 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251876,G__251877) : tailrecursion.hoplon.span.call(null,G__251876,G__251877));
})();
var G__251835 = "(";
var G__251836 = (function (){var G__251878 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251879 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251878,G__251879) : tailrecursion.hoplon.span.call(null,G__251878,G__251879));
})();
var G__251837 = (function (){var G__251880 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251881 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251880,G__251881) : tailrecursion.hoplon.span.call(null,G__251880,G__251881));
})();
var G__251838 = " ";
var G__251839 = (function (){var G__251882 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251883 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251882,G__251883) : tailrecursion.hoplon.span.call(null,G__251882,G__251883));
})();
var G__251840 = ") ";
var G__251841 = (function (){var G__251884 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251885 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251884,G__251885) : tailrecursion.hoplon.span.call(null,G__251884,G__251885));
})();
var G__251842 = "\n          (";
var G__251843 = (function (){var G__251886 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251887 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251886,G__251887) : tailrecursion.hoplon.span.call(null,G__251886,G__251887));
})();
var G__251844 = "(";
var G__251845 = (function (){var G__251888 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251889 = "expmod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251888,G__251889) : tailrecursion.hoplon.span.call(null,G__251888,G__251889));
})();
var G__251846 = " ";
var G__251847 = (function (){var G__251890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251891 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251890,G__251891) : tailrecursion.hoplon.span.call(null,G__251890,G__251891));
})();
var G__251848 = " ";
var G__251849 = (function (){var G__251892 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251893 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251892,G__251893) : tailrecursion.hoplon.span.call(null,G__251892,G__251893));
})();
var G__251850 = " ";
var G__251851 = (function (){var G__251894 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251895 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251894,G__251895) : tailrecursion.hoplon.span.call(null,G__251894,G__251895));
})();
var G__251852 = ") ";
var G__251853 = (function (){var G__251896 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251897 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251896,G__251897) : tailrecursion.hoplon.span.call(null,G__251896,G__251897));
})();
var G__251854 = ") (";
var G__251855 = (function (){var G__251898 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__251899 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251898,G__251899) : tailrecursion.hoplon.span.call(null,G__251898,G__251899));
})();
var G__251856 = " (";
var G__251857 = (function (){var G__251900 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__251901 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251900,G__251901) : tailrecursion.hoplon.span.call(null,G__251900,G__251901));
})();
var G__251858 = (function (){var G__251902 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251903 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251902,G__251903) : tailrecursion.hoplon.span.call(null,G__251902,G__251903));
})();
var G__251859 = "))\n          ";
var G__251860 = (function (){var G__251904 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251905 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251904,G__251905) : tailrecursion.hoplon.span.call(null,G__251904,G__251905));
})();
var G__251861 = " ";
var G__251862 = (function (){var G__251906 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__251907 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__251906,G__251907) : tailrecursion.hoplon.span.call(null,G__251906,G__251907));
})();
var G__251863 = ")))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$43(G__251821,G__251822,G__251823,G__251824,G__251825,G__251826,G__251827,G__251828,G__251829,G__251830,G__251831,G__251832,G__251833,G__251834,G__251835,G__251836,G__251837,G__251838,G__251839,G__251840,G__251841,G__251842,G__251843,G__251844,G__251845,G__251846,G__251847,G__251848,G__251849,G__251850,G__251851,G__251852,G__251853,G__251854,G__251855,G__251856,G__251857,G__251858,G__251859,G__251860,G__251861,G__251862,G__251863) : tailrecursion.hoplon.pre.call(null,G__251821,G__251822,G__251823,G__251824,G__251825,G__251826,G__251827,G__251828,G__251829,G__251830,G__251831,G__251832,G__251833,G__251834,G__251835,G__251836,G__251837,G__251838,G__251839,G__251840,G__251841,G__251842,G__251843,G__251844,G__251845,G__251846,G__251847,G__251848,G__251849,G__251850,G__251851,G__251852,G__251853,G__251854,G__251855,G__251856,G__251857,G__251858,G__251859,G__251860,G__251861,G__251862,G__251863));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__251819,G__251820) : tailrecursion.hoplon.div.call(null,G__251819,G__251820));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__251818) : tailrecursion.hoplon.div.call(null,G__251818));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251728;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251727;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251726;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251725;
}})()], 0))], 0)),book.sicp.book_data.exercise.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ch,(1),cljs.core.cst$kw$number,(28)], null),(function (){var _STAR_references_STAR_251908 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251909 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251910 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251911 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__251912 = cljs.core.PersistentArrayMap.EMPTY;
var G__251913 = new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, ["One variant of the Fermat test that cannot be fooled is called the ",tailrecursion.hoplon.markdown.strong_emph_super_node.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$chars,"*",cljs.core.cst$kw$closed,true,cljs.core.cst$kw$strong,false], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Miller-Rabin"], null)], 0))," test (Miller 1976; Rabin 1980). This starts from an alternate form of Fermat",(function (){var G__251914 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$apostrophe], null);
var G__251915 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.simple_node.cljs$core$IFn$_invoke$arity$2(G__251914,G__251915) : tailrecursion.hoplon.markdown.simple_node.call(null,G__251914,G__251915));
})(),"s Little Theorem, which states that if \\(n\\) is a prime number and \\(a\\) is any positive integer less than \\(n\\), then \\(a^{n-1}\\equiv 1\\pmod n\\). To test the primality of a number \\(n\\) by the Miller-Rabin test, we pick a random number \\(a<n\\) and raise \\(a\\) to the \\((n - 1)\\)st power modulo \\(n\\) using the ",(function (){var G__251916 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__251917 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251916,G__251917) : tailrecursion.hoplon.markdown.code_node.call(null,G__251916,G__251917));
})()," procedure. However, whenever we perform the squaring step in ",(function (){var G__251918 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__251919 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251918,G__251919) : tailrecursion.hoplon.markdown.code_node.call(null,G__251918,G__251919));
})(),", we check to see if we have discovered a ",(function (){var G__251920 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type,cljs.core.cst$kw$double], null);
var G__251921 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["nontrivial square root of 1 modulo \\(n\\),"], null);
return (tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.quoted_node.cljs$core$IFn$_invoke$arity$2(G__251920,G__251921) : tailrecursion.hoplon.markdown.quoted_node.call(null,G__251920,G__251921));
})()," that is, a number not equal to 1 or \\(n - 1\\) whose square is equal to 1 modulo \\(n\\). It is possible to prove that if such a nontrivial square root of 1 exists, then \\(n\\) is not prime. It is also possible to prove that if \\(n\\) is an odd number that is not prime, then, for at least half the numbers \\(a<n\\), computing \\(a^{n-1}\\) in this way will reveal a nontrivial square root of 1 modulo \\(n\\). (This is why the Miller-Rabin test cannot be fooled.) Modify the ",(function (){var G__251922 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__251923 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251922,G__251923) : tailrecursion.hoplon.markdown.code_node.call(null,G__251922,G__251923));
})()," procedure to signal if it discovers a nontrivial square root of 1, and use this to implement the Miller-Rabin test with a procedure analogous to ",(function (){var G__251924 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"fermat-test"], null);
var G__251925 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251924,G__251925) : tailrecursion.hoplon.markdown.code_node.call(null,G__251924,G__251925));
})(),". Check your procedure by testing various known primes and non-primes. Hint: One convenient way to make ",(function (){var G__251926 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$text,"expmod"], null);
var G__251927 = cljs.core.PersistentVector.EMPTY;
return (tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.code_node.cljs$core$IFn$_invoke$arity$2(G__251926,G__251927) : tailrecursion.hoplon.markdown.code_node.call(null,G__251926,G__251927));
})()," signal is to have it return 0."], null);
return (tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.markdown.para_node.cljs$core$IFn$_invoke$arity$2(G__251912,G__251913) : tailrecursion.hoplon.markdown.para_node.call(null,G__251912,G__251913));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251911;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251910;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251909;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251908;
}})(),"",book.sicp.book_data.q_a.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.EMPTY,(function (){var _STAR_references_STAR_251928 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251929 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,null], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,null], 0));

try{var _STAR_references_STAR_251930 = tailrecursion.hoplon.markdown._STAR_references_STAR_;
var _STAR_abbreviations_STAR_251931 = tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_;
tailrecursion.hoplon.markdown._STAR_references_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_references_STAR_,cljs.core.PersistentArrayMap.EMPTY], 0));

tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_,cljs.core.List.EMPTY], 0));

try{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__252028 = (function (){var G__252029 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$class,"highlight",cljs.core.cst$kw$style,"background: #f8f8f8"], null);
var G__252030 = (function (){var G__252031 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"line-height: 125%"], null);
var G__252032 = "(";
var G__252033 = (function (){var G__252077 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__252078 = "defn ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252077,G__252078) : tailrecursion.hoplon.span.call(null,G__252077,G__252078));
})();
var G__252034 = (function (){var G__252079 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252080 = "miller-rabin-prime?";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252079,G__252080) : tailrecursion.hoplon.span.call(null,G__252079,G__252080));
})();
var G__252035 = " [";
var G__252036 = (function (){var G__252081 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252082 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252081,G__252082) : tailrecursion.hoplon.span.call(null,G__252081,G__252082));
})();
var G__252037 = "]\n  (";
var G__252038 = (function (){var G__252083 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000; font-weight: bold"], null);
var G__252084 = "loop ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252083,G__252084) : tailrecursion.hoplon.span.call(null,G__252083,G__252084));
})();
var G__252039 = "[";
var G__252040 = (function (){var G__252085 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252086 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252085,G__252086) : tailrecursion.hoplon.span.call(null,G__252085,G__252086));
})();
var G__252041 = " ";
var G__252042 = (function (){var G__252087 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__252088 = "2";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252087,G__252088) : tailrecursion.hoplon.span.call(null,G__252087,G__252088));
})();
var G__252043 = "]\n    (";
var G__252044 = (function (){var G__252089 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__252090 = "cond ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252089,G__252090) : tailrecursion.hoplon.span.call(null,G__252089,G__252090));
})();
var G__252045 = "(";
var G__252046 = (function (){var G__252091 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__252092 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252091,G__252092) : tailrecursion.hoplon.span.call(null,G__252091,G__252092));
})();
var G__252047 = (function (){var G__252093 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252094 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252093,G__252094) : tailrecursion.hoplon.span.call(null,G__252093,G__252094));
})();
var G__252048 = " (";
var G__252049 = (function (){var G__252095 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__252096 = "- ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252095,G__252096) : tailrecursion.hoplon.span.call(null,G__252095,G__252096));
})();
var G__252050 = (function (){var G__252097 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252098 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252097,G__252098) : tailrecursion.hoplon.span.call(null,G__252097,G__252098));
})();
var G__252051 = " ";
var G__252052 = (function (){var G__252099 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__252100 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252099,G__252100) : tailrecursion.hoplon.span.call(null,G__252099,G__252100));
})();
var G__252053 = "))            ";
var G__252054 = (function (){var G__252101 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252102 = "true";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252101,G__252102) : tailrecursion.hoplon.span.call(null,G__252101,G__252102));
})();
var G__252055 = "\n          (";
var G__252056 = (function (){var G__252103 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__252104 = "= ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252103,G__252104) : tailrecursion.hoplon.span.call(null,G__252103,G__252104));
})();
var G__252057 = "(";
var G__252058 = (function (){var G__252105 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__252106 = "mod";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252105,G__252106) : tailrecursion.hoplon.span.call(null,G__252105,G__252106));
})();
var G__252059 = " (";
var G__252060 = (function (){var G__252107 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__252108 = "square";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252107,G__252108) : tailrecursion.hoplon.span.call(null,G__252107,G__252108));
})();
var G__252061 = " ";
var G__252062 = (function (){var G__252109 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252110 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252109,G__252110) : tailrecursion.hoplon.span.call(null,G__252109,G__252110));
})();
var G__252063 = ") ";
var G__252064 = (function (){var G__252111 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252112 = "n";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252111,G__252112) : tailrecursion.hoplon.span.call(null,G__252111,G__252112));
})();
var G__252065 = ") ";
var G__252066 = (function (){var G__252113 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #666666"], null);
var G__252114 = "1";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252113,G__252114) : tailrecursion.hoplon.span.call(null,G__252113,G__252114));
})();
var G__252067 = ") ";
var G__252068 = (function (){var G__252115 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252116 = "false";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252115,G__252116) : tailrecursion.hoplon.span.call(null,G__252115,G__252116));
})();
var G__252069 = "\n          ";
var G__252070 = (function (){var G__252117 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252118 = ":else";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252117,G__252118) : tailrecursion.hoplon.span.call(null,G__252117,G__252118));
})();
var G__252071 = "                    (";
var G__252072 = (function (){var G__252119 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #0000FF"], null);
var G__252120 = "recur";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252119,G__252120) : tailrecursion.hoplon.span.call(null,G__252119,G__252120));
})();
var G__252073 = " (";
var G__252074 = (function (){var G__252121 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #008000"], null);
var G__252122 = "inc ";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252121,G__252122) : tailrecursion.hoplon.span.call(null,G__252121,G__252122));
})();
var G__252075 = (function (){var G__252123 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$style,"color: #19177C"], null);
var G__252124 = "a";
return (tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.span.cljs$core$IFn$_invoke$arity$2(G__252123,G__252124) : tailrecursion.hoplon.span.call(null,G__252123,G__252124));
})();
var G__252076 = ")))))\n";
return (tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46 ? tailrecursion.hoplon.pre.cljs$core$IFn$_invoke$arity$46(G__252031,G__252032,G__252033,G__252034,G__252035,G__252036,G__252037,G__252038,G__252039,G__252040,G__252041,G__252042,G__252043,G__252044,G__252045,G__252046,G__252047,G__252048,G__252049,G__252050,G__252051,G__252052,G__252053,G__252054,G__252055,G__252056,G__252057,G__252058,G__252059,G__252060,G__252061,G__252062,G__252063,G__252064,G__252065,G__252066,G__252067,G__252068,G__252069,G__252070,G__252071,G__252072,G__252073,G__252074,G__252075,G__252076) : tailrecursion.hoplon.pre.call(null,G__252031,G__252032,G__252033,G__252034,G__252035,G__252036,G__252037,G__252038,G__252039,G__252040,G__252041,G__252042,G__252043,G__252044,G__252045,G__252046,G__252047,G__252048,G__252049,G__252050,G__252051,G__252052,G__252053,G__252054,G__252055,G__252056,G__252057,G__252058,G__252059,G__252060,G__252061,G__252062,G__252063,G__252064,G__252065,G__252066,G__252067,G__252068,G__252069,G__252070,G__252071,G__252072,G__252073,G__252074,G__252075,G__252076));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$2(G__252029,G__252030) : tailrecursion.hoplon.div.call(null,G__252029,G__252030));
})();
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$1(G__252028) : tailrecursion.hoplon.div.call(null,G__252028));
})()], null);
}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251931;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251930;
}}finally {tailrecursion.hoplon.markdown._STAR_abbreviations_STAR_ = _STAR_abbreviations_STAR_251929;

tailrecursion.hoplon.markdown._STAR_references_STAR_ = _STAR_references_STAR_251928;
}})()], 0))], 0))], 0));
return (tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31 ? tailrecursion.hoplon.div.cljs$core$IFn$_invoke$arity$31(G__238145,G__238146,G__238147,G__238148,G__238149,G__238150,G__238151,G__238152,G__238153,G__238154,G__238155,G__238156,G__238157,G__238158,G__238159,G__238160,G__238161,G__238162,G__238163,G__238164,G__238165,G__238166,G__238167,G__238168,G__238169,G__238170,G__238171,G__238172,G__238173,G__238174,G__238175) : tailrecursion.hoplon.div.call(null,G__238145,G__238146,G__238147,G__238148,G__238149,G__238150,G__238151,G__238152,G__238153,G__238154,G__238155,G__238156,G__238157,G__238158,G__238159,G__238160,G__238161,G__238162,G__238163,G__238164,G__238165,G__238166,G__238167,G__238168,G__238169,G__238170,G__238171,G__238172,G__238173,G__238174,G__238175));
};
var book$sicp$texts$ch1sect2$content = function (var_args){
var args__8262__auto__ = null;
if (arguments.length > 0) {
var G__252125__i = 0, G__252125__a = new Array(arguments.length -  0);
while (G__252125__i < G__252125__a.length) {G__252125__a[G__252125__i] = arguments[G__252125__i + 0]; ++G__252125__i;}
  args__8262__auto__ = new cljs.core.IndexedSeq(G__252125__a,0);
} 
return book$sicp$texts$ch1sect2$content__delegate.call(this,args__8262__auto__);};
book$sicp$texts$ch1sect2$content.cljs$lang$maxFixedArity = 0;
book$sicp$texts$ch1sect2$content.cljs$lang$applyTo = (function (arglist__252126){
var args__8262__auto__ = cljs.core.seq(arglist__252126);
return book$sicp$texts$ch1sect2$content__delegate(args__8262__auto__);
});
book$sicp$texts$ch1sect2$content.cljs$core$IFn$_invoke$arity$variadic = book$sicp$texts$ch1sect2$content__delegate;
return book$sicp$texts$ch1sect2$content;
})()
;
